#1
char Aclass(3,24)
Adymosim
1.4
Modelica experiment file


#    Experiment parameters
double experiment(7,1)
       0                   # StartTime    Time at which integration starts
                           #              (and linearization and trimming time)
       0                   # StopTime     Time at which integration stops
       0                   # Increment    Communication step size, if > 0
     100                   # nInterval    Number of communication intervals, if > 0
  1.0000000000000000E-04   # Tolerance    Relative precision of signals for
                           #              simulation, linearization and trimming
       0                   # MaxFixedStep Maximum step size of fixed step size
                           #              integrators, if > 0.0
       8                   # Algorithm    Integration algorithm as integer (1...28)
                           #
                           #             | model|       |        | dense | state |
                           # Algorithm   | typ  | stiff | order  | output| event |
                           # ------------+------+-------+--------+-------+-------+
                           #  1 | deabm  |  ode |   no  |  1-12  |  yes  |   no  |
                           #  2 | lsode1 |  ode |   no  |  1-12  |  yes  |   no  |
                           #  3 | lsode2 |  ode |  yes  |  1-5   |  yes  |   no  |
                           #  4 | lsodar |  ode |  both |1-12,1-5|  yes  |  yes  |
                           #  5 | dopri5 |  ode |   no  |   5    |   no  |   no  |
                           #  6 | dopri8 |  ode |   no  |   8    |   no  |   no  |
                           #  7 | grk4t  |  ode |  yes  |   4    |   no  |   no  |
                           #  8 | dassl  |  dae |  yes  |  1-5   |  yes  |  yes  |
                           #  9 | odassl | hdae |  yes  |  1-5   |  yes  |  yes  |
                           # 10 | mexx   | hdae |   no  |  2-24  |   no  |   no  |
                           # 11 | euler  |  ode |   no  |   1    |   no  |  yes  |
                           # 12 | rkfix2 |  ode |   no  |   2    |   no  |  yes  |
                           # 13 | rkfix3 |  ode |   no  |   3    |   no  |  yes  |
                           # 14 | rkfix4 |  ode |   no  |   4    |   no  |  yes  |
                           #>=14| others |  ode |yes/no |  2-5   |   yes |  yes  |
                           # ---+--------+------+-------+--------+-------+-------+
                           # euler and rkfix have fixed stepsize.


#    Method tuning parameters
double method(27,1)
       1                   # grid     type of communication time grid, defined by
                           #          = 1: equidistant points ("Increment/nInterval")
                           #          = 2: vector of grid points ("tgrid")
                           #          = 3: variable step integrator (automatically)
                           #          = 4: model (call of "increment" in Dymola, e.g.
                           #                      incr=Time > 2 then 0 else 0.1
                           #                      dummy=increment(incr))
                           #          grid = 1,3 is stopped by "StopTime"
                           #          grid = 2   is stopped by "tgrid(last)"
                           #          grid = 4   runs forever (stopped by model)
       1                   # nt       Use every NT time instant, if grid = 3
       3                   # dense    1/2/3 restart/step/interpolate GRID points
       1                   # evgrid   0/1 do not/save event points in comm. time grid
       1                   # evu      0/1 U-discontinuity does not/trigger events
       0                   # evuord       U-discontinuity order to consider (0,1,...)
       0                   # error    0/1/2 One message/warning/error messages
       0                   # jac      0/1 Compute jacobian numerically/by BLOCKJ
       0                   # xd0c     0/1 Compute/set XD0
       0                   # f3       0/1 Ignore/use F3 of HDAE (= index 1)
       0                   # f4       0/1 Ignore/use F4 of HDAE (= index 2)
       0                   # f5       0/1 Ignore/use F5 of HDAE (= invar.)
       0                   # debug    flags for debug information (1<<0 uses pdebug) 
     100                   # pdebug       priority of debug information (1...100)
       0                   # fmax     Maximum number of evaluations of BLOCKF, if > 0
       0                   # ordmax   Maximum allowed integration order, if > 0
       0                   # hmax     Maximum absolute stepsize, if > 0
       0                   # hmin     Minimum absolute stepsize, if > 0 (use with care!)
       0                   # h0       Stepsize to be attempted on first step, if > 0
  9.9999999999999998E-13   # teps     Bound to check, if 2 equal time instants
  1.0000000000000000E-10   # eveps    Hysteresis epsilon at event points
      20                   # eviter   Maximum number of event iterations
       0                   # delaym   Minimum time increment in delay buffers
       1                   # fexcep   0/1 floating exception crashes/stops dymosim
       1                   # tscale   clock-time = tscale*simulation-time, if grid = 5
                           #          > 1: simulation too slow
                           #          = 1: simulation-time = real-time
                           #          < 1: simulation too fast
       1                   # shared   (not used)
    2473                   # memkey   (not used)


#    Output parameters
int settings(13,1)
 0                         # lprec    0/1 do not/store result data in double
 1                         # lx       0/1 do not/store x  (state variables)
 1                         # lxd      0/1 do not/store xd (derivative of states)
 1                         # lu       0/1 do not/store u  (input     signals)
 1                         # ly       0/1 do not/store y  (output    signals)
 0                         # lz       0/1 do not/store z  (indicator signals)
 1                         # lw       0/1 do not/store w  (auxiliary signals)
 1                         # la       0/1 do not/store a  (alias     signals)
 0                         # lperf    0/1 do not/store performance indicators
 0                         # levent   0/1 do not/store event point
 1                         # lres     0/1 do not/store results on result file
 0                         # lshare   0/1 do not/store info data for shared memory on dsshare.txt
 1                         # lform    0/1 ASCII/Matlab-binary storage format of results
                           #              (for simulation/linearization; not for trimming)


#    Names of initial variables
char initialName(2073,63)
globalSeed.enableNoise
globalSeed.useAutomaticSeed
globalSeed.fixedSeed
globalSeed.seed
globalSeed.id_impure
SysData.S_b
SysData.fn
r
x
b
PF_results.voltages.V1
PF_results.voltages.A1
PF_results.voltages.V2
PF_results.voltages.A2
PF_results.voltages.V3
PF_results.voltages.A3
PF_results.voltages.V4
PF_results.voltages.A4
PF_results.voltages.V5
PF_results.voltages.A5
PF_results.voltages.V6
PF_results.voltages.A6
PF_results.voltages.V7
PF_results.voltages.A7
PF_results.voltages.V8
PF_results.voltages.A8
PF_results.voltages.V9
PF_results.voltages.A9
PF_results.voltages.V10
PF_results.voltages.A10
PF_results.voltages.V11
PF_results.voltages.A11
PF_results.machines.P1_1
PF_results.machines.Q1_1
PF_results.machines.P2_1
PF_results.machines.Q2_1
PF_results.machines.P3_1
PF_results.machines.Q3_1
PF_results.machines.P4_1
PF_results.machines.Q4_1
PF_results.loads.PL7_1
PF_results.loads.QL7_1
PF_results.loads.PL9_1
PF_results.loads.QL9_1
bus5.V_b
bus5.V_0
bus5.angle_0
bus5.P_0
bus5.Q_0
bus5.S_b
bus5.fn
bus5.p.vr
bus5.p.vi
bus5.p.ir
bus5.p.ii
bus5.V
bus5.angle
bus5.displayPF
bus6.V_b
bus6.V_0
bus6.angle_0
bus6.P_0
bus6.Q_0
bus6.S_b
bus6.fn
bus6.p.vr
bus6.p.vi
bus6.p.ir
bus6.p.ii
bus6.V
bus6.angle
bus6.displayPF
bus7.V_b
bus7.V_0
bus7.angle_0
bus7.P_0
bus7.Q_0
bus7.S_b
bus7.fn
bus7.p.vr
bus7.p.vi
bus7.p.ir
bus7.p.ii
bus7.V
bus7.angle
bus7.displayPF
bus8.V_b
bus8.V_0
bus8.angle_0
bus8.P_0
bus8.Q_0
bus8.S_b
bus8.fn
bus8.p.vr
bus8.p.vi
bus8.p.ir
bus8.p.ii
bus8.V
bus8.angle
bus8.displayPF
bus9.V_b
bus9.V_0
bus9.angle_0
bus9.P_0
bus9.Q_0
bus9.S_b
bus9.fn
bus9.p.vr
bus9.p.vi
bus9.p.ir
bus9.p.ii
bus9.V
bus9.angle
bus9.displayPF
bus10.V_b
bus10.V_0
bus10.angle_0
bus10.P_0
bus10.Q_0
bus10.S_b
bus10.fn
bus10.p.vr
bus10.p.vi
bus10.p.ir
bus10.p.ii
bus10.V
bus10.angle
bus10.displayPF
bus11.V_b
bus11.V_0
bus11.angle_0
bus11.P_0
bus11.Q_0
bus11.S_b
bus11.fn
bus11.p.vr
bus11.p.vi
bus11.p.ir
bus11.p.ii
bus11.V
bus11.angle
bus11.displayPF
g1.V_b
g1.V_0
g1.angle_0
g1.P_0
g1.Q_0
g1.S_b
g1.fn
g1.pwPin.vr
g1.pwPin.vi
g1.pwPin.ir
g1.pwPin.ii
g1.gENSAL.V_b
g1.gENSAL.V_0
g1.gENSAL.angle_0
g1.gENSAL.P_0
g1.gENSAL.Q_0
g1.gENSAL.S_b
g1.gENSAL.fn
g1.gENSAL.M_b
g1.gENSAL.Tpd0
g1.gENSAL.Tppd0
g1.gENSAL.Tppq0
g1.gENSAL.H
g1.gENSAL.D
g1.gENSAL.Xd
g1.gENSAL.Xq
g1.gENSAL.Xpd
g1.gENSAL.Xppd
g1.gENSAL.Xppq
g1.gENSAL.Xl
g1.gENSAL.S10
g1.gENSAL.S12
g1.gENSAL.R_a
g1.gENSAL.ETERM
g1.gENSAL.PELEC
g1.gENSAL.ISORCE
g1.gENSAL.w
g1.gENSAL.der(w)
g1.gENSAL.delta
g1.gENSAL.der(delta)
g1.gENSAL.anglev
g1.gENSAL.I
g1.gENSAL.anglei
g1.gENSAL.P
g1.gENSAL.Q
g1.gENSAL.Te
g1.gENSAL.id
g1.gENSAL.iq
g1.gENSAL.ud
g1.gENSAL.uq
g1.gENSAL.w_b
g1.gENSAL.anglev_rad
g1.gENSAL.CoB
g1.gENSAL.vr0
g1.gENSAL.vi0
g1.gENSAL.ir0
g1.gENSAL.ii0
g1.gENSAL.p0
g1.gENSAL.q0
g1.gENSAL.Epq
g1.gENSAL.der(Epq)
g1.gENSAL.PSIkd
g1.gENSAL.der(PSIkd)
g1.gENSAL.PSIppq
g1.gENSAL.der(PSIppq)
g1.gENSAL.PSIppd
g1.gENSAL.PSId
g1.gENSAL.PSIq
g1.gENSAL.Zs.re
g1.gENSAL.Zs.im
g1.gENSAL.Is.re
g1.gENSAL.Is.im
g1.gENSAL.PSIpp0.re
g1.gENSAL.PSIpp0.im
g1.gENSAL.a.re
g1.gENSAL.a.im
g1.gENSAL.Epqp.re
g1.gENSAL.Epqp.im
g1.gENSAL.delta0
g1.gENSAL.VT.re
g1.gENSAL.VT.im
g1.gENSAL.S.re
g1.gENSAL.S.im
g1.gENSAL.It.re
g1.gENSAL.It.im
g1.gENSAL.DQ_dq.re
g1.gENSAL.DQ_dq.im
g1.gENSAL.I_dq.re
g1.gENSAL.I_dq.im
g1.gENSAL.iq0
g1.gENSAL.id0
g1.gENSAL.ud0
g1.gENSAL.uq0
g1.gENSAL.PSIpp0_dq.re
g1.gENSAL.PSIpp0_dq.im
g1.gENSAL.PSIppq0
g1.gENSAL.PSIppd0
g1.gENSAL.PSIkd0
g1.gENSAL.PSId0
g1.gENSAL.PSIq0
g1.gENSAL.Epq0
g1.gENSAL.dsat
g1.gENSAL.efd0
g1.gENSAL.pm0
g1.gENSAL.K1d
g1.gENSAL.K2d
g1.gENSAL.K3d
g1.gENSAL.K4d
g2.V_b
g2.V_0
g2.angle_0
g2.P_0
g2.Q_0
g2.S_b
g2.fn
g2.pwPin.vr
g2.pwPin.vi
g2.pwPin.ir
g2.pwPin.ii
g2.gENSAL.V_b
g2.gENSAL.V_0
g2.gENSAL.angle_0
g2.gENSAL.P_0
g2.gENSAL.Q_0
g2.gENSAL.S_b
g2.gENSAL.fn
g2.gENSAL.M_b
g2.gENSAL.Tpd0
g2.gENSAL.Tppd0
g2.gENSAL.Tppq0
g2.gENSAL.H
g2.gENSAL.D
g2.gENSAL.Xd
g2.gENSAL.Xq
g2.gENSAL.Xpd
g2.gENSAL.Xppd
g2.gENSAL.Xppq
g2.gENSAL.Xl
g2.gENSAL.S10
g2.gENSAL.S12
g2.gENSAL.R_a
g2.gENSAL.ETERM
g2.gENSAL.PELEC
g2.gENSAL.ISORCE
g2.gENSAL.w
g2.gENSAL.der(w)
g2.gENSAL.delta
g2.gENSAL.der(delta)
g2.gENSAL.anglev
g2.gENSAL.I
g2.gENSAL.anglei
g2.gENSAL.P
g2.gENSAL.Q
g2.gENSAL.Te
g2.gENSAL.id
g2.gENSAL.iq
g2.gENSAL.ud
g2.gENSAL.uq
g2.gENSAL.w_b
g2.gENSAL.anglev_rad
g2.gENSAL.CoB
g2.gENSAL.vr0
g2.gENSAL.vi0
g2.gENSAL.ir0
g2.gENSAL.ii0
g2.gENSAL.p0
g2.gENSAL.q0
g2.gENSAL.Epq
g2.gENSAL.der(Epq)
g2.gENSAL.PSIkd
g2.gENSAL.der(PSIkd)
g2.gENSAL.PSIppq
g2.gENSAL.der(PSIppq)
g2.gENSAL.PSIppd
g2.gENSAL.PSId
g2.gENSAL.PSIq
g2.gENSAL.Zs.re
g2.gENSAL.Zs.im
g2.gENSAL.Is.re
g2.gENSAL.Is.im
g2.gENSAL.PSIpp0.re
g2.gENSAL.PSIpp0.im
g2.gENSAL.a.re
g2.gENSAL.a.im
g2.gENSAL.Epqp.re
g2.gENSAL.Epqp.im
g2.gENSAL.delta0
g2.gENSAL.VT.re
g2.gENSAL.VT.im
g2.gENSAL.S.re
g2.gENSAL.S.im
g2.gENSAL.It.re
g2.gENSAL.It.im
g2.gENSAL.DQ_dq.re
g2.gENSAL.DQ_dq.im
g2.gENSAL.I_dq.re
g2.gENSAL.I_dq.im
g2.gENSAL.iq0
g2.gENSAL.id0
g2.gENSAL.ud0
g2.gENSAL.uq0
g2.gENSAL.PSIpp0_dq.re
g2.gENSAL.PSIpp0_dq.im
g2.gENSAL.PSIppq0
g2.gENSAL.PSIppd0
g2.gENSAL.PSIkd0
g2.gENSAL.PSId0
g2.gENSAL.PSIq0
g2.gENSAL.Epq0
g2.gENSAL.dsat
g2.gENSAL.efd0
g2.gENSAL.pm0
g2.gENSAL.K1d
g2.gENSAL.K2d
g2.gENSAL.K3d
g2.gENSAL.K4d
g3.V_b
g3.V_0
g3.angle_0
g3.P_0
g3.Q_0
g3.S_b
g3.fn
g3.pwPin.vr
g3.pwPin.vi
g3.pwPin.ir
g3.pwPin.ii
g3.gENSAL.V_b
g3.gENSAL.V_0
g3.gENSAL.angle_0
g3.gENSAL.P_0
g3.gENSAL.Q_0
g3.gENSAL.S_b
g3.gENSAL.fn
g3.gENSAL.M_b
g3.gENSAL.Tpd0
g3.gENSAL.Tppd0
g3.gENSAL.Tppq0
g3.gENSAL.H
g3.gENSAL.D
g3.gENSAL.Xd
g3.gENSAL.Xq
g3.gENSAL.Xpd
g3.gENSAL.Xppd
g3.gENSAL.Xppq
g3.gENSAL.Xl
g3.gENSAL.S10
g3.gENSAL.S12
g3.gENSAL.R_a
g3.gENSAL.ETERM
g3.gENSAL.PELEC
g3.gENSAL.ISORCE
g3.gENSAL.w
g3.gENSAL.der(w)
g3.gENSAL.delta
g3.gENSAL.der(delta)
g3.gENSAL.anglev
g3.gENSAL.I
g3.gENSAL.anglei
g3.gENSAL.P
g3.gENSAL.Q
g3.gENSAL.Te
g3.gENSAL.id
g3.gENSAL.iq
g3.gENSAL.ud
g3.gENSAL.uq
g3.gENSAL.w_b
g3.gENSAL.anglev_rad
g3.gENSAL.CoB
g3.gENSAL.vr0
g3.gENSAL.vi0
g3.gENSAL.ir0
g3.gENSAL.ii0
g3.gENSAL.p0
g3.gENSAL.q0
g3.gENSAL.Epq
g3.gENSAL.der(Epq)
g3.gENSAL.PSIkd
g3.gENSAL.der(PSIkd)
g3.gENSAL.PSIppq
g3.gENSAL.der(PSIppq)
g3.gENSAL.PSIppd
g3.gENSAL.PSId
g3.gENSAL.PSIq
g3.gENSAL.Zs.re
g3.gENSAL.Zs.im
g3.gENSAL.Is.re
g3.gENSAL.Is.im
g3.gENSAL.PSIpp0.re
g3.gENSAL.PSIpp0.im
g3.gENSAL.a.re
g3.gENSAL.a.im
g3.gENSAL.Epqp.re
g3.gENSAL.Epqp.im
g3.gENSAL.delta0
g3.gENSAL.VT.re
g3.gENSAL.VT.im
g3.gENSAL.S.re
g3.gENSAL.S.im
g3.gENSAL.It.re
g3.gENSAL.It.im
g3.gENSAL.DQ_dq.re
g3.gENSAL.DQ_dq.im
g3.gENSAL.I_dq.re
g3.gENSAL.I_dq.im
g3.gENSAL.iq0
g3.gENSAL.id0
g3.gENSAL.ud0
g3.gENSAL.uq0
g3.gENSAL.PSIpp0_dq.re
g3.gENSAL.PSIpp0_dq.im
g3.gENSAL.PSIppq0
g3.gENSAL.PSIppd0
g3.gENSAL.PSIkd0
g3.gENSAL.PSId0
g3.gENSAL.PSIq0
g3.gENSAL.Epq0
g3.gENSAL.dsat
g3.gENSAL.efd0
g3.gENSAL.pm0
g3.gENSAL.K1d
g3.gENSAL.K2d
g3.gENSAL.K3d
g3.gENSAL.K4d
g4.V_b
g4.V_0
g4.angle_0
g4.P_0
g4.Q_0
g4.S_b
g4.fn
g4.pwPin.vr
g4.pwPin.vi
g4.pwPin.ir
g4.pwPin.ii
g4.gENSAL.V_b
g4.gENSAL.V_0
g4.gENSAL.angle_0
g4.gENSAL.P_0
g4.gENSAL.Q_0
g4.gENSAL.S_b
g4.gENSAL.fn
g4.gENSAL.M_b
g4.gENSAL.Tpd0
g4.gENSAL.Tppd0
g4.gENSAL.Tppq0
g4.gENSAL.H
g4.gENSAL.D
g4.gENSAL.Xd
g4.gENSAL.Xq
g4.gENSAL.Xpd
g4.gENSAL.Xppd
g4.gENSAL.Xppq
g4.gENSAL.Xl
g4.gENSAL.S10
g4.gENSAL.S12
g4.gENSAL.R_a
g4.gENSAL.ETERM
g4.gENSAL.PELEC
g4.gENSAL.ISORCE
g4.gENSAL.w
g4.gENSAL.der(w)
g4.gENSAL.delta
g4.gENSAL.der(delta)
g4.gENSAL.anglev
g4.gENSAL.I
g4.gENSAL.anglei
g4.gENSAL.P
g4.gENSAL.Q
g4.gENSAL.Te
g4.gENSAL.id
g4.gENSAL.iq
g4.gENSAL.ud
g4.gENSAL.uq
g4.gENSAL.w_b
g4.gENSAL.anglev_rad
g4.gENSAL.CoB
g4.gENSAL.vr0
g4.gENSAL.vi0
g4.gENSAL.ir0
g4.gENSAL.ii0
g4.gENSAL.p0
g4.gENSAL.q0
g4.gENSAL.Epq
g4.gENSAL.der(Epq)
g4.gENSAL.PSIkd
g4.gENSAL.der(PSIkd)
g4.gENSAL.PSIppq
g4.gENSAL.der(PSIppq)
g4.gENSAL.PSIppd
g4.gENSAL.PSId
g4.gENSAL.PSIq
g4.gENSAL.Zs.re
g4.gENSAL.Zs.im
g4.gENSAL.Is.re
g4.gENSAL.Is.im
g4.gENSAL.PSIpp0.re
g4.gENSAL.PSIpp0.im
g4.gENSAL.a.re
g4.gENSAL.a.im
g4.gENSAL.Epqp.re
g4.gENSAL.Epqp.im
g4.gENSAL.delta0
g4.gENSAL.VT.re
g4.gENSAL.VT.im
g4.gENSAL.S.re
g4.gENSAL.S.im
g4.gENSAL.It.re
g4.gENSAL.It.im
g4.gENSAL.DQ_dq.re
g4.gENSAL.DQ_dq.im
g4.gENSAL.I_dq.re
g4.gENSAL.I_dq.im
g4.gENSAL.iq0
g4.gENSAL.id0
g4.gENSAL.ud0
g4.gENSAL.uq0
g4.gENSAL.PSIpp0_dq.re
g4.gENSAL.PSIpp0_dq.im
g4.gENSAL.PSIppq0
g4.gENSAL.PSIppd0
g4.gENSAL.PSIkd0
g4.gENSAL.PSId0
g4.gENSAL.PSIq0
g4.gENSAL.Epq0
g4.gENSAL.dsat
g4.gENSAL.efd0
g4.gENSAL.pm0
g4.gENSAL.K1d
g4.gENSAL.K2d
g4.gENSAL.K3d
g4.gENSAL.K4d
Line6_7.p.ir
Line6_7.p.ii
Line6_7.n.ir
Line6_7.n.ii
Line6_7.R
Line6_7.X
Line6_7.G
Line6_7.B
Line6_7.S_b
Line6_7.t1
Line6_7.t2
Line6_7.opening
Line6_7.displayPF
Line6_7.P12
Line6_7.P21
Line6_7.Q12
Line6_7.Q21
Line6_7.Y.re
Line6_7.Y.im
Line6_7.Z.re
Line6_7.Z.im
Line5_6.p.ir
Line5_6.p.ii
Line5_6.n.ir
Line5_6.n.ii
Line5_6.R
Line5_6.X
Line5_6.G
Line5_6.B
Line5_6.S_b
Line5_6.t1
Line5_6.t2
Line5_6.opening
Line5_6.displayPF
Line5_6.P12
Line5_6.P21
Line5_6.Q12
Line5_6.Q21
Line5_6.Y.re
Line5_6.Y.im
Line5_6.Z.re
Line5_6.Z.im
Line7_8_1.p.ir
Line7_8_1.p.ii
Line7_8_1.n.ir
Line7_8_1.n.ii
Line7_8_1.R
Line7_8_1.X
Line7_8_1.G
Line7_8_1.B
Line7_8_1.S_b
Line7_8_1.t1
Line7_8_1.t2
Line7_8_1.opening
Line7_8_1.displayPF
Line7_8_1.P12
Line7_8_1.P21
Line7_8_1.Q12
Line7_8_1.Q21
Line7_8_1.Y.re
Line7_8_1.Y.im
Line7_8_1.Z.re
Line7_8_1.Z.im
Line7_8_2.p.ir
Line7_8_2.p.ii
Line7_8_2.n.ir
Line7_8_2.n.ii
Line7_8_2.R
Line7_8_2.X
Line7_8_2.G
Line7_8_2.B
Line7_8_2.S_b
Line7_8_2.t1
Line7_8_2.t2
Line7_8_2.opening
Line7_8_2.displayPF
Line7_8_2.P12
Line7_8_2.P21
Line7_8_2.Q12
Line7_8_2.Q21
Line7_8_2.Y.re
Line7_8_2.Y.im
Line7_8_2.Z.re
Line7_8_2.Z.im
Line8_9_2.p.ir
Line8_9_2.p.ii
Line8_9_2.n.ir
Line8_9_2.n.ii
Line8_9_2.R
Line8_9_2.X
Line8_9_2.G
Line8_9_2.B
Line8_9_2.S_b
Line8_9_2.t1
Line8_9_2.t2
Line8_9_2.opening
Line8_9_2.displayPF
Line8_9_2.P12
Line8_9_2.P21
Line8_9_2.Q12
Line8_9_2.Q21
Line8_9_2.Y.re
Line8_9_2.Y.im
Line8_9_2.Z.re
Line8_9_2.Z.im
Line8_9_1.p.ir
Line8_9_1.p.ii
Line8_9_1.n.ir
Line8_9_1.n.ii
Line8_9_1.R
Line8_9_1.X
Line8_9_1.G
Line8_9_1.B
Line8_9_1.S_b
Line8_9_1.t1
Line8_9_1.t2
Line8_9_1.opening
Line8_9_1.displayPF
Line8_9_1.P12
Line8_9_1.P21
Line8_9_1.Q12
Line8_9_1.Q21
Line8_9_1.Y.re
Line8_9_1.Y.im
Line8_9_1.Z.re
Line8_9_1.Z.im
Line9_10.p.ir
Line9_10.p.ii
Line9_10.n.ir
Line9_10.n.ii
Line9_10.R
Line9_10.X
Line9_10.G
Line9_10.B
Line9_10.S_b
Line9_10.t1
Line9_10.t2
Line9_10.opening
Line9_10.displayPF
Line9_10.P12
Line9_10.P21
Line9_10.Q12
Line9_10.Q21
Line9_10.Y.re
Line9_10.Y.im
Line9_10.Z.re
Line9_10.Z.im
Line10_11.p.ir
Line10_11.p.ii
Line10_11.n.ir
Line10_11.n.ii
Line10_11.R
Line10_11.X
Line10_11.G
Line10_11.B
Line10_11.S_b
Line10_11.t1
Line10_11.t2
Line10_11.opening
Line10_11.displayPF
Line10_11.P12
Line10_11.P21
Line10_11.Q12
Line10_11.Q21
Line10_11.Y.re
Line10_11.Y.im
Line10_11.Z.re
Line10_11.Z.im
Load7.V_b
Load7.V_0
Load7.angle_0
Load7.P_0
Load7.Q_0
Load7.S_b
Load7.fn
Load7.S_p.re
Load7.S_p.im
Load7.S_i.re
Load7.S_i.im
Load7.S_y.re
Load7.S_y.im
Load7.a.re
Load7.a.im
Load7.b.re
Load7.b.im
Load7.PQBRAK
Load7.characteristic
Load7.p.ir
Load7.p.ii
Load7.angle
Load7.v
Load7.P
Load7.Q
Load7.anglev_rad
Load7.p0
Load7.q0
Load7.vr0
Load7.vi0
Load7.ir0
Load7.ii0
Load7.S_P.re
Load7.S_P.im
Load7.S_I.re
Load7.S_I.im
Load7.S_Y.re
Load7.S_Y.im
Load7.a2
Load7.b2
Load7.a0
Load7.a1
Load7.b1
Load7.wp
Load7.kP
Load7.kI
Load9.V_b
Load9.V_0
Load9.angle_0
Load9.P_0
Load9.Q_0
Load9.S_b
Load9.fn
Load9.S_p.re
Load9.S_p.im
Load9.S_i.re
Load9.S_i.im
Load9.S_y.re
Load9.S_y.im
Load9.a.re
Load9.a.im
Load9.b.re
Load9.b.im
Load9.PQBRAK
Load9.characteristic
Load9.p.ir
Load9.p.ii
Load9.angle
Load9.v
Load9.P
Load9.Q
Load9.anglev_rad
Load9.p0
Load9.q0
Load9.vr0
Load9.vi0
Load9.ir0
Load9.ii0
Load9.S_P.re
Load9.S_P.im
Load9.S_I.re
Load9.S_I.im
Load9.S_Y.re
Load9.S_Y.im
Load9.a2
Load9.b2
Load9.a0
Load9.a1
Load9.b1
Load9.wp
Load9.kP
Load9.kI
Line5_1.R
Line5_1.X
Line5_1.G
Line5_1.B
Line5_1.S_b
Line5_1.t1
Line5_1.t2
Line5_1.opening
Line5_1.displayPF
Line5_1.P12
Line5_1.P21
Line5_1.Q12
Line5_1.Q21
Line5_1.Y.re
Line5_1.Y.im
Line5_1.Z.re
Line5_1.Z.im
Line5_2.p.ir
Line5_2.p.ii
Line5_2.n.ir
Line5_2.n.ii
Line5_2.R
Line5_2.X
Line5_2.G
Line5_2.B
Line5_2.S_b
Line5_2.t1
Line5_2.t2
Line5_2.opening
Line5_2.displayPF
Line5_2.P12
Line5_2.P21
Line5_2.Q12
Line5_2.Q21
Line5_2.Y.re
Line5_2.Y.im
Line5_2.Z.re
Line5_2.Z.im
Line5_3.n.ir
Line5_3.n.ii
Line5_3.R
Line5_3.X
Line5_3.G
Line5_3.B
Line5_3.S_b
Line5_3.t1
Line5_3.t2
Line5_3.opening
Line5_3.displayPF
Line5_3.P12
Line5_3.P21
Line5_3.Q12
Line5_3.Q21
Line5_3.Y.re
Line5_3.Y.im
Line5_3.Z.re
Line5_3.Z.im
Line5_4.p.ir
Line5_4.p.ii
Line5_4.R
Line5_4.X
Line5_4.G
Line5_4.B
Line5_4.S_b
Line5_4.t1
Line5_4.t2
Line5_4.opening
Line5_4.displayPF
Line5_4.P12
Line5_4.P21
Line5_4.Q12
Line5_4.Q21
Line5_4.Y.re
Line5_4.Y.im
Line5_4.Z.re
Line5_4.Z.im
bus1.V_b
bus1.V_0
bus1.angle_0
bus1.P_0
bus1.Q_0
bus1.S_b
bus1.fn
bus1.p.ir
bus1.p.ii
bus1.V
bus1.angle
bus1.displayPF
bus2.V_b
bus2.V_0
bus2.angle_0
bus2.P_0
bus2.Q_0
bus2.S_b
bus2.fn
bus2.p.ir
bus2.p.ii
bus2.V
bus2.angle
bus2.displayPF
bus3.V_b
bus3.V_0
bus3.angle_0
bus3.P_0
bus3.Q_0
bus3.S_b
bus3.fn
bus3.p.ir
bus3.p.ii
bus3.V
bus3.angle
bus3.displayPF
bus4.V_b
bus4.V_0
bus4.angle_0
bus4.P_0
bus4.Q_0
bus4.S_b
bus4.fn
bus4.p.ir
bus4.p.ii
bus4.V
bus4.angle
bus4.displayPF
multisine_Noise_Simu.generateMultiSine_P.h
multisine_Noise_Simu.generateMultiSine_P.ll
multisine_Noise_Simu.generateMultiSine_P.M
multisine_Noise_Simu.generateMultiSine_P.L
multisine_Noise_Simu.generateMultiSine_P.y
multisine_Noise_Simu.normalNoise_P.y
multisine_Noise_Simu.normalNoise_P.samplePeriod
multisine_Noise_Simu.normalNoise_P.enableNoise
multisine_Noise_Simu.normalNoise_P.y_off
multisine_Noise_Simu.normalNoise_P.useGlobalSeed
multisine_Noise_Simu.normalNoise_P.useAutomaticLocalSeed
multisine_Noise_Simu.normalNoise_P.fixedLocalSeed
multisine_Noise_Simu.normalNoise_P.startTime
multisine_Noise_Simu.normalNoise_P.localSeed
multisine_Noise_Simu.normalNoise_P.actualGlobalSeed
multisine_Noise_Simu.normalNoise_P.generateNoise
multisine_Noise_Simu.normalNoise_P.state[1]
multisine_Noise_Simu.normalNoise_P.state[2]
multisine_Noise_Simu.normalNoise_P.state[3]
multisine_Noise_Simu.normalNoise_P.state[4]
multisine_Noise_Simu.normalNoise_P.r
multisine_Noise_Simu.normalNoise_P.r_raw
multisine_Noise_Simu.normalNoise_P.mu
multisine_Noise_Simu.normalNoise_P.sigma
multisine_Noise_Simu.sum_P.nin
multisine_Noise_Simu.sum_P.u[1]
multisine_Noise_Simu.sum_P.y
multisine_Noise_Simu.sum_P.k[1]
multisine_Noise_Simu.sum_P.k[2]
multisine_Noise_Simu.vSC_inj.t_Pstart
multisine_Noise_Simu.vSC_inj.t_Qstart
multisine_Noise_Simu.vSC_inj.Qinj
multisine_Noise_Simu.vSC_inj.f1
multisine_Noise_Simu.vSC_inj.f2
multisine_Noise_Simu.vSC_inj.G
multisine_Noise_Simu.vSC_inj.signalCurrent_phasor1.p.vr
multisine_Noise_Simu.vSC_inj.signalCurrent_phasor1.p.vi
multisine_Noise_Simu.vSC_inj.signalCurrent_phasor1.zero.re
multisine_Noise_Simu.vSC_inj.signalCurrent_phasor1.zero.im
multisine_Noise_Simu.vSC_inj.signalCurrent_phasor1.vs.re
multisine_Noise_Simu.vSC_inj.signalCurrent_phasor1.vs.im
multisine_Noise_Simu.vSC_inj.signalCurrent_phasor1.V
multisine_Noise_Simu.vSC_inj.ground_phasor1.p.vr
multisine_Noise_Simu.vSC_inj.ground_phasor1.p.vi
multisine_Noise_Simu.vSC_inj.ground_phasor1.vs.re
multisine_Noise_Simu.vSC_inj.ground_phasor1.vs.im
multisine_Noise_Simu.normalNoise_Q.y
multisine_Noise_Simu.normalNoise_Q.samplePeriod
multisine_Noise_Simu.normalNoise_Q.enableNoise
multisine_Noise_Simu.normalNoise_Q.y_off
multisine_Noise_Simu.normalNoise_Q.useGlobalSeed
multisine_Noise_Simu.normalNoise_Q.useAutomaticLocalSeed
multisine_Noise_Simu.normalNoise_Q.fixedLocalSeed
multisine_Noise_Simu.normalNoise_Q.startTime
multisine_Noise_Simu.normalNoise_Q.localSeed
multisine_Noise_Simu.normalNoise_Q.actualGlobalSeed
multisine_Noise_Simu.normalNoise_Q.generateNoise
multisine_Noise_Simu.normalNoise_Q.state[1]
multisine_Noise_Simu.normalNoise_Q.state[2]
multisine_Noise_Simu.normalNoise_Q.state[3]
multisine_Noise_Simu.normalNoise_Q.state[4]
multisine_Noise_Simu.normalNoise_Q.r
multisine_Noise_Simu.normalNoise_Q.r_raw
multisine_Noise_Simu.normalNoise_Q.mu
multisine_Noise_Simu.normalNoise_Q.sigma
multisine_Noise_Simu.generateMultiSine_Q.h
multisine_Noise_Simu.generateMultiSine_Q.ll
multisine_Noise_Simu.generateMultiSine_Q.M
multisine_Noise_Simu.generateMultiSine_Q.L
multisine_Noise_Simu.generateMultiSine_Q.A[1, 1]
multisine_Noise_Simu.generateMultiSine_Q.A[1, 2]
multisine_Noise_Simu.generateMultiSine_Q.A[1, 3]
multisine_Noise_Simu.generateMultiSine_Q.A[1, 4]
multisine_Noise_Simu.generateMultiSine_Q.A[1, 5]
multisine_Noise_Simu.generateMultiSine_Q.A[1, 6]
multisine_Noise_Simu.generateMultiSine_Q.A[1, 7]
multisine_Noise_Simu.generateMultiSine_Q.A[1, 8]
multisine_Noise_Simu.generateMultiSine_Q.A[1, 9]
multisine_Noise_Simu.generateMultiSine_Q.A[1, 10]
multisine_Noise_Simu.generateMultiSine_Q.A[1, 11]
multisine_Noise_Simu.generateMultiSine_Q.A[1, 12]
multisine_Noise_Simu.generateMultiSine_Q.A[1, 13]
multisine_Noise_Simu.generateMultiSine_Q.A[1, 14]
multisine_Noise_Simu.generateMultiSine_Q.A[1, 15]
multisine_Noise_Simu.generateMultiSine_Q.A[1, 16]
multisine_Noise_Simu.generateMultiSine_Q.A[1, 17]
multisine_Noise_Simu.generateMultiSine_Q.A[1, 18]
multisine_Noise_Simu.generateMultiSine_Q.A[1, 19]
multisine_Noise_Simu.generateMultiSine_Q.A[1, 20]
multisine_Noise_Simu.generateMultiSine_Q.A[1, 21]
multisine_Noise_Simu.generateMultiSine_Q.A[1, 22]
multisine_Noise_Simu.generateMultiSine_Q.A[1, 23]
multisine_Noise_Simu.generateMultiSine_Q.A[1, 24]
multisine_Noise_Simu.generateMultiSine_Q.A[1, 25]
multisine_Noise_Simu.generateMultiSine_Q.A[1, 26]
multisine_Noise_Simu.generateMultiSine_Q.A[1, 27]
multisine_Noise_Simu.generateMultiSine_Q.A[1, 28]
multisine_Noise_Simu.generateMultiSine_Q.A[1, 29]
multisine_Noise_Simu.generateMultiSine_Q.A[1, 30]
multisine_Noise_Simu.generateMultiSine_Q.A[2, 1]
multisine_Noise_Simu.generateMultiSine_Q.A[2, 2]
multisine_Noise_Simu.generateMultiSine_Q.A[2, 3]
multisine_Noise_Simu.generateMultiSine_Q.A[2, 4]
multisine_Noise_Simu.generateMultiSine_Q.A[2, 5]
multisine_Noise_Simu.generateMultiSine_Q.A[2, 6]
multisine_Noise_Simu.generateMultiSine_Q.A[2, 7]
multisine_Noise_Simu.generateMultiSine_Q.A[2, 8]
multisine_Noise_Simu.generateMultiSine_Q.A[2, 9]
multisine_Noise_Simu.generateMultiSine_Q.A[2, 10]
multisine_Noise_Simu.generateMultiSine_Q.A[2, 11]
multisine_Noise_Simu.generateMultiSine_Q.A[2, 12]
multisine_Noise_Simu.generateMultiSine_Q.A[2, 13]
multisine_Noise_Simu.generateMultiSine_Q.A[2, 14]
multisine_Noise_Simu.generateMultiSine_Q.A[2, 15]
multisine_Noise_Simu.generateMultiSine_Q.A[2, 16]
multisine_Noise_Simu.generateMultiSine_Q.A[2, 17]
multisine_Noise_Simu.generateMultiSine_Q.A[2, 18]
multisine_Noise_Simu.generateMultiSine_Q.A[2, 19]
multisine_Noise_Simu.generateMultiSine_Q.A[2, 20]
multisine_Noise_Simu.generateMultiSine_Q.A[2, 21]
multisine_Noise_Simu.generateMultiSine_Q.A[2, 22]
multisine_Noise_Simu.generateMultiSine_Q.A[2, 23]
multisine_Noise_Simu.generateMultiSine_Q.A[2, 24]
multisine_Noise_Simu.generateMultiSine_Q.A[2, 25]
multisine_Noise_Simu.generateMultiSine_Q.A[2, 26]
multisine_Noise_Simu.generateMultiSine_Q.A[2, 27]
multisine_Noise_Simu.generateMultiSine_Q.A[2, 28]
multisine_Noise_Simu.generateMultiSine_Q.A[2, 29]
multisine_Noise_Simu.generateMultiSine_Q.A[2, 30]
multisine_Noise_Simu.generateMultiSine_Q.A[3, 1]
multisine_Noise_Simu.generateMultiSine_Q.A[3, 2]
multisine_Noise_Simu.generateMultiSine_Q.A[3, 3]
multisine_Noise_Simu.generateMultiSine_Q.A[3, 4]
multisine_Noise_Simu.generateMultiSine_Q.A[3, 5]
multisine_Noise_Simu.generateMultiSine_Q.A[3, 6]
multisine_Noise_Simu.generateMultiSine_Q.A[3, 7]
multisine_Noise_Simu.generateMultiSine_Q.A[3, 8]
multisine_Noise_Simu.generateMultiSine_Q.A[3, 9]
multisine_Noise_Simu.generateMultiSine_Q.A[3, 10]
multisine_Noise_Simu.generateMultiSine_Q.A[3, 11]
multisine_Noise_Simu.generateMultiSine_Q.A[3, 12]
multisine_Noise_Simu.generateMultiSine_Q.A[3, 13]
multisine_Noise_Simu.generateMultiSine_Q.A[3, 14]
multisine_Noise_Simu.generateMultiSine_Q.A[3, 15]
multisine_Noise_Simu.generateMultiSine_Q.A[3, 16]
multisine_Noise_Simu.generateMultiSine_Q.A[3, 17]
multisine_Noise_Simu.generateMultiSine_Q.A[3, 18]
multisine_Noise_Simu.generateMultiSine_Q.A[3, 19]
multisine_Noise_Simu.generateMultiSine_Q.A[3, 20]
multisine_Noise_Simu.generateMultiSine_Q.A[3, 21]
multisine_Noise_Simu.generateMultiSine_Q.A[3, 22]
multisine_Noise_Simu.generateMultiSine_Q.A[3, 23]
multisine_Noise_Simu.generateMultiSine_Q.A[3, 24]
multisine_Noise_Simu.generateMultiSine_Q.A[3, 25]
multisine_Noise_Simu.generateMultiSine_Q.A[3, 26]
multisine_Noise_Simu.generateMultiSine_Q.A[3, 27]
multisine_Noise_Simu.generateMultiSine_Q.A[3, 28]
multisine_Noise_Simu.generateMultiSine_Q.A[3, 29]
multisine_Noise_Simu.generateMultiSine_Q.A[3, 30]
multisine_Noise_Simu.generateMultiSine_Q.A[4, 1]
multisine_Noise_Simu.generateMultiSine_Q.A[4, 2]
multisine_Noise_Simu.generateMultiSine_Q.A[4, 3]
multisine_Noise_Simu.generateMultiSine_Q.A[4, 4]
multisine_Noise_Simu.generateMultiSine_Q.A[4, 5]
multisine_Noise_Simu.generateMultiSine_Q.A[4, 6]
multisine_Noise_Simu.generateMultiSine_Q.A[4, 7]
multisine_Noise_Simu.generateMultiSine_Q.A[4, 8]
multisine_Noise_Simu.generateMultiSine_Q.A[4, 9]
multisine_Noise_Simu.generateMultiSine_Q.A[4, 10]
multisine_Noise_Simu.generateMultiSine_Q.A[4, 11]
multisine_Noise_Simu.generateMultiSine_Q.A[4, 12]
multisine_Noise_Simu.generateMultiSine_Q.A[4, 13]
multisine_Noise_Simu.generateMultiSine_Q.A[4, 14]
multisine_Noise_Simu.generateMultiSine_Q.A[4, 15]
multisine_Noise_Simu.generateMultiSine_Q.A[4, 16]
multisine_Noise_Simu.generateMultiSine_Q.A[4, 17]
multisine_Noise_Simu.generateMultiSine_Q.A[4, 18]
multisine_Noise_Simu.generateMultiSine_Q.A[4, 19]
multisine_Noise_Simu.generateMultiSine_Q.A[4, 20]
multisine_Noise_Simu.generateMultiSine_Q.A[4, 21]
multisine_Noise_Simu.generateMultiSine_Q.A[4, 22]
multisine_Noise_Simu.generateMultiSine_Q.A[4, 23]
multisine_Noise_Simu.generateMultiSine_Q.A[4, 24]
multisine_Noise_Simu.generateMultiSine_Q.A[4, 25]
multisine_Noise_Simu.generateMultiSine_Q.A[4, 26]
multisine_Noise_Simu.generateMultiSine_Q.A[4, 27]
multisine_Noise_Simu.generateMultiSine_Q.A[4, 28]
multisine_Noise_Simu.generateMultiSine_Q.A[4, 29]
multisine_Noise_Simu.generateMultiSine_Q.A[4, 30]
multisine_Noise_Simu.generateMultiSine_Q.A[5, 1]
multisine_Noise_Simu.generateMultiSine_Q.A[5, 2]
multisine_Noise_Simu.generateMultiSine_Q.A[5, 3]
multisine_Noise_Simu.generateMultiSine_Q.A[5, 4]
multisine_Noise_Simu.generateMultiSine_Q.A[5, 5]
multisine_Noise_Simu.generateMultiSine_Q.A[5, 6]
multisine_Noise_Simu.generateMultiSine_Q.A[5, 7]
multisine_Noise_Simu.generateMultiSine_Q.A[5, 8]
multisine_Noise_Simu.generateMultiSine_Q.A[5, 9]
multisine_Noise_Simu.generateMultiSine_Q.A[5, 10]
multisine_Noise_Simu.generateMultiSine_Q.A[5, 11]
multisine_Noise_Simu.generateMultiSine_Q.A[5, 12]
multisine_Noise_Simu.generateMultiSine_Q.A[5, 13]
multisine_Noise_Simu.generateMultiSine_Q.A[5, 14]
multisine_Noise_Simu.generateMultiSine_Q.A[5, 15]
multisine_Noise_Simu.generateMultiSine_Q.A[5, 16]
multisine_Noise_Simu.generateMultiSine_Q.A[5, 17]
multisine_Noise_Simu.generateMultiSine_Q.A[5, 18]
multisine_Noise_Simu.generateMultiSine_Q.A[5, 19]
multisine_Noise_Simu.generateMultiSine_Q.A[5, 20]
multisine_Noise_Simu.generateMultiSine_Q.A[5, 21]
multisine_Noise_Simu.generateMultiSine_Q.A[5, 22]
multisine_Noise_Simu.generateMultiSine_Q.A[5, 23]
multisine_Noise_Simu.generateMultiSine_Q.A[5, 24]
multisine_Noise_Simu.generateMultiSine_Q.A[5, 25]
multisine_Noise_Simu.generateMultiSine_Q.A[5, 26]
multisine_Noise_Simu.generateMultiSine_Q.A[5, 27]
multisine_Noise_Simu.generateMultiSine_Q.A[5, 28]
multisine_Noise_Simu.generateMultiSine_Q.A[5, 29]
multisine_Noise_Simu.generateMultiSine_Q.A[5, 30]
multisine_Noise_Simu.generateMultiSine_Q.B[1, 1]
multisine_Noise_Simu.generateMultiSine_Q.B[1, 2]
multisine_Noise_Simu.generateMultiSine_Q.B[1, 3]
multisine_Noise_Simu.generateMultiSine_Q.B[1, 4]
multisine_Noise_Simu.generateMultiSine_Q.B[1, 5]
multisine_Noise_Simu.generateMultiSine_Q.B[2, 1]
multisine_Noise_Simu.generateMultiSine_Q.B[2, 2]
multisine_Noise_Simu.generateMultiSine_Q.B[2, 3]
multisine_Noise_Simu.generateMultiSine_Q.B[2, 4]
multisine_Noise_Simu.generateMultiSine_Q.B[2, 5]
multisine_Noise_Simu.generateMultiSine_Q.B[3, 1]
multisine_Noise_Simu.generateMultiSine_Q.B[3, 2]
multisine_Noise_Simu.generateMultiSine_Q.B[3, 3]
multisine_Noise_Simu.generateMultiSine_Q.B[3, 4]
multisine_Noise_Simu.generateMultiSine_Q.B[3, 5]
multisine_Noise_Simu.generateMultiSine_Q.B[4, 1]
multisine_Noise_Simu.generateMultiSine_Q.B[4, 2]
multisine_Noise_Simu.generateMultiSine_Q.B[4, 3]
multisine_Noise_Simu.generateMultiSine_Q.B[4, 4]
multisine_Noise_Simu.generateMultiSine_Q.B[4, 5]
multisine_Noise_Simu.generateMultiSine_Q.B[5, 1]
multisine_Noise_Simu.generateMultiSine_Q.B[5, 2]
multisine_Noise_Simu.generateMultiSine_Q.B[5, 3]
multisine_Noise_Simu.generateMultiSine_Q.B[5, 4]
multisine_Noise_Simu.generateMultiSine_Q.B[5, 5]
multisine_Noise_Simu.generateMultiSine_Q.B[6, 1]
multisine_Noise_Simu.generateMultiSine_Q.B[6, 2]
multisine_Noise_Simu.generateMultiSine_Q.B[6, 3]
multisine_Noise_Simu.generateMultiSine_Q.B[6, 4]
multisine_Noise_Simu.generateMultiSine_Q.B[6, 5]
multisine_Noise_Simu.generateMultiSine_Q.B[7, 1]
multisine_Noise_Simu.generateMultiSine_Q.B[7, 2]
multisine_Noise_Simu.generateMultiSine_Q.B[7, 3]
multisine_Noise_Simu.generateMultiSine_Q.B[7, 4]
multisine_Noise_Simu.generateMultiSine_Q.B[7, 5]
multisine_Noise_Simu.generateMultiSine_Q.B[8, 1]
multisine_Noise_Simu.generateMultiSine_Q.B[8, 2]
multisine_Noise_Simu.generateMultiSine_Q.B[8, 3]
multisine_Noise_Simu.generateMultiSine_Q.B[8, 4]
multisine_Noise_Simu.generateMultiSine_Q.B[8, 5]
multisine_Noise_Simu.generateMultiSine_Q.B[9, 1]
multisine_Noise_Simu.generateMultiSine_Q.B[9, 2]
multisine_Noise_Simu.generateMultiSine_Q.B[9, 3]
multisine_Noise_Simu.generateMultiSine_Q.B[9, 4]
multisine_Noise_Simu.generateMultiSine_Q.B[9, 5]
multisine_Noise_Simu.generateMultiSine_Q.B[10, 1]
multisine_Noise_Simu.generateMultiSine_Q.B[10, 2]
multisine_Noise_Simu.generateMultiSine_Q.B[10, 3]
multisine_Noise_Simu.generateMultiSine_Q.B[10, 4]
multisine_Noise_Simu.generateMultiSine_Q.B[10, 5]
multisine_Noise_Simu.generateMultiSine_Q.B[11, 1]
multisine_Noise_Simu.generateMultiSine_Q.B[11, 2]
multisine_Noise_Simu.generateMultiSine_Q.B[11, 3]
multisine_Noise_Simu.generateMultiSine_Q.B[11, 4]
multisine_Noise_Simu.generateMultiSine_Q.B[11, 5]
multisine_Noise_Simu.generateMultiSine_Q.B[12, 1]
multisine_Noise_Simu.generateMultiSine_Q.B[12, 2]
multisine_Noise_Simu.generateMultiSine_Q.B[12, 3]
multisine_Noise_Simu.generateMultiSine_Q.B[12, 4]
multisine_Noise_Simu.generateMultiSine_Q.B[12, 5]
multisine_Noise_Simu.generateMultiSine_Q.B[13, 1]
multisine_Noise_Simu.generateMultiSine_Q.B[13, 2]
multisine_Noise_Simu.generateMultiSine_Q.B[13, 3]
multisine_Noise_Simu.generateMultiSine_Q.B[13, 4]
multisine_Noise_Simu.generateMultiSine_Q.B[13, 5]
multisine_Noise_Simu.generateMultiSine_Q.B[14, 1]
multisine_Noise_Simu.generateMultiSine_Q.B[14, 2]
multisine_Noise_Simu.generateMultiSine_Q.B[14, 3]
multisine_Noise_Simu.generateMultiSine_Q.B[14, 4]
multisine_Noise_Simu.generateMultiSine_Q.B[14, 5]
multisine_Noise_Simu.generateMultiSine_Q.B[15, 1]
multisine_Noise_Simu.generateMultiSine_Q.B[15, 2]
multisine_Noise_Simu.generateMultiSine_Q.B[15, 3]
multisine_Noise_Simu.generateMultiSine_Q.B[15, 4]
multisine_Noise_Simu.generateMultiSine_Q.B[15, 5]
multisine_Noise_Simu.generateMultiSine_Q.B[16, 1]
multisine_Noise_Simu.generateMultiSine_Q.B[16, 2]
multisine_Noise_Simu.generateMultiSine_Q.B[16, 3]
multisine_Noise_Simu.generateMultiSine_Q.B[16, 4]
multisine_Noise_Simu.generateMultiSine_Q.B[16, 5]
multisine_Noise_Simu.generateMultiSine_Q.B[17, 1]
multisine_Noise_Simu.generateMultiSine_Q.B[17, 2]
multisine_Noise_Simu.generateMultiSine_Q.B[17, 3]
multisine_Noise_Simu.generateMultiSine_Q.B[17, 4]
multisine_Noise_Simu.generateMultiSine_Q.B[17, 5]
multisine_Noise_Simu.generateMultiSine_Q.B[18, 1]
multisine_Noise_Simu.generateMultiSine_Q.B[18, 2]
multisine_Noise_Simu.generateMultiSine_Q.B[18, 3]
multisine_Noise_Simu.generateMultiSine_Q.B[18, 4]
multisine_Noise_Simu.generateMultiSine_Q.B[18, 5]
multisine_Noise_Simu.generateMultiSine_Q.B[19, 1]
multisine_Noise_Simu.generateMultiSine_Q.B[19, 2]
multisine_Noise_Simu.generateMultiSine_Q.B[19, 3]
multisine_Noise_Simu.generateMultiSine_Q.B[19, 4]
multisine_Noise_Simu.generateMultiSine_Q.B[19, 5]
multisine_Noise_Simu.generateMultiSine_Q.B[20, 1]
multisine_Noise_Simu.generateMultiSine_Q.B[20, 2]
multisine_Noise_Simu.generateMultiSine_Q.B[20, 3]
multisine_Noise_Simu.generateMultiSine_Q.B[20, 4]
multisine_Noise_Simu.generateMultiSine_Q.B[20, 5]
multisine_Noise_Simu.generateMultiSine_Q.B[21, 1]
multisine_Noise_Simu.generateMultiSine_Q.B[21, 2]
multisine_Noise_Simu.generateMultiSine_Q.B[21, 3]
multisine_Noise_Simu.generateMultiSine_Q.B[21, 4]
multisine_Noise_Simu.generateMultiSine_Q.B[21, 5]
multisine_Noise_Simu.generateMultiSine_Q.B[22, 1]
multisine_Noise_Simu.generateMultiSine_Q.B[22, 2]
multisine_Noise_Simu.generateMultiSine_Q.B[22, 3]
multisine_Noise_Simu.generateMultiSine_Q.B[22, 4]
multisine_Noise_Simu.generateMultiSine_Q.B[22, 5]
multisine_Noise_Simu.generateMultiSine_Q.B[23, 1]
multisine_Noise_Simu.generateMultiSine_Q.B[23, 2]
multisine_Noise_Simu.generateMultiSine_Q.B[23, 3]
multisine_Noise_Simu.generateMultiSine_Q.B[23, 4]
multisine_Noise_Simu.generateMultiSine_Q.B[23, 5]
multisine_Noise_Simu.generateMultiSine_Q.B[24, 1]
multisine_Noise_Simu.generateMultiSine_Q.B[24, 2]
multisine_Noise_Simu.generateMultiSine_Q.B[24, 3]
multisine_Noise_Simu.generateMultiSine_Q.B[24, 4]
multisine_Noise_Simu.generateMultiSine_Q.B[24, 5]
multisine_Noise_Simu.generateMultiSine_Q.B[25, 1]
multisine_Noise_Simu.generateMultiSine_Q.B[25, 2]
multisine_Noise_Simu.generateMultiSine_Q.B[25, 3]
multisine_Noise_Simu.generateMultiSine_Q.B[25, 4]
multisine_Noise_Simu.generateMultiSine_Q.B[25, 5]
multisine_Noise_Simu.generateMultiSine_Q.B[26, 1]
multisine_Noise_Simu.generateMultiSine_Q.B[26, 2]
multisine_Noise_Simu.generateMultiSine_Q.B[26, 3]
multisine_Noise_Simu.generateMultiSine_Q.B[26, 4]
multisine_Noise_Simu.generateMultiSine_Q.B[26, 5]
multisine_Noise_Simu.generateMultiSine_Q.B[27, 1]
multisine_Noise_Simu.generateMultiSine_Q.B[27, 2]
multisine_Noise_Simu.generateMultiSine_Q.B[27, 3]
multisine_Noise_Simu.generateMultiSine_Q.B[27, 4]
multisine_Noise_Simu.generateMultiSine_Q.B[27, 5]
multisine_Noise_Simu.generateMultiSine_Q.B[28, 1]
multisine_Noise_Simu.generateMultiSine_Q.B[28, 2]
multisine_Noise_Simu.generateMultiSine_Q.B[28, 3]
multisine_Noise_Simu.generateMultiSine_Q.B[28, 4]
multisine_Noise_Simu.generateMultiSine_Q.B[28, 5]
multisine_Noise_Simu.generateMultiSine_Q.B[29, 1]
multisine_Noise_Simu.generateMultiSine_Q.B[29, 2]
multisine_Noise_Simu.generateMultiSine_Q.B[29, 3]
multisine_Noise_Simu.generateMultiSine_Q.B[29, 4]
multisine_Noise_Simu.generateMultiSine_Q.B[29, 5]
multisine_Noise_Simu.generateMultiSine_Q.B[30, 1]
multisine_Noise_Simu.generateMultiSine_Q.B[30, 2]
multisine_Noise_Simu.generateMultiSine_Q.B[30, 3]
multisine_Noise_Simu.generateMultiSine_Q.B[30, 4]
multisine_Noise_Simu.generateMultiSine_Q.B[30, 5]
multisine_Noise_Simu.generateMultiSine_Q.C[1, 1]
multisine_Noise_Simu.generateMultiSine_Q.C[1, 2]
multisine_Noise_Simu.generateMultiSine_Q.C[1, 3]
multisine_Noise_Simu.generateMultiSine_Q.C[1, 4]
multisine_Noise_Simu.generateMultiSine_Q.C[1, 5]
multisine_Noise_Simu.generateMultiSine_Q.C[2, 1]
multisine_Noise_Simu.generateMultiSine_Q.C[2, 2]
multisine_Noise_Simu.generateMultiSine_Q.C[2, 3]
multisine_Noise_Simu.generateMultiSine_Q.C[2, 4]
multisine_Noise_Simu.generateMultiSine_Q.C[2, 5]
multisine_Noise_Simu.generateMultiSine_Q.C[3, 1]
multisine_Noise_Simu.generateMultiSine_Q.C[3, 2]
multisine_Noise_Simu.generateMultiSine_Q.C[3, 3]
multisine_Noise_Simu.generateMultiSine_Q.C[3, 4]
multisine_Noise_Simu.generateMultiSine_Q.C[3, 5]
multisine_Noise_Simu.generateMultiSine_Q.C[4, 1]
multisine_Noise_Simu.generateMultiSine_Q.C[4, 2]
multisine_Noise_Simu.generateMultiSine_Q.C[4, 3]
multisine_Noise_Simu.generateMultiSine_Q.C[4, 4]
multisine_Noise_Simu.generateMultiSine_Q.C[4, 5]
multisine_Noise_Simu.generateMultiSine_Q.C[5, 1]
multisine_Noise_Simu.generateMultiSine_Q.C[5, 2]
multisine_Noise_Simu.generateMultiSine_Q.C[5, 3]
multisine_Noise_Simu.generateMultiSine_Q.C[5, 4]
multisine_Noise_Simu.generateMultiSine_Q.C[5, 5]
multisine_Noise_Simu.generateMultiSine_Q.C[6, 1]
multisine_Noise_Simu.generateMultiSine_Q.C[6, 2]
multisine_Noise_Simu.generateMultiSine_Q.C[6, 3]
multisine_Noise_Simu.generateMultiSine_Q.C[6, 4]
multisine_Noise_Simu.generateMultiSine_Q.C[6, 5]
multisine_Noise_Simu.generateMultiSine_Q.C[7, 1]
multisine_Noise_Simu.generateMultiSine_Q.C[7, 2]
multisine_Noise_Simu.generateMultiSine_Q.C[7, 3]
multisine_Noise_Simu.generateMultiSine_Q.C[7, 4]
multisine_Noise_Simu.generateMultiSine_Q.C[7, 5]
multisine_Noise_Simu.generateMultiSine_Q.C[8, 1]
multisine_Noise_Simu.generateMultiSine_Q.C[8, 2]
multisine_Noise_Simu.generateMultiSine_Q.C[8, 3]
multisine_Noise_Simu.generateMultiSine_Q.C[8, 4]
multisine_Noise_Simu.generateMultiSine_Q.C[8, 5]
multisine_Noise_Simu.generateMultiSine_Q.C[9, 1]
multisine_Noise_Simu.generateMultiSine_Q.C[9, 2]
multisine_Noise_Simu.generateMultiSine_Q.C[9, 3]
multisine_Noise_Simu.generateMultiSine_Q.C[9, 4]
multisine_Noise_Simu.generateMultiSine_Q.C[9, 5]
multisine_Noise_Simu.generateMultiSine_Q.C[10, 1]
multisine_Noise_Simu.generateMultiSine_Q.C[10, 2]
multisine_Noise_Simu.generateMultiSine_Q.C[10, 3]
multisine_Noise_Simu.generateMultiSine_Q.C[10, 4]
multisine_Noise_Simu.generateMultiSine_Q.C[10, 5]
multisine_Noise_Simu.generateMultiSine_Q.C[11, 1]
multisine_Noise_Simu.generateMultiSine_Q.C[11, 2]
multisine_Noise_Simu.generateMultiSine_Q.C[11, 3]
multisine_Noise_Simu.generateMultiSine_Q.C[11, 4]
multisine_Noise_Simu.generateMultiSine_Q.C[11, 5]
multisine_Noise_Simu.generateMultiSine_Q.C[12, 1]
multisine_Noise_Simu.generateMultiSine_Q.C[12, 2]
multisine_Noise_Simu.generateMultiSine_Q.C[12, 3]
multisine_Noise_Simu.generateMultiSine_Q.C[12, 4]
multisine_Noise_Simu.generateMultiSine_Q.C[12, 5]
multisine_Noise_Simu.generateMultiSine_Q.C[13, 1]
multisine_Noise_Simu.generateMultiSine_Q.C[13, 2]
multisine_Noise_Simu.generateMultiSine_Q.C[13, 3]
multisine_Noise_Simu.generateMultiSine_Q.C[13, 4]
multisine_Noise_Simu.generateMultiSine_Q.C[13, 5]
multisine_Noise_Simu.generateMultiSine_Q.C[14, 1]
multisine_Noise_Simu.generateMultiSine_Q.C[14, 2]
multisine_Noise_Simu.generateMultiSine_Q.C[14, 3]
multisine_Noise_Simu.generateMultiSine_Q.C[14, 4]
multisine_Noise_Simu.generateMultiSine_Q.C[14, 5]
multisine_Noise_Simu.generateMultiSine_Q.C[15, 1]
multisine_Noise_Simu.generateMultiSine_Q.C[15, 2]
multisine_Noise_Simu.generateMultiSine_Q.C[15, 3]
multisine_Noise_Simu.generateMultiSine_Q.C[15, 4]
multisine_Noise_Simu.generateMultiSine_Q.C[15, 5]
multisine_Noise_Simu.generateMultiSine_Q.C[16, 1]
multisine_Noise_Simu.generateMultiSine_Q.C[16, 2]
multisine_Noise_Simu.generateMultiSine_Q.C[16, 3]
multisine_Noise_Simu.generateMultiSine_Q.C[16, 4]
multisine_Noise_Simu.generateMultiSine_Q.C[16, 5]
multisine_Noise_Simu.generateMultiSine_Q.C[17, 1]
multisine_Noise_Simu.generateMultiSine_Q.C[17, 2]
multisine_Noise_Simu.generateMultiSine_Q.C[17, 3]
multisine_Noise_Simu.generateMultiSine_Q.C[17, 4]
multisine_Noise_Simu.generateMultiSine_Q.C[17, 5]
multisine_Noise_Simu.generateMultiSine_Q.C[18, 1]
multisine_Noise_Simu.generateMultiSine_Q.C[18, 2]
multisine_Noise_Simu.generateMultiSine_Q.C[18, 3]
multisine_Noise_Simu.generateMultiSine_Q.C[18, 4]
multisine_Noise_Simu.generateMultiSine_Q.C[18, 5]
multisine_Noise_Simu.generateMultiSine_Q.C[19, 1]
multisine_Noise_Simu.generateMultiSine_Q.C[19, 2]
multisine_Noise_Simu.generateMultiSine_Q.C[19, 3]
multisine_Noise_Simu.generateMultiSine_Q.C[19, 4]
multisine_Noise_Simu.generateMultiSine_Q.C[19, 5]
multisine_Noise_Simu.generateMultiSine_Q.C[20, 1]
multisine_Noise_Simu.generateMultiSine_Q.C[20, 2]
multisine_Noise_Simu.generateMultiSine_Q.C[20, 3]
multisine_Noise_Simu.generateMultiSine_Q.C[20, 4]
multisine_Noise_Simu.generateMultiSine_Q.C[20, 5]
multisine_Noise_Simu.generateMultiSine_Q.C[21, 1]
multisine_Noise_Simu.generateMultiSine_Q.C[21, 2]
multisine_Noise_Simu.generateMultiSine_Q.C[21, 3]
multisine_Noise_Simu.generateMultiSine_Q.C[21, 4]
multisine_Noise_Simu.generateMultiSine_Q.C[21, 5]
multisine_Noise_Simu.generateMultiSine_Q.C[22, 1]
multisine_Noise_Simu.generateMultiSine_Q.C[22, 2]
multisine_Noise_Simu.generateMultiSine_Q.C[22, 3]
multisine_Noise_Simu.generateMultiSine_Q.C[22, 4]
multisine_Noise_Simu.generateMultiSine_Q.C[22, 5]
multisine_Noise_Simu.generateMultiSine_Q.C[23, 1]
multisine_Noise_Simu.generateMultiSine_Q.C[23, 2]
multisine_Noise_Simu.generateMultiSine_Q.C[23, 3]
multisine_Noise_Simu.generateMultiSine_Q.C[23, 4]
multisine_Noise_Simu.generateMultiSine_Q.C[23, 5]
multisine_Noise_Simu.generateMultiSine_Q.C[24, 1]
multisine_Noise_Simu.generateMultiSine_Q.C[24, 2]
multisine_Noise_Simu.generateMultiSine_Q.C[24, 3]
multisine_Noise_Simu.generateMultiSine_Q.C[24, 4]
multisine_Noise_Simu.generateMultiSine_Q.C[24, 5]
multisine_Noise_Simu.generateMultiSine_Q.C[25, 1]
multisine_Noise_Simu.generateMultiSine_Q.C[25, 2]
multisine_Noise_Simu.generateMultiSine_Q.C[25, 3]
multisine_Noise_Simu.generateMultiSine_Q.C[25, 4]
multisine_Noise_Simu.generateMultiSine_Q.C[25, 5]
multisine_Noise_Simu.generateMultiSine_Q.C[26, 1]
multisine_Noise_Simu.generateMultiSine_Q.C[26, 2]
multisine_Noise_Simu.generateMultiSine_Q.C[26, 3]
multisine_Noise_Simu.generateMultiSine_Q.C[26, 4]
multisine_Noise_Simu.generateMultiSine_Q.C[26, 5]
multisine_Noise_Simu.generateMultiSine_Q.C[27, 1]
multisine_Noise_Simu.generateMultiSine_Q.C[27, 2]
multisine_Noise_Simu.generateMultiSine_Q.C[27, 3]
multisine_Noise_Simu.generateMultiSine_Q.C[27, 4]
multisine_Noise_Simu.generateMultiSine_Q.C[27, 5]
multisine_Noise_Simu.generateMultiSine_Q.C[28, 1]
multisine_Noise_Simu.generateMultiSine_Q.C[28, 2]
multisine_Noise_Simu.generateMultiSine_Q.C[28, 3]
multisine_Noise_Simu.generateMultiSine_Q.C[28, 4]
multisine_Noise_Simu.generateMultiSine_Q.C[28, 5]
multisine_Noise_Simu.generateMultiSine_Q.C[29, 1]
multisine_Noise_Simu.generateMultiSine_Q.C[29, 2]
multisine_Noise_Simu.generateMultiSine_Q.C[29, 3]
multisine_Noise_Simu.generateMultiSine_Q.C[29, 4]
multisine_Noise_Simu.generateMultiSine_Q.C[29, 5]
multisine_Noise_Simu.generateMultiSine_Q.C[30, 1]
multisine_Noise_Simu.generateMultiSine_Q.C[30, 2]
multisine_Noise_Simu.generateMultiSine_Q.C[30, 3]
multisine_Noise_Simu.generateMultiSine_Q.C[30, 4]
multisine_Noise_Simu.generateMultiSine_Q.C[30, 5]
multisine_Noise_Simu.generateMultiSine_Q.Vecy[1, 1]
multisine_Noise_Simu.generateMultiSine_Q.Vecy[2, 1]
multisine_Noise_Simu.generateMultiSine_Q.Vecy[3, 1]
multisine_Noise_Simu.generateMultiSine_Q.Vecy[4, 1]
multisine_Noise_Simu.generateMultiSine_Q.Vecy[5, 1]
multisine_Noise_Simu.generateMultiSine_Q.Vecy[6, 1]
multisine_Noise_Simu.generateMultiSine_Q.Vecy[7, 1]
multisine_Noise_Simu.generateMultiSine_Q.Vecy[8, 1]
multisine_Noise_Simu.generateMultiSine_Q.Vecy[9, 1]
multisine_Noise_Simu.generateMultiSine_Q.Vecy[10, 1]
multisine_Noise_Simu.generateMultiSine_Q.Vecy[11, 1]
multisine_Noise_Simu.generateMultiSine_Q.Vecy[12, 1]
multisine_Noise_Simu.generateMultiSine_Q.Vecy[13, 1]
multisine_Noise_Simu.generateMultiSine_Q.Vecy[14, 1]
multisine_Noise_Simu.generateMultiSine_Q.Vecy[15, 1]
multisine_Noise_Simu.generateMultiSine_Q.Vecy[16, 1]
multisine_Noise_Simu.generateMultiSine_Q.Vecy[17, 1]
multisine_Noise_Simu.generateMultiSine_Q.Vecy[18, 1]
multisine_Noise_Simu.generateMultiSine_Q.Vecy[19, 1]
multisine_Noise_Simu.generateMultiSine_Q.Vecy[20, 1]
multisine_Noise_Simu.generateMultiSine_Q.Vecy[21, 1]
multisine_Noise_Simu.generateMultiSine_Q.Vecy[22, 1]
multisine_Noise_Simu.generateMultiSine_Q.Vecy[23, 1]
multisine_Noise_Simu.generateMultiSine_Q.Vecy[24, 1]
multisine_Noise_Simu.generateMultiSine_Q.Vecy[25, 1]
multisine_Noise_Simu.generateMultiSine_Q.Vecy[26, 1]
multisine_Noise_Simu.generateMultiSine_Q.Vecy[27, 1]
multisine_Noise_Simu.generateMultiSine_Q.Vecy[28, 1]
multisine_Noise_Simu.generateMultiSine_Q.Vecy[29, 1]
multisine_Noise_Simu.generateMultiSine_Q.Vecy[30, 1]
multisine_Noise_Simu.generateMultiSine_Q.y
multisine_Noise_Simu.sum_Q.nin
multisine_Noise_Simu.sum_Q.k[1]
multisine_Noise_Simu.sum_Q.k[2]
multisine_Noise_Simu.pwPin.ir
multisine_Noise_Simu.pwPin.ii
multisine_Noise_Simu_load.generateMultiSine_P.h
multisine_Noise_Simu_load.generateMultiSine_P.ll
multisine_Noise_Simu_load.generateMultiSine_P.M
multisine_Noise_Simu_load.generateMultiSine_P.L
multisine_Noise_Simu_load.generateMultiSine_P.y
multisine_Noise_Simu_load.normalNoise_P.y
multisine_Noise_Simu_load.normalNoise_P.samplePeriod
multisine_Noise_Simu_load.normalNoise_P.enableNoise
multisine_Noise_Simu_load.normalNoise_P.y_off
multisine_Noise_Simu_load.normalNoise_P.useGlobalSeed
multisine_Noise_Simu_load.normalNoise_P.useAutomaticLocalSeed
multisine_Noise_Simu_load.normalNoise_P.fixedLocalSeed
multisine_Noise_Simu_load.normalNoise_P.startTime
multisine_Noise_Simu_load.normalNoise_P.localSeed
multisine_Noise_Simu_load.normalNoise_P.actualGlobalSeed
multisine_Noise_Simu_load.normalNoise_P.generateNoise
multisine_Noise_Simu_load.normalNoise_P.state[1]
multisine_Noise_Simu_load.normalNoise_P.state[2]
multisine_Noise_Simu_load.normalNoise_P.state[3]
multisine_Noise_Simu_load.normalNoise_P.state[4]
multisine_Noise_Simu_load.normalNoise_P.r
multisine_Noise_Simu_load.normalNoise_P.r_raw
multisine_Noise_Simu_load.normalNoise_P.mu
multisine_Noise_Simu_load.normalNoise_P.sigma
multisine_Noise_Simu_load.sum_P.nin
multisine_Noise_Simu_load.sum_P.u[1]
multisine_Noise_Simu_load.sum_P.y
multisine_Noise_Simu_load.sum_P.k[1]
multisine_Noise_Simu_load.sum_P.k[2]
multisine_Noise_Simu_load.vSC_inj.t_Pstart
multisine_Noise_Simu_load.vSC_inj.t_Qstart
multisine_Noise_Simu_load.vSC_inj.Qinj
multisine_Noise_Simu_load.vSC_inj.f1
multisine_Noise_Simu_load.vSC_inj.f2
multisine_Noise_Simu_load.vSC_inj.G
multisine_Noise_Simu_load.vSC_inj.signalCurrent_phasor1.p.vr
multisine_Noise_Simu_load.vSC_inj.signalCurrent_phasor1.p.vi
multisine_Noise_Simu_load.vSC_inj.signalCurrent_phasor1.zero.re
multisine_Noise_Simu_load.vSC_inj.signalCurrent_phasor1.zero.im
multisine_Noise_Simu_load.vSC_inj.signalCurrent_phasor1.vs.re
multisine_Noise_Simu_load.vSC_inj.signalCurrent_phasor1.vs.im
multisine_Noise_Simu_load.vSC_inj.signalCurrent_phasor1.V
multisine_Noise_Simu_load.vSC_inj.ground_phasor1.p.vr
multisine_Noise_Simu_load.vSC_inj.ground_phasor1.p.vi
multisine_Noise_Simu_load.vSC_inj.ground_phasor1.vs.re
multisine_Noise_Simu_load.vSC_inj.ground_phasor1.vs.im
multisine_Noise_Simu_load.normalNoise_Q.y
multisine_Noise_Simu_load.normalNoise_Q.samplePeriod
multisine_Noise_Simu_load.normalNoise_Q.enableNoise
multisine_Noise_Simu_load.normalNoise_Q.y_off
multisine_Noise_Simu_load.normalNoise_Q.useGlobalSeed
multisine_Noise_Simu_load.normalNoise_Q.useAutomaticLocalSeed
multisine_Noise_Simu_load.normalNoise_Q.fixedLocalSeed
multisine_Noise_Simu_load.normalNoise_Q.startTime
multisine_Noise_Simu_load.normalNoise_Q.localSeed
multisine_Noise_Simu_load.normalNoise_Q.actualGlobalSeed
multisine_Noise_Simu_load.normalNoise_Q.generateNoise
multisine_Noise_Simu_load.normalNoise_Q.state[1]
multisine_Noise_Simu_load.normalNoise_Q.state[2]
multisine_Noise_Simu_load.normalNoise_Q.state[3]
multisine_Noise_Simu_load.normalNoise_Q.state[4]
multisine_Noise_Simu_load.normalNoise_Q.r
multisine_Noise_Simu_load.normalNoise_Q.r_raw
multisine_Noise_Simu_load.normalNoise_Q.mu
multisine_Noise_Simu_load.normalNoise_Q.sigma
multisine_Noise_Simu_load.generateMultiSine_Q.h
multisine_Noise_Simu_load.generateMultiSine_Q.ll
multisine_Noise_Simu_load.generateMultiSine_Q.M
multisine_Noise_Simu_load.generateMultiSine_Q.L
multisine_Noise_Simu_load.generateMultiSine_Q.A[1, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.A[1, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.A[1, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.A[1, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.A[1, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.A[1, 6]
multisine_Noise_Simu_load.generateMultiSine_Q.A[1, 7]
multisine_Noise_Simu_load.generateMultiSine_Q.A[1, 8]
multisine_Noise_Simu_load.generateMultiSine_Q.A[1, 9]
multisine_Noise_Simu_load.generateMultiSine_Q.A[1, 10]
multisine_Noise_Simu_load.generateMultiSine_Q.A[1, 11]
multisine_Noise_Simu_load.generateMultiSine_Q.A[1, 12]
multisine_Noise_Simu_load.generateMultiSine_Q.A[1, 13]
multisine_Noise_Simu_load.generateMultiSine_Q.A[1, 14]
multisine_Noise_Simu_load.generateMultiSine_Q.A[1, 15]
multisine_Noise_Simu_load.generateMultiSine_Q.A[1, 16]
multisine_Noise_Simu_load.generateMultiSine_Q.A[1, 17]
multisine_Noise_Simu_load.generateMultiSine_Q.A[1, 18]
multisine_Noise_Simu_load.generateMultiSine_Q.A[1, 19]
multisine_Noise_Simu_load.generateMultiSine_Q.A[1, 20]
multisine_Noise_Simu_load.generateMultiSine_Q.A[1, 21]
multisine_Noise_Simu_load.generateMultiSine_Q.A[1, 22]
multisine_Noise_Simu_load.generateMultiSine_Q.A[1, 23]
multisine_Noise_Simu_load.generateMultiSine_Q.A[1, 24]
multisine_Noise_Simu_load.generateMultiSine_Q.A[1, 25]
multisine_Noise_Simu_load.generateMultiSine_Q.A[1, 26]
multisine_Noise_Simu_load.generateMultiSine_Q.A[1, 27]
multisine_Noise_Simu_load.generateMultiSine_Q.A[1, 28]
multisine_Noise_Simu_load.generateMultiSine_Q.A[1, 29]
multisine_Noise_Simu_load.generateMultiSine_Q.A[1, 30]
multisine_Noise_Simu_load.generateMultiSine_Q.A[2, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.A[2, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.A[2, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.A[2, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.A[2, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.A[2, 6]
multisine_Noise_Simu_load.generateMultiSine_Q.A[2, 7]
multisine_Noise_Simu_load.generateMultiSine_Q.A[2, 8]
multisine_Noise_Simu_load.generateMultiSine_Q.A[2, 9]
multisine_Noise_Simu_load.generateMultiSine_Q.A[2, 10]
multisine_Noise_Simu_load.generateMultiSine_Q.A[2, 11]
multisine_Noise_Simu_load.generateMultiSine_Q.A[2, 12]
multisine_Noise_Simu_load.generateMultiSine_Q.A[2, 13]
multisine_Noise_Simu_load.generateMultiSine_Q.A[2, 14]
multisine_Noise_Simu_load.generateMultiSine_Q.A[2, 15]
multisine_Noise_Simu_load.generateMultiSine_Q.A[2, 16]
multisine_Noise_Simu_load.generateMultiSine_Q.A[2, 17]
multisine_Noise_Simu_load.generateMultiSine_Q.A[2, 18]
multisine_Noise_Simu_load.generateMultiSine_Q.A[2, 19]
multisine_Noise_Simu_load.generateMultiSine_Q.A[2, 20]
multisine_Noise_Simu_load.generateMultiSine_Q.A[2, 21]
multisine_Noise_Simu_load.generateMultiSine_Q.A[2, 22]
multisine_Noise_Simu_load.generateMultiSine_Q.A[2, 23]
multisine_Noise_Simu_load.generateMultiSine_Q.A[2, 24]
multisine_Noise_Simu_load.generateMultiSine_Q.A[2, 25]
multisine_Noise_Simu_load.generateMultiSine_Q.A[2, 26]
multisine_Noise_Simu_load.generateMultiSine_Q.A[2, 27]
multisine_Noise_Simu_load.generateMultiSine_Q.A[2, 28]
multisine_Noise_Simu_load.generateMultiSine_Q.A[2, 29]
multisine_Noise_Simu_load.generateMultiSine_Q.A[2, 30]
multisine_Noise_Simu_load.generateMultiSine_Q.A[3, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.A[3, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.A[3, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.A[3, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.A[3, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.A[3, 6]
multisine_Noise_Simu_load.generateMultiSine_Q.A[3, 7]
multisine_Noise_Simu_load.generateMultiSine_Q.A[3, 8]
multisine_Noise_Simu_load.generateMultiSine_Q.A[3, 9]
multisine_Noise_Simu_load.generateMultiSine_Q.A[3, 10]
multisine_Noise_Simu_load.generateMultiSine_Q.A[3, 11]
multisine_Noise_Simu_load.generateMultiSine_Q.A[3, 12]
multisine_Noise_Simu_load.generateMultiSine_Q.A[3, 13]
multisine_Noise_Simu_load.generateMultiSine_Q.A[3, 14]
multisine_Noise_Simu_load.generateMultiSine_Q.A[3, 15]
multisine_Noise_Simu_load.generateMultiSine_Q.A[3, 16]
multisine_Noise_Simu_load.generateMultiSine_Q.A[3, 17]
multisine_Noise_Simu_load.generateMultiSine_Q.A[3, 18]
multisine_Noise_Simu_load.generateMultiSine_Q.A[3, 19]
multisine_Noise_Simu_load.generateMultiSine_Q.A[3, 20]
multisine_Noise_Simu_load.generateMultiSine_Q.A[3, 21]
multisine_Noise_Simu_load.generateMultiSine_Q.A[3, 22]
multisine_Noise_Simu_load.generateMultiSine_Q.A[3, 23]
multisine_Noise_Simu_load.generateMultiSine_Q.A[3, 24]
multisine_Noise_Simu_load.generateMultiSine_Q.A[3, 25]
multisine_Noise_Simu_load.generateMultiSine_Q.A[3, 26]
multisine_Noise_Simu_load.generateMultiSine_Q.A[3, 27]
multisine_Noise_Simu_load.generateMultiSine_Q.A[3, 28]
multisine_Noise_Simu_load.generateMultiSine_Q.A[3, 29]
multisine_Noise_Simu_load.generateMultiSine_Q.A[3, 30]
multisine_Noise_Simu_load.generateMultiSine_Q.A[4, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.A[4, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.A[4, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.A[4, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.A[4, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.A[4, 6]
multisine_Noise_Simu_load.generateMultiSine_Q.A[4, 7]
multisine_Noise_Simu_load.generateMultiSine_Q.A[4, 8]
multisine_Noise_Simu_load.generateMultiSine_Q.A[4, 9]
multisine_Noise_Simu_load.generateMultiSine_Q.A[4, 10]
multisine_Noise_Simu_load.generateMultiSine_Q.A[4, 11]
multisine_Noise_Simu_load.generateMultiSine_Q.A[4, 12]
multisine_Noise_Simu_load.generateMultiSine_Q.A[4, 13]
multisine_Noise_Simu_load.generateMultiSine_Q.A[4, 14]
multisine_Noise_Simu_load.generateMultiSine_Q.A[4, 15]
multisine_Noise_Simu_load.generateMultiSine_Q.A[4, 16]
multisine_Noise_Simu_load.generateMultiSine_Q.A[4, 17]
multisine_Noise_Simu_load.generateMultiSine_Q.A[4, 18]
multisine_Noise_Simu_load.generateMultiSine_Q.A[4, 19]
multisine_Noise_Simu_load.generateMultiSine_Q.A[4, 20]
multisine_Noise_Simu_load.generateMultiSine_Q.A[4, 21]
multisine_Noise_Simu_load.generateMultiSine_Q.A[4, 22]
multisine_Noise_Simu_load.generateMultiSine_Q.A[4, 23]
multisine_Noise_Simu_load.generateMultiSine_Q.A[4, 24]
multisine_Noise_Simu_load.generateMultiSine_Q.A[4, 25]
multisine_Noise_Simu_load.generateMultiSine_Q.A[4, 26]
multisine_Noise_Simu_load.generateMultiSine_Q.A[4, 27]
multisine_Noise_Simu_load.generateMultiSine_Q.A[4, 28]
multisine_Noise_Simu_load.generateMultiSine_Q.A[4, 29]
multisine_Noise_Simu_load.generateMultiSine_Q.A[4, 30]
multisine_Noise_Simu_load.generateMultiSine_Q.A[5, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.A[5, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.A[5, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.A[5, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.A[5, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.A[5, 6]
multisine_Noise_Simu_load.generateMultiSine_Q.A[5, 7]
multisine_Noise_Simu_load.generateMultiSine_Q.A[5, 8]
multisine_Noise_Simu_load.generateMultiSine_Q.A[5, 9]
multisine_Noise_Simu_load.generateMultiSine_Q.A[5, 10]
multisine_Noise_Simu_load.generateMultiSine_Q.A[5, 11]
multisine_Noise_Simu_load.generateMultiSine_Q.A[5, 12]
multisine_Noise_Simu_load.generateMultiSine_Q.A[5, 13]
multisine_Noise_Simu_load.generateMultiSine_Q.A[5, 14]
multisine_Noise_Simu_load.generateMultiSine_Q.A[5, 15]
multisine_Noise_Simu_load.generateMultiSine_Q.A[5, 16]
multisine_Noise_Simu_load.generateMultiSine_Q.A[5, 17]
multisine_Noise_Simu_load.generateMultiSine_Q.A[5, 18]
multisine_Noise_Simu_load.generateMultiSine_Q.A[5, 19]
multisine_Noise_Simu_load.generateMultiSine_Q.A[5, 20]
multisine_Noise_Simu_load.generateMultiSine_Q.A[5, 21]
multisine_Noise_Simu_load.generateMultiSine_Q.A[5, 22]
multisine_Noise_Simu_load.generateMultiSine_Q.A[5, 23]
multisine_Noise_Simu_load.generateMultiSine_Q.A[5, 24]
multisine_Noise_Simu_load.generateMultiSine_Q.A[5, 25]
multisine_Noise_Simu_load.generateMultiSine_Q.A[5, 26]
multisine_Noise_Simu_load.generateMultiSine_Q.A[5, 27]
multisine_Noise_Simu_load.generateMultiSine_Q.A[5, 28]
multisine_Noise_Simu_load.generateMultiSine_Q.A[5, 29]
multisine_Noise_Simu_load.generateMultiSine_Q.A[5, 30]
multisine_Noise_Simu_load.generateMultiSine_Q.B[1, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.B[1, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.B[1, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.B[1, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.B[1, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.B[2, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.B[2, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.B[2, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.B[2, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.B[2, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.B[3, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.B[3, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.B[3, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.B[3, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.B[3, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.B[4, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.B[4, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.B[4, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.B[4, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.B[4, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.B[5, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.B[5, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.B[5, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.B[5, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.B[5, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.B[6, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.B[6, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.B[6, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.B[6, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.B[6, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.B[7, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.B[7, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.B[7, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.B[7, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.B[7, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.B[8, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.B[8, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.B[8, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.B[8, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.B[8, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.B[9, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.B[9, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.B[9, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.B[9, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.B[9, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.B[10, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.B[10, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.B[10, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.B[10, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.B[10, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.B[11, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.B[11, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.B[11, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.B[11, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.B[11, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.B[12, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.B[12, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.B[12, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.B[12, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.B[12, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.B[13, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.B[13, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.B[13, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.B[13, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.B[13, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.B[14, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.B[14, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.B[14, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.B[14, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.B[14, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.B[15, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.B[15, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.B[15, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.B[15, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.B[15, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.B[16, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.B[16, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.B[16, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.B[16, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.B[16, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.B[17, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.B[17, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.B[17, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.B[17, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.B[17, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.B[18, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.B[18, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.B[18, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.B[18, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.B[18, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.B[19, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.B[19, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.B[19, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.B[19, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.B[19, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.B[20, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.B[20, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.B[20, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.B[20, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.B[20, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.B[21, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.B[21, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.B[21, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.B[21, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.B[21, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.B[22, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.B[22, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.B[22, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.B[22, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.B[22, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.B[23, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.B[23, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.B[23, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.B[23, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.B[23, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.B[24, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.B[24, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.B[24, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.B[24, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.B[24, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.B[25, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.B[25, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.B[25, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.B[25, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.B[25, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.B[26, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.B[26, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.B[26, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.B[26, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.B[26, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.B[27, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.B[27, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.B[27, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.B[27, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.B[27, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.B[28, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.B[28, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.B[28, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.B[28, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.B[28, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.B[29, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.B[29, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.B[29, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.B[29, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.B[29, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.B[30, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.B[30, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.B[30, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.B[30, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.B[30, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.C[1, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.C[1, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.C[1, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.C[1, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.C[1, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.C[2, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.C[2, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.C[2, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.C[2, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.C[2, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.C[3, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.C[3, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.C[3, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.C[3, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.C[3, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.C[4, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.C[4, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.C[4, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.C[4, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.C[4, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.C[5, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.C[5, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.C[5, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.C[5, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.C[5, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.C[6, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.C[6, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.C[6, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.C[6, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.C[6, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.C[7, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.C[7, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.C[7, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.C[7, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.C[7, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.C[8, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.C[8, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.C[8, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.C[8, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.C[8, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.C[9, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.C[9, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.C[9, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.C[9, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.C[9, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.C[10, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.C[10, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.C[10, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.C[10, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.C[10, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.C[11, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.C[11, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.C[11, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.C[11, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.C[11, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.C[12, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.C[12, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.C[12, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.C[12, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.C[12, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.C[13, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.C[13, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.C[13, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.C[13, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.C[13, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.C[14, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.C[14, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.C[14, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.C[14, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.C[14, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.C[15, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.C[15, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.C[15, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.C[15, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.C[15, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.C[16, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.C[16, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.C[16, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.C[16, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.C[16, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.C[17, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.C[17, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.C[17, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.C[17, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.C[17, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.C[18, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.C[18, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.C[18, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.C[18, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.C[18, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.C[19, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.C[19, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.C[19, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.C[19, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.C[19, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.C[20, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.C[20, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.C[20, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.C[20, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.C[20, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.C[21, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.C[21, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.C[21, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.C[21, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.C[21, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.C[22, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.C[22, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.C[22, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.C[22, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.C[22, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.C[23, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.C[23, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.C[23, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.C[23, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.C[23, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.C[24, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.C[24, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.C[24, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.C[24, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.C[24, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.C[25, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.C[25, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.C[25, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.C[25, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.C[25, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.C[26, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.C[26, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.C[26, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.C[26, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.C[26, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.C[27, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.C[27, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.C[27, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.C[27, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.C[27, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.C[28, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.C[28, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.C[28, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.C[28, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.C[28, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.C[29, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.C[29, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.C[29, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.C[29, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.C[29, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.C[30, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.C[30, 2]
multisine_Noise_Simu_load.generateMultiSine_Q.C[30, 3]
multisine_Noise_Simu_load.generateMultiSine_Q.C[30, 4]
multisine_Noise_Simu_load.generateMultiSine_Q.C[30, 5]
multisine_Noise_Simu_load.generateMultiSine_Q.Vecy[1, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.Vecy[2, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.Vecy[3, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.Vecy[4, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.Vecy[5, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.Vecy[6, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.Vecy[7, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.Vecy[8, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.Vecy[9, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.Vecy[10, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.Vecy[11, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.Vecy[12, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.Vecy[13, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.Vecy[14, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.Vecy[15, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.Vecy[16, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.Vecy[17, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.Vecy[18, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.Vecy[19, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.Vecy[20, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.Vecy[21, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.Vecy[22, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.Vecy[23, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.Vecy[24, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.Vecy[25, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.Vecy[26, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.Vecy[27, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.Vecy[28, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.Vecy[29, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.Vecy[30, 1]
multisine_Noise_Simu_load.generateMultiSine_Q.y
multisine_Noise_Simu_load.sum_Q.nin
multisine_Noise_Simu_load.sum_Q.k[1]
multisine_Noise_Simu_load.sum_Q.k[2]
multisine_Noise_Simu_load.pwPin.ir
multisine_Noise_Simu_load.pwPin.ii
add.k1
add.k2
y1_u
y2
n_load

double initialValue(2073,6)
 -1       1                  0  0  1  1305   # globalSeed.enableNoise
 -1       0                  0  0  1  1305   # globalSeed.useAutomaticSeed
 -1  6.7867967000000000E+07  0  0  1  1306   # globalSeed.fixedSeed
  0       0                  0  0  6  1282   # globalSeed.seed
  0       0                  0  0  6   770   # globalSeed.id_impure
 -1     100                  0  0  1   280   # SysData.S_b
 -1      60                  0  0  1   280   # SysData.fn
 -1  1.0000000000000000E-04  0  0  1   280   # r
 -1  1.0000000000000000E-03  0  0  1   280   # x
 -1  8.7500000000000002E-04  0  0  1   280   # b
 -1  1.0300000000000000E+00  0  0  1   280   # PF_results.voltages.V1
 -1  2.0270659999999999E+01  0  0  1   280   # PF_results.voltages.A1
 -1  1.0100000000000000E+00  0  0  1   280   # PF_results.voltages.V2
 -1  1.0506280000000000E+01  0  0  1   280   # PF_results.voltages.A2
 -1  1.0300000000000000E+00  0  0  1   280   # PF_results.voltages.V3
 -1 -6.7999999999999998E+00  0  0  1   280   # PF_results.voltages.A3
 -1  1.0100000000000000E+00  0  0  1   280   # PF_results.voltages.V4
 -1 -1.6992100000000001E+01  0  0  1   280   # PF_results.voltages.A4
 -1  1.0068999999999999E+00  0  0  1   280   # PF_results.voltages.V5
 -1  1.3788100000000000E+01  0  0  1   280   # PF_results.voltages.A5
 -1  9.7914000000000001E-01  0  0  1   280   # PF_results.voltages.V6
 -1  3.7145999999999999E+00  0  0  1   280   # PF_results.voltages.A6
 -1  9.6101060000000005E-01  0  0  1   280   # PF_results.voltages.V7
 -1 -4.6865100000000002E+00  0  0  1   280   # PF_results.voltages.A7
 -1  9.4828000000000001E-01  0  0  1   280   # PF_results.voltages.V8
 -1 -1.8513100000000001E+01  0  0  1   280   # PF_results.voltages.A8
 -1  9.7136279999999997E-01  0  0  1   280   # PF_results.voltages.V9
 -1 -3.2154029999999999E+01  0  0  1   280   # PF_results.voltages.A9
 -1  9.8485999999999996E-01  0  0  1   280   # PF_results.voltages.V10
 -1 -2.3713100000000001E+01  0  0  1   280   # PF_results.voltages.A10
 -1  1.0087999999999999E+00  0  0  1   280   # PF_results.voltages.V11
 -1 -1.3421500000000000E+01  0  0  1   280   # PF_results.voltages.A11
 -1     700                  0  0  1   280   # PF_results.machines.P1_1
 -1  1.8502959999999999E+02  0  0  1   280   # PF_results.machines.Q1_1
 -1     700                  0  0  1   280   # PF_results.machines.P2_1
 -1  2.3461130000000000E+02  0  0  1   280   # PF_results.machines.Q2_1
 -1  7.1909410000000003E+02  0  0  1   280   # PF_results.machines.P3_1
 -1  1.7602619999999999E+02  0  0  1   280   # PF_results.machines.Q3_1
 -1     700                  0  0  1   280   # PF_results.machines.P4_1
 -1  2.0208269999999999E+02  0  0  1   280   # PF_results.machines.Q4_1
 -1     967                  0  0  1   280   # PF_results.loads.PL7_1
 -1 -8.4700000000000003E+01  0  0  1   280   # PF_results.loads.QL7_1
 -1    1767                  0  0  1   280   # PF_results.loads.PL9_1
 -1 -2.3019999999999999E+02  0  0  1   280   # PF_results.loads.QL9_1
 -1     400                  0  0  1   280   # bus5.V_b
 -1       1                  0  0  1   280   # bus5.V_0
 -1       0                  0  0  1   280   # bus5.angle_0
 -1       1                  0  0  1   280   # bus5.P_0
 -1       0                  0  0  1   280   # bus5.Q_0
  0       0                  0  0  6   256   # bus5.S_b
  0       0                  0  0  6   256   # bus5.fn
  0       0                  0  0  6   260   # bus5.p.vr
  0       0                  0  0  6   260   # bus5.p.vi
  0       0                  0  0  6   388   # bus5.p.ir
  0       0                  0  0  6   388   # bus5.p.ii
  0       0                  0  0  6   256   # bus5.V
  0       0                  0  0  6   256   # bus5.angle
 -1       1                  0  0  1   281   # bus5.displayPF
 -1     400                  0  0  1   280   # bus6.V_b
 -1       1                  0  0  1   280   # bus6.V_0
 -1       0                  0  0  1   280   # bus6.angle_0
 -1       1                  0  0  1   280   # bus6.P_0
 -1       0                  0  0  1   280   # bus6.Q_0
  0       0                  0  0  6   256   # bus6.S_b
  0       0                  0  0  6   256   # bus6.fn
  0       0                  0  0  6   260   # bus6.p.vr
  0       0                  0  0  6   260   # bus6.p.vi
  0       0                  0  0  6   388   # bus6.p.ir
  0       0                  0  0  6   388   # bus6.p.ii
  0       0                  0  0  6   256   # bus6.V
  0       0                  0  0  6   256   # bus6.angle
 -1       1                  0  0  1   281   # bus6.displayPF
 -1     400                  0  0  1   280   # bus7.V_b
 -1       1                  0  0  1   280   # bus7.V_0
 -1       0                  0  0  1   280   # bus7.angle_0
 -1       1                  0  0  1   280   # bus7.P_0
 -1       0                  0  0  1   280   # bus7.Q_0
  0       0                  0  0  6   256   # bus7.S_b
  0       0                  0  0  6   256   # bus7.fn
  0       0                  0  0  6   260   # bus7.p.vr
  0       0                  0  0  6   260   # bus7.p.vi
  0       0                  0  0  6   388   # bus7.p.ir
  0       0                  0  0  6   388   # bus7.p.ii
  0       0                  0  0  6   256   # bus7.V
  0       0                  0  0  6   256   # bus7.angle
 -1       1                  0  0  1   281   # bus7.displayPF
 -1     400                  0  0  1   280   # bus8.V_b
 -1       1                  0  0  1   280   # bus8.V_0
 -1       0                  0  0  1   280   # bus8.angle_0
 -1       1                  0  0  1   280   # bus8.P_0
 -1       0                  0  0  1   280   # bus8.Q_0
  0       0                  0  0  6   256   # bus8.S_b
  0       0                  0  0  6   256   # bus8.fn
  0       0                  0  0  6   260   # bus8.p.vr
  0       0                  0  0  6   260   # bus8.p.vi
  0       0                  0  0  6   388   # bus8.p.ir
  0       0                  0  0  6   388   # bus8.p.ii
  0       0                  0  0  6   256   # bus8.V
  0       0                  0  0  6   256   # bus8.angle
 -1       1                  0  0  1   281   # bus8.displayPF
 -1     400                  0  0  1   280   # bus9.V_b
 -1       1                  0  0  1   280   # bus9.V_0
 -1       0                  0  0  1   280   # bus9.angle_0
 -1       1                  0  0  1   280   # bus9.P_0
 -1       0                  0  0  1   280   # bus9.Q_0
  0       0                  0  0  6   256   # bus9.S_b
  0       0                  0  0  6   256   # bus9.fn
  0       0                  0  0  6   260   # bus9.p.vr
  0       0                  0  0  6   260   # bus9.p.vi
  0       0                  0  0  6   388   # bus9.p.ir
  0       0                  0  0  6   388   # bus9.p.ii
  0       0                  0  0  6   256   # bus9.V
  0       0                  0  0  6   256   # bus9.angle
 -1       1                  0  0  1   281   # bus9.displayPF
 -1     400                  0  0  1   280   # bus10.V_b
 -1       1                  0  0  1   280   # bus10.V_0
 -1       0                  0  0  1   280   # bus10.angle_0
 -1       1                  0  0  1   280   # bus10.P_0
 -1       0                  0  0  1   280   # bus10.Q_0
  0       0                  0  0  6   256   # bus10.S_b
  0       0                  0  0  6   256   # bus10.fn
  0       0                  0  0  6   260   # bus10.p.vr
  0       0                  0  0  6   260   # bus10.p.vi
  0       0                  0  0  6   388   # bus10.p.ir
  0       0                  0  0  6   388   # bus10.p.ii
  0       0                  0  0  6   256   # bus10.V
  0       0                  0  0  6   256   # bus10.angle
 -1       1                  0  0  1   281   # bus10.displayPF
 -1     400                  0  0  1   280   # bus11.V_b
 -1       1                  0  0  1   280   # bus11.V_0
 -1       0                  0  0  1   280   # bus11.angle_0
 -1       1                  0  0  1   280   # bus11.P_0
 -1       0                  0  0  1   280   # bus11.Q_0
  0       0                  0  0  6   256   # bus11.S_b
  0       0                  0  0  6   256   # bus11.fn
  0       0                  0  0  6   260   # bus11.p.vr
  0       0                  0  0  6   260   # bus11.p.vi
  0       0                  0  0  6   388   # bus11.p.ir
  0       0                  0  0  6   388   # bus11.p.ii
  0       0                  0  0  6   256   # bus11.V
  0       0                  0  0  6   256   # bus11.angle
 -1       1                  0  0  1   281   # bus11.displayPF
 -1     400                  0  0  1   280   # g1.V_b
  0       0                  0  0  6   256   # g1.V_0
  0       0                  0  0  6   256   # g1.angle_0
  0       0                  0  0  6   256   # g1.P_0
  0       0                  0  0  6   256   # g1.Q_0
  0       0                  0  0  6   256   # g1.S_b
  0       0                  0  0  6   256   # g1.fn
  0       0                  0  0  6   260   # g1.pwPin.vr
  0       0                  0  0  6   260   # g1.pwPin.vi
  0       0                  0  0  6   388   # g1.pwPin.ir
  0       0                  0  0  6   388   # g1.pwPin.ii
  0       0                  0  0  6   256   # g1.gENSAL.V_b
  0       0                  0  0  6   256   # g1.gENSAL.V_0
  0       0                  0  0  6   256   # g1.gENSAL.angle_0
  0       0                  0  0  6   256   # g1.gENSAL.P_0
  0       0                  0  0  6   256   # g1.gENSAL.Q_0
  0       0                  0  0  6   256   # g1.gENSAL.S_b
  0       0                  0  0  6   256   # g1.gENSAL.fn
 -1     900                  0  0  1   280   # g1.gENSAL.M_b
 -1       8                  0  0  1   280   # g1.gENSAL.Tpd0
 -1  2.9999999999999999E-02  0  0  1   280   # g1.gENSAL.Tppd0
 -1  5.0000000000000003E-02  0  0  1   280   # g1.gENSAL.Tppq0
 -1  6.5000000000000000E+00  0  0  1   280   # g1.gENSAL.H
 -1  2.0000000000000000E-02  0  0  1   280   # g1.gENSAL.D
 -1  1.8000000000000000E+00  0  0  1   280   # g1.gENSAL.Xd
 -1  1.7000000000000000E+00  0  0  1   280   # g1.gENSAL.Xq
 -1  2.9999999999999999E-01  0  0  1   280   # g1.gENSAL.Xpd
 -1  2.5000000000000000E-01  0  0  1   280   # g1.gENSAL.Xppd
 -1  2.5000000000000000E-01  0  0  1   280   # g1.gENSAL.Xppq
 -1  2.0000000000000001E-01  0  0  1   280   # g1.gENSAL.Xl
 -1  1.8600000000000000E-01  0  0  1   280   # g1.gENSAL.S10
 -1  8.0200000000000005E-01  0  0  1   280   # g1.gENSAL.S12
 -1  2.5000000000000001E-03  0  0  1   280   # g1.gENSAL.R_a
  0       0                  0  0  6   256   # g1.gENSAL.ETERM
  0       0                  0  0  6   256   # g1.gENSAL.PELEC
  0       0                  0  0  6   256   # g1.gENSAL.ISORCE
 -1       0                  0  0  2   272   # g1.gENSAL.w
  0       0                  0  0  3   256   # g1.gENSAL.der(w)
 -1       0                  0  0  2   272   # g1.gENSAL.delta
  0       0                  0  0  3   256   # g1.gENSAL.der(delta)
  0       0                  0  0  6   256   # g1.gENSAL.anglev
  0       0                  0  0  6   256   # g1.gENSAL.I
  0       0                  0  0  6   256   # g1.gENSAL.anglei
  0       0                  0  0  6   256   # g1.gENSAL.P
  0       0                  0  0  6   256   # g1.gENSAL.Q
  0       0                  0  0  6   256   # g1.gENSAL.Te
  0       0                  0  0  6   256   # g1.gENSAL.id
  0       0                  0  0  6   256   # g1.gENSAL.iq
  0       0                  0  0  6   256   # g1.gENSAL.ud
  0       0                  0  0  6   256   # g1.gENSAL.uq
  0       0                  0  0  6  1280   # g1.gENSAL.w_b
  0       0                  0  0  6  1280   # g1.gENSAL.anglev_rad
  0       0                  0  0  6  1280   # g1.gENSAL.CoB
  0       0                  0  0  6  1280   # g1.gENSAL.vr0
  0       0                  0  0  6  1280   # g1.gENSAL.vi0
  0       0                  0  0  6  1280   # g1.gENSAL.ir0
  0       0                  0  0  6  1280   # g1.gENSAL.ii0
  0       0                  0  0  6  1280   # g1.gENSAL.p0
  0       0                  0  0  6  1280   # g1.gENSAL.q0
 -1       0                  0  0  2   272   # g1.gENSAL.Epq
  0       0                  0  0  3   256   # g1.gENSAL.der(Epq)
 -1       0                  0  0  2   272   # g1.gENSAL.PSIkd
  0       0                  0  0  3   256   # g1.gENSAL.der(PSIkd)
 -1       0                  0  0  2   272   # g1.gENSAL.PSIppq
  0       0                  0  0  3   256   # g1.gENSAL.der(PSIppq)
  0       0                  0  0  6   256   # g1.gENSAL.PSIppd
  0       0                  0  0  6   256   # g1.gENSAL.PSId
  0       0                  0  0  6   256   # g1.gENSAL.PSIq
  0       0                  0  0  6  1280   # g1.gENSAL.Zs.re
  0       0                  0  0  6  1280   # g1.gENSAL.Zs.im
  0       0                  0  0  6  1280   # g1.gENSAL.Is.re
  0       0                  0  0  6  1280   # g1.gENSAL.Is.im
  0       0                  0  0  6  1280   # g1.gENSAL.PSIpp0.re
  0       0                  0  0  6  1280   # g1.gENSAL.PSIpp0.im
  0       0                  0  0  6  1280   # g1.gENSAL.a.re
  0       0                  0  0  6  1280   # g1.gENSAL.a.im
  0       0                  0  0  6  1280   # g1.gENSAL.Epqp.re
  0       0                  0  0  6  1280   # g1.gENSAL.Epqp.im
  0       0                  0  0  6  1280   # g1.gENSAL.delta0
  0       0                  0  0  6  1280   # g1.gENSAL.VT.re
  0       0                  0  0  6  1280   # g1.gENSAL.VT.im
  0       0                  0  0  6  1280   # g1.gENSAL.S.re
  0       0                  0  0  6  1280   # g1.gENSAL.S.im
  0       0                  0  0  6  1280   # g1.gENSAL.It.re
  0       0                  0  0  6  1280   # g1.gENSAL.It.im
  0       0                  0  0  6  1280   # g1.gENSAL.DQ_dq.re
  0       0                  0  0  6  1280   # g1.gENSAL.DQ_dq.im
  0       0                  0  0  6  1280   # g1.gENSAL.I_dq.re
  0       0                  0  0  6  1280   # g1.gENSAL.I_dq.im
  0       0                  0  0  6  1280   # g1.gENSAL.iq0
  0       0                  0  0  6  1280   # g1.gENSAL.id0
  0       0                  0  0  6  1280   # g1.gENSAL.ud0
  0       0                  0  0  6  1280   # g1.gENSAL.uq0
  0       0                  0  0  6  1280   # g1.gENSAL.PSIpp0_dq.re
  0       0                  0  0  6  1280   # g1.gENSAL.PSIpp0_dq.im
  0       0                  0  0  6  1280   # g1.gENSAL.PSIppq0
  0       0                  0  0  6  1280   # g1.gENSAL.PSIppd0
  0       0                  0  0  6  1280   # g1.gENSAL.PSIkd0
  0       0                  0  0  6  1280   # g1.gENSAL.PSId0
  0       0                  0  0  6  1280   # g1.gENSAL.PSIq0
  0       0                  0  0  6  1280   # g1.gENSAL.Epq0
  0       0                  0  0  6  1280   # g1.gENSAL.dsat
  0       0                  0  0  6  1280   # g1.gENSAL.efd0
  0       0                  0  0  6  1280   # g1.gENSAL.pm0
  0       0                  0  0  6  1280   # g1.gENSAL.K1d
  0       0                  0  0  6  1280   # g1.gENSAL.K2d
  0       0                  0  0  6  1280   # g1.gENSAL.K3d
  0       0                  0  0  6  1280   # g1.gENSAL.K4d
 -1     400                  0  0  1   280   # g2.V_b
  0       0                  0  0  6   256   # g2.V_0
  0       0                  0  0  6   256   # g2.angle_0
  0       0                  0  0  6   256   # g2.P_0
  0       0                  0  0  6   256   # g2.Q_0
  0       0                  0  0  6   256   # g2.S_b
  0       0                  0  0  6   256   # g2.fn
  0       0                  0  0  6   260   # g2.pwPin.vr
  0       0                  0  0  6   260   # g2.pwPin.vi
  0       0                  0  0  6   388   # g2.pwPin.ir
  0       0                  0  0  6   388   # g2.pwPin.ii
  0       0                  0  0  6   256   # g2.gENSAL.V_b
  0       0                  0  0  6   256   # g2.gENSAL.V_0
  0       0                  0  0  6   256   # g2.gENSAL.angle_0
  0       0                  0  0  6   256   # g2.gENSAL.P_0
  0       0                  0  0  6   256   # g2.gENSAL.Q_0
  0       0                  0  0  6   256   # g2.gENSAL.S_b
  0       0                  0  0  6   256   # g2.gENSAL.fn
 -1     900                  0  0  1   280   # g2.gENSAL.M_b
 -1       8                  0  0  1   280   # g2.gENSAL.Tpd0
 -1  2.9999999999999999E-02  0  0  1   280   # g2.gENSAL.Tppd0
 -1  5.0000000000000003E-02  0  0  1   280   # g2.gENSAL.Tppq0
 -1  6.5000000000000000E+00  0  0  1   280   # g2.gENSAL.H
 -1  2.0000000000000000E-02  0  0  1   280   # g2.gENSAL.D
 -1  1.8000000000000000E+00  0  0  1   280   # g2.gENSAL.Xd
 -1  1.7000000000000000E+00  0  0  1   280   # g2.gENSAL.Xq
 -1  2.9999999999999999E-01  0  0  1   280   # g2.gENSAL.Xpd
 -1  2.5000000000000000E-01  0  0  1   280   # g2.gENSAL.Xppd
 -1  2.5000000000000000E-01  0  0  1   280   # g2.gENSAL.Xppq
 -1  2.0000000000000001E-01  0  0  1   280   # g2.gENSAL.Xl
 -1  1.8600000000000000E-01  0  0  1   280   # g2.gENSAL.S10
 -1  8.0200000000000005E-01  0  0  1   280   # g2.gENSAL.S12
 -1  2.5000000000000001E-03  0  0  1   280   # g2.gENSAL.R_a
  0       0                  0  0  6   256   # g2.gENSAL.ETERM
  0       0                  0  0  6   256   # g2.gENSAL.PELEC
  0       0                  0  0  6   256   # g2.gENSAL.ISORCE
 -1       0                  0  0  2   272   # g2.gENSAL.w
  0       0                  0  0  3   256   # g2.gENSAL.der(w)
 -1       0                  0  0  2   272   # g2.gENSAL.delta
  0       0                  0  0  3   256   # g2.gENSAL.der(delta)
  0       0                  0  0  6   256   # g2.gENSAL.anglev
  0       0                  0  0  6   256   # g2.gENSAL.I
  0       0                  0  0  6   256   # g2.gENSAL.anglei
  0       0                  0  0  6   256   # g2.gENSAL.P
  0       0                  0  0  6   256   # g2.gENSAL.Q
  0       0                  0  0  6   256   # g2.gENSAL.Te
  0       0                  0  0  6   256   # g2.gENSAL.id
  0       0                  0  0  6   256   # g2.gENSAL.iq
  0       0                  0  0  6   256   # g2.gENSAL.ud
  0       0                  0  0  6   256   # g2.gENSAL.uq
  0       0                  0  0  6  1280   # g2.gENSAL.w_b
  0       0                  0  0  6  1280   # g2.gENSAL.anglev_rad
  0       0                  0  0  6  1280   # g2.gENSAL.CoB
  0       0                  0  0  6  1280   # g2.gENSAL.vr0
  0       0                  0  0  6  1280   # g2.gENSAL.vi0
  0       0                  0  0  6  1280   # g2.gENSAL.ir0
  0       0                  0  0  6  1280   # g2.gENSAL.ii0
  0       0                  0  0  6  1280   # g2.gENSAL.p0
  0       0                  0  0  6  1280   # g2.gENSAL.q0
 -1       0                  0  0  2   272   # g2.gENSAL.Epq
  0       0                  0  0  3   256   # g2.gENSAL.der(Epq)
 -1       0                  0  0  2   272   # g2.gENSAL.PSIkd
  0       0                  0  0  3   256   # g2.gENSAL.der(PSIkd)
 -1       0                  0  0  2   272   # g2.gENSAL.PSIppq
  0       0                  0  0  3   256   # g2.gENSAL.der(PSIppq)
  0       0                  0  0  6   256   # g2.gENSAL.PSIppd
  0       0                  0  0  6   256   # g2.gENSAL.PSId
  0       0                  0  0  6   256   # g2.gENSAL.PSIq
  0       0                  0  0  6  1280   # g2.gENSAL.Zs.re
  0       0                  0  0  6  1280   # g2.gENSAL.Zs.im
  0       0                  0  0  6  1280   # g2.gENSAL.Is.re
  0       0                  0  0  6  1280   # g2.gENSAL.Is.im
  0       0                  0  0  6  1280   # g2.gENSAL.PSIpp0.re
  0       0                  0  0  6  1280   # g2.gENSAL.PSIpp0.im
  0       0                  0  0  6  1280   # g2.gENSAL.a.re
  0       0                  0  0  6  1280   # g2.gENSAL.a.im
  0       0                  0  0  6  1280   # g2.gENSAL.Epqp.re
  0       0                  0  0  6  1280   # g2.gENSAL.Epqp.im
  0       0                  0  0  6  1280   # g2.gENSAL.delta0
  0       0                  0  0  6  1280   # g2.gENSAL.VT.re
  0       0                  0  0  6  1280   # g2.gENSAL.VT.im
  0       0                  0  0  6  1280   # g2.gENSAL.S.re
  0       0                  0  0  6  1280   # g2.gENSAL.S.im
  0       0                  0  0  6  1280   # g2.gENSAL.It.re
  0       0                  0  0  6  1280   # g2.gENSAL.It.im
  0       0                  0  0  6  1280   # g2.gENSAL.DQ_dq.re
  0       0                  0  0  6  1280   # g2.gENSAL.DQ_dq.im
  0       0                  0  0  6  1280   # g2.gENSAL.I_dq.re
  0       0                  0  0  6  1280   # g2.gENSAL.I_dq.im
  0       0                  0  0  6  1280   # g2.gENSAL.iq0
  0       0                  0  0  6  1280   # g2.gENSAL.id0
  0       0                  0  0  6  1280   # g2.gENSAL.ud0
  0       0                  0  0  6  1280   # g2.gENSAL.uq0
  0       0                  0  0  6  1280   # g2.gENSAL.PSIpp0_dq.re
  0       0                  0  0  6  1280   # g2.gENSAL.PSIpp0_dq.im
  0       0                  0  0  6  1280   # g2.gENSAL.PSIppq0
  0       0                  0  0  6  1280   # g2.gENSAL.PSIppd0
  0       0                  0  0  6  1280   # g2.gENSAL.PSIkd0
  0       0                  0  0  6  1280   # g2.gENSAL.PSId0
  0       0                  0  0  6  1280   # g2.gENSAL.PSIq0
  0       0                  0  0  6  1280   # g2.gENSAL.Epq0
  0       0                  0  0  6  1280   # g2.gENSAL.dsat
  0       0                  0  0  6  1280   # g2.gENSAL.efd0
  0       0                  0  0  6  1280   # g2.gENSAL.pm0
  0       0                  0  0  6  1280   # g2.gENSAL.K1d
  0       0                  0  0  6  1280   # g2.gENSAL.K2d
  0       0                  0  0  6  1280   # g2.gENSAL.K3d
  0       0                  0  0  6  1280   # g2.gENSAL.K4d
 -1     400                  0  0  1   280   # g3.V_b
  0       0                  0  0  6   256   # g3.V_0
  0       0                  0  0  6   256   # g3.angle_0
  0       0                  0  0  6   256   # g3.P_0
  0       0                  0  0  6   256   # g3.Q_0
  0       0                  0  0  6   256   # g3.S_b
  0       0                  0  0  6   256   # g3.fn
  0       0                  0  0  6   260   # g3.pwPin.vr
  0       0                  0  0  6   260   # g3.pwPin.vi
  0       0                  0  0  6   388   # g3.pwPin.ir
  0       0                  0  0  6   388   # g3.pwPin.ii
  0       0                  0  0  6   256   # g3.gENSAL.V_b
  0       0                  0  0  6   256   # g3.gENSAL.V_0
  0       0                  0  0  6   256   # g3.gENSAL.angle_0
  0       0                  0  0  6   256   # g3.gENSAL.P_0
  0       0                  0  0  6   256   # g3.gENSAL.Q_0
  0       0                  0  0  6   256   # g3.gENSAL.S_b
  0       0                  0  0  6   256   # g3.gENSAL.fn
 -1     900                  0  0  1   280   # g3.gENSAL.M_b
 -1       8                  0  0  1   280   # g3.gENSAL.Tpd0
 -1  2.9999999999999999E-02  0  0  1   280   # g3.gENSAL.Tppd0
 -1  5.0000000000000003E-02  0  0  1   280   # g3.gENSAL.Tppq0
 -1  6.1749999999999998E+00  0  0  1   280   # g3.gENSAL.H
 -1       0                  0  0  1   280   # g3.gENSAL.D
 -1  1.8000000000000000E+00  0  0  1   280   # g3.gENSAL.Xd
 -1  1.7000000000000000E+00  0  0  1   280   # g3.gENSAL.Xq
 -1  2.9999999999999999E-01  0  0  1   280   # g3.gENSAL.Xpd
 -1  2.5000000000000000E-01  0  0  1   280   # g3.gENSAL.Xppd
 -1  2.5000000000000000E-01  0  0  1   280   # g3.gENSAL.Xppq
 -1  2.0000000000000001E-01  0  0  1   280   # g3.gENSAL.Xl
 -1  1.8600000000000000E-01  0  0  1   280   # g3.gENSAL.S10
 -1  8.0200000000000005E-01  0  0  1   280   # g3.gENSAL.S12
 -1  2.5000000000000001E-03  0  0  1   280   # g3.gENSAL.R_a
  0       0                  0  0  6   256   # g3.gENSAL.ETERM
  0       0                  0  0  6   256   # g3.gENSAL.PELEC
  0       0                  0  0  6   256   # g3.gENSAL.ISORCE
 -1       0                  0  0  2   272   # g3.gENSAL.w
  0       0                  0  0  3   256   # g3.gENSAL.der(w)
 -1       0                  0  0  2   272   # g3.gENSAL.delta
  0       0                  0  0  3   256   # g3.gENSAL.der(delta)
  0       0                  0  0  6   256   # g3.gENSAL.anglev
  0       0                  0  0  6   256   # g3.gENSAL.I
  0       0                  0  0  6   256   # g3.gENSAL.anglei
  0       0                  0  0  6   256   # g3.gENSAL.P
  0       0                  0  0  6   256   # g3.gENSAL.Q
  0       0                  0  0  6   256   # g3.gENSAL.Te
  0       0                  0  0  6   256   # g3.gENSAL.id
  0       0                  0  0  6   256   # g3.gENSAL.iq
  0       0                  0  0  6   256   # g3.gENSAL.ud
  0       0                  0  0  6   256   # g3.gENSAL.uq
  0       0                  0  0  6  1280   # g3.gENSAL.w_b
  0       0                  0  0  6  1280   # g3.gENSAL.anglev_rad
  0       0                  0  0  6  1280   # g3.gENSAL.CoB
  0       0                  0  0  6  1280   # g3.gENSAL.vr0
  0       0                  0  0  6  1280   # g3.gENSAL.vi0
  0       0                  0  0  6  1280   # g3.gENSAL.ir0
  0       0                  0  0  6  1280   # g3.gENSAL.ii0
  0       0                  0  0  6  1280   # g3.gENSAL.p0
  0       0                  0  0  6  1280   # g3.gENSAL.q0
 -1       0                  0  0  2   272   # g3.gENSAL.Epq
  0       0                  0  0  3   256   # g3.gENSAL.der(Epq)
 -1       0                  0  0  2   272   # g3.gENSAL.PSIkd
  0       0                  0  0  3   256   # g3.gENSAL.der(PSIkd)
 -1       0                  0  0  2   272   # g3.gENSAL.PSIppq
  0       0                  0  0  3   256   # g3.gENSAL.der(PSIppq)
  0       0                  0  0  6   256   # g3.gENSAL.PSIppd
  0       0                  0  0  6   256   # g3.gENSAL.PSId
  0       0                  0  0  6   256   # g3.gENSAL.PSIq
  0       0                  0  0  6  1280   # g3.gENSAL.Zs.re
  0       0                  0  0  6  1280   # g3.gENSAL.Zs.im
  0       0                  0  0  6  1280   # g3.gENSAL.Is.re
  0       0                  0  0  6  1280   # g3.gENSAL.Is.im
  0       0                  0  0  6  1280   # g3.gENSAL.PSIpp0.re
  0       0                  0  0  6  1280   # g3.gENSAL.PSIpp0.im
  0       0                  0  0  6  1280   # g3.gENSAL.a.re
  0       0                  0  0  6  1280   # g3.gENSAL.a.im
  0       0                  0  0  6  1280   # g3.gENSAL.Epqp.re
  0       0                  0  0  6  1280   # g3.gENSAL.Epqp.im
  0       0                  0  0  6  1280   # g3.gENSAL.delta0
  0       0                  0  0  6  1280   # g3.gENSAL.VT.re
  0       0                  0  0  6  1280   # g3.gENSAL.VT.im
  0       0                  0  0  6  1280   # g3.gENSAL.S.re
  0       0                  0  0  6  1280   # g3.gENSAL.S.im
  0       0                  0  0  6  1280   # g3.gENSAL.It.re
  0       0                  0  0  6  1280   # g3.gENSAL.It.im
  0       0                  0  0  6  1280   # g3.gENSAL.DQ_dq.re
  0       0                  0  0  6  1280   # g3.gENSAL.DQ_dq.im
  0       0                  0  0  6  1280   # g3.gENSAL.I_dq.re
  0       0                  0  0  6  1280   # g3.gENSAL.I_dq.im
  0       0                  0  0  6  1280   # g3.gENSAL.iq0
  0       0                  0  0  6  1280   # g3.gENSAL.id0
  0       0                  0  0  6  1280   # g3.gENSAL.ud0
  0       0                  0  0  6  1280   # g3.gENSAL.uq0
  0       0                  0  0  6  1280   # g3.gENSAL.PSIpp0_dq.re
  0       0                  0  0  6  1280   # g3.gENSAL.PSIpp0_dq.im
  0       0                  0  0  6  1280   # g3.gENSAL.PSIppq0
  0       0                  0  0  6  1280   # g3.gENSAL.PSIppd0
  0       0                  0  0  6  1280   # g3.gENSAL.PSIkd0
  0       0                  0  0  6  1280   # g3.gENSAL.PSId0
  0       0                  0  0  6  1280   # g3.gENSAL.PSIq0
  0       0                  0  0  6  1280   # g3.gENSAL.Epq0
  0       0                  0  0  6  1280   # g3.gENSAL.dsat
  0       0                  0  0  6  1280   # g3.gENSAL.efd0
  0       0                  0  0  6  1280   # g3.gENSAL.pm0
  0       0                  0  0  6  1280   # g3.gENSAL.K1d
  0       0                  0  0  6  1280   # g3.gENSAL.K2d
  0       0                  0  0  6  1280   # g3.gENSAL.K3d
  0       0                  0  0  6  1280   # g3.gENSAL.K4d
 -1     400                  0  0  1   280   # g4.V_b
  0       0                  0  0  6   256   # g4.V_0
  0       0                  0  0  6   256   # g4.angle_0
  0       0                  0  0  6   256   # g4.P_0
  0       0                  0  0  6   256   # g4.Q_0
  0       0                  0  0  6   256   # g4.S_b
  0       0                  0  0  6   256   # g4.fn
  0       0                  0  0  6   260   # g4.pwPin.vr
  0       0                  0  0  6   260   # g4.pwPin.vi
  0       0                  0  0  6   388   # g4.pwPin.ir
  0       0                  0  0  6   388   # g4.pwPin.ii
  0       0                  0  0  6   256   # g4.gENSAL.V_b
  0       0                  0  0  6   256   # g4.gENSAL.V_0
  0       0                  0  0  6   256   # g4.gENSAL.angle_0
  0       0                  0  0  6   256   # g4.gENSAL.P_0
  0       0                  0  0  6   256   # g4.gENSAL.Q_0
  0       0                  0  0  6   256   # g4.gENSAL.S_b
  0       0                  0  0  6   256   # g4.gENSAL.fn
 -1     900                  0  0  1   280   # g4.gENSAL.M_b
 -1       8                  0  0  1   280   # g4.gENSAL.Tpd0
 -1  2.9999999999999999E-02  0  0  1   280   # g4.gENSAL.Tppd0
 -1  5.0000000000000003E-02  0  0  1   280   # g4.gENSAL.Tppq0
 -1  6.1749999999999998E+00  0  0  1   280   # g4.gENSAL.H
 -1  2.0000000000000000E-02  0  0  1   280   # g4.gENSAL.D
 -1  1.8000000000000000E+00  0  0  1   280   # g4.gENSAL.Xd
 -1  1.7000000000000000E+00  0  0  1   280   # g4.gENSAL.Xq
 -1  2.9999999999999999E-01  0  0  1   280   # g4.gENSAL.Xpd
 -1  2.5000000000000000E-01  0  0  1   280   # g4.gENSAL.Xppd
 -1  2.5000000000000000E-01  0  0  1   280   # g4.gENSAL.Xppq
 -1  2.0000000000000001E-01  0  0  1   280   # g4.gENSAL.Xl
 -1  1.8600000000000000E-01  0  0  1   280   # g4.gENSAL.S10
 -1  8.0200000000000005E-01  0  0  1   280   # g4.gENSAL.S12
 -1  2.5000000000000001E-03  0  0  1   280   # g4.gENSAL.R_a
  0       0                  0  0  6   256   # g4.gENSAL.ETERM
  0       0                  0  0  6   256   # g4.gENSAL.PELEC
  0       0                  0  0  6   256   # g4.gENSAL.ISORCE
 -1       0                  0  0  2   272   # g4.gENSAL.w
  0       0                  0  0  3   256   # g4.gENSAL.der(w)
 -1       0                  0  0  2   272   # g4.gENSAL.delta
  0       0                  0  0  3   256   # g4.gENSAL.der(delta)
  0       0                  0  0  6   256   # g4.gENSAL.anglev
  0       0                  0  0  6   256   # g4.gENSAL.I
  0       0                  0  0  6   256   # g4.gENSAL.anglei
  0       0                  0  0  6   256   # g4.gENSAL.P
  0       0                  0  0  6   256   # g4.gENSAL.Q
  0       0                  0  0  6   256   # g4.gENSAL.Te
  0       0                  0  0  6   256   # g4.gENSAL.id
  0       0                  0  0  6   256   # g4.gENSAL.iq
  0       0                  0  0  6   256   # g4.gENSAL.ud
  0       0                  0  0  6   256   # g4.gENSAL.uq
  0       0                  0  0  6  1280   # g4.gENSAL.w_b
  0       0                  0  0  6  1280   # g4.gENSAL.anglev_rad
  0       0                  0  0  6  1280   # g4.gENSAL.CoB
  0       0                  0  0  6  1280   # g4.gENSAL.vr0
  0       0                  0  0  6  1280   # g4.gENSAL.vi0
  0       0                  0  0  6  1280   # g4.gENSAL.ir0
  0       0                  0  0  6  1280   # g4.gENSAL.ii0
  0       0                  0  0  6  1280   # g4.gENSAL.p0
  0       0                  0  0  6  1280   # g4.gENSAL.q0
 -1       0                  0  0  2   272   # g4.gENSAL.Epq
  0       0                  0  0  3   256   # g4.gENSAL.der(Epq)
 -1       0                  0  0  2   272   # g4.gENSAL.PSIkd
  0       0                  0  0  3   256   # g4.gENSAL.der(PSIkd)
 -1       0                  0  0  2   272   # g4.gENSAL.PSIppq
  0       0                  0  0  3   256   # g4.gENSAL.der(PSIppq)
  0       0                  0  0  6   256   # g4.gENSAL.PSIppd
  0       0                  0  0  6   256   # g4.gENSAL.PSId
  0       0                  0  0  6   256   # g4.gENSAL.PSIq
  0       0                  0  0  6  1280   # g4.gENSAL.Zs.re
  0       0                  0  0  6  1280   # g4.gENSAL.Zs.im
  0       0                  0  0  6  1280   # g4.gENSAL.Is.re
  0       0                  0  0  6  1280   # g4.gENSAL.Is.im
  0       0                  0  0  6  1280   # g4.gENSAL.PSIpp0.re
  0       0                  0  0  6  1280   # g4.gENSAL.PSIpp0.im
  0       0                  0  0  6  1280   # g4.gENSAL.a.re
  0       0                  0  0  6  1280   # g4.gENSAL.a.im
  0       0                  0  0  6  1280   # g4.gENSAL.Epqp.re
  0       0                  0  0  6  1280   # g4.gENSAL.Epqp.im
  0       0                  0  0  6  1280   # g4.gENSAL.delta0
  0       0                  0  0  6  1280   # g4.gENSAL.VT.re
  0       0                  0  0  6  1280   # g4.gENSAL.VT.im
  0       0                  0  0  6  1280   # g4.gENSAL.S.re
  0       0                  0  0  6  1280   # g4.gENSAL.S.im
  0       0                  0  0  6  1280   # g4.gENSAL.It.re
  0       0                  0  0  6  1280   # g4.gENSAL.It.im
  0       0                  0  0  6  1280   # g4.gENSAL.DQ_dq.re
  0       0                  0  0  6  1280   # g4.gENSAL.DQ_dq.im
  0       0                  0  0  6  1280   # g4.gENSAL.I_dq.re
  0       0                  0  0  6  1280   # g4.gENSAL.I_dq.im
  0       0                  0  0  6  1280   # g4.gENSAL.iq0
  0       0                  0  0  6  1280   # g4.gENSAL.id0
  0       0                  0  0  6  1280   # g4.gENSAL.ud0
  0       0                  0  0  6  1280   # g4.gENSAL.uq0
  0       0                  0  0  6  1280   # g4.gENSAL.PSIpp0_dq.re
  0       0                  0  0  6  1280   # g4.gENSAL.PSIpp0_dq.im
  0       0                  0  0  6  1280   # g4.gENSAL.PSIppq0
  0       0                  0  0  6  1280   # g4.gENSAL.PSIppd0
  0       0                  0  0  6  1280   # g4.gENSAL.PSIkd0
  0       0                  0  0  6  1280   # g4.gENSAL.PSId0
  0       0                  0  0  6  1280   # g4.gENSAL.PSIq0
  0       0                  0  0  6  1280   # g4.gENSAL.Epq0
  0       0                  0  0  6  1280   # g4.gENSAL.dsat
  0       0                  0  0  6  1280   # g4.gENSAL.efd0
  0       0                  0  0  6  1280   # g4.gENSAL.pm0
  0       0                  0  0  6  1280   # g4.gENSAL.K1d
  0       0                  0  0  6  1280   # g4.gENSAL.K2d
  0       0                  0  0  6  1280   # g4.gENSAL.K3d
  0       0                  0  0  6  1280   # g4.gENSAL.K4d
  0       0                  0  0  6   420   # Line6_7.p.ir
  0       0                  0  0  6   420   # Line6_7.p.ii
  0       0                  0  0  6   388   # Line6_7.n.ir
  0       0                  0  0  6   388   # Line6_7.n.ii
  0       0                  0  0  6   256   # Line6_7.R
  0       0                  0  0  6   256   # Line6_7.X
 -1       0                  0  0  1   280   # Line6_7.G
  0       0                  0  0  6   256   # Line6_7.B
  0       0                  0  0  6   256   # Line6_7.S_b
  0  9.9999999999999995E+59  0  0  6   256   # Line6_7.t1
  0  9.9999999999999995E+59  0  0  6   256   # Line6_7.t2
  0       1                  0  0  6   258   # Line6_7.opening
 -1       0                  0  0  1   281   # Line6_7.displayPF
  0       0                  0  0  6   256   # Line6_7.P12
  0       0                  0  0  6   256   # Line6_7.P21
  0       0                  0  0  6   256   # Line6_7.Q12
  0       0                  0  0  6   256   # Line6_7.Q21
  0       0                  0  0  6  1280   # Line6_7.Y.re
  0       0                  0  0  6  1280   # Line6_7.Y.im
  0       0                  0  0  6  1280   # Line6_7.Z.re
  0       0                  0  0  6  1280   # Line6_7.Z.im
  0       0                  0  0  6   420   # Line5_6.p.ir
  0       0                  0  0  6   420   # Line5_6.p.ii
  0       0                  0  0  6   420   # Line5_6.n.ir
  0       0                  0  0  6   420   # Line5_6.n.ii
  0       0                  0  0  6   256   # Line5_6.R
  0       0                  0  0  6   256   # Line5_6.X
 -1       0                  0  0  1   280   # Line5_6.G
  0       0                  0  0  6   256   # Line5_6.B
  0       0                  0  0  6   256   # Line5_6.S_b
  0  9.9999999999999995E+59  0  0  6   256   # Line5_6.t1
  0  9.9999999999999995E+59  0  0  6   256   # Line5_6.t2
  0       1                  0  0  6   258   # Line5_6.opening
 -1       0                  0  0  1   281   # Line5_6.displayPF
  0       0                  0  0  6   256   # Line5_6.P12
  0       0                  0  0  6   256   # Line5_6.P21
  0       0                  0  0  6   256   # Line5_6.Q12
  0       0                  0  0  6   256   # Line5_6.Q21
  0       0                  0  0  6  1280   # Line5_6.Y.re
  0       0                  0  0  6  1280   # Line5_6.Y.im
  0       0                  0  0  6  1280   # Line5_6.Z.re
  0       0                  0  0  6  1280   # Line5_6.Z.im
  0       0                  0  0  6   420   # Line7_8_1.p.ir
  0       0                  0  0  6   420   # Line7_8_1.p.ii
  0       0                  0  0  6   388   # Line7_8_1.n.ir
  0       0                  0  0  6   388   # Line7_8_1.n.ii
  0       0                  0  0  6   256   # Line7_8_1.R
  0       0                  0  0  6   256   # Line7_8_1.X
 -1       0                  0  0  1   280   # Line7_8_1.G
  0       0                  0  0  6   256   # Line7_8_1.B
  0       0                  0  0  6   256   # Line7_8_1.S_b
  0  9.9999999999999995E+59  0  0  6   256   # Line7_8_1.t1
  0  9.9999999999999995E+59  0  0  6   256   # Line7_8_1.t2
  0       1                  0  0  6   258   # Line7_8_1.opening
 -1       0                  0  0  1   281   # Line7_8_1.displayPF
  0       0                  0  0  6   256   # Line7_8_1.P12
  0       0                  0  0  6   256   # Line7_8_1.P21
  0       0                  0  0  6   256   # Line7_8_1.Q12
  0       0                  0  0  6   256   # Line7_8_1.Q21
  0       0                  0  0  6  1280   # Line7_8_1.Y.re
  0       0                  0  0  6  1280   # Line7_8_1.Y.im
  0       0                  0  0  6  1280   # Line7_8_1.Z.re
  0       0                  0  0  6  1280   # Line7_8_1.Z.im
  0       0                  0  0  6   420   # Line7_8_2.p.ir
  0       0                  0  0  6   420   # Line7_8_2.p.ii
  0       0                  0  0  6   420   # Line7_8_2.n.ir
  0       0                  0  0  6   420   # Line7_8_2.n.ii
  0       0                  0  0  6   256   # Line7_8_2.R
  0       0                  0  0  6   256   # Line7_8_2.X
 -1       0                  0  0  1   280   # Line7_8_2.G
  0       0                  0  0  6   256   # Line7_8_2.B
  0       0                  0  0  6   256   # Line7_8_2.S_b
  0  9.9999999999999995E+59  0  0  6   256   # Line7_8_2.t1
  0  9.9999999999999995E+59  0  0  6   256   # Line7_8_2.t2
  0       1                  0  0  6   258   # Line7_8_2.opening
 -1       0                  0  0  1   281   # Line7_8_2.displayPF
  0       0                  0  0  6   256   # Line7_8_2.P12
  0       0                  0  0  6   256   # Line7_8_2.P21
  0       0                  0  0  6   256   # Line7_8_2.Q12
  0       0                  0  0  6   256   # Line7_8_2.Q21
  0       0                  0  0  6  1280   # Line7_8_2.Y.re
  0       0                  0  0  6  1280   # Line7_8_2.Y.im
  0       0                  0  0  6  1280   # Line7_8_2.Z.re
  0       0                  0  0  6  1280   # Line7_8_2.Z.im
  0       0                  0  0  6   420   # Line8_9_2.p.ir
  0       0                  0  0  6   420   # Line8_9_2.p.ii
  0       0                  0  0  6   420   # Line8_9_2.n.ir
  0       0                  0  0  6   420   # Line8_9_2.n.ii
  0       0                  0  0  6   256   # Line8_9_2.R
  0       0                  0  0  6   256   # Line8_9_2.X
 -1       0                  0  0  1   280   # Line8_9_2.G
  0       0                  0  0  6   256   # Line8_9_2.B
  0       0                  0  0  6   256   # Line8_9_2.S_b
  0  9.9999999999999995E+59  0  0  6   256   # Line8_9_2.t1
  0  9.9999999999999995E+59  0  0  6   256   # Line8_9_2.t2
  0       1                  0  0  6   258   # Line8_9_2.opening
 -1       0                  0  0  1   281   # Line8_9_2.displayPF
  0       0                  0  0  6   256   # Line8_9_2.P12
  0       0                  0  0  6   256   # Line8_9_2.P21
  0       0                  0  0  6   256   # Line8_9_2.Q12
  0       0                  0  0  6   256   # Line8_9_2.Q21
  0       0                  0  0  6  1280   # Line8_9_2.Y.re
  0       0                  0  0  6  1280   # Line8_9_2.Y.im
  0       0                  0  0  6  1280   # Line8_9_2.Z.re
  0       0                  0  0  6  1280   # Line8_9_2.Z.im
  0       0                  0  0  6   420   # Line8_9_1.p.ir
  0       0                  0  0  6   420   # Line8_9_1.p.ii
  0       0                  0  0  6   388   # Line8_9_1.n.ir
  0       0                  0  0  6   388   # Line8_9_1.n.ii
  0       0                  0  0  6   256   # Line8_9_1.R
  0       0                  0  0  6   256   # Line8_9_1.X
 -1       0                  0  0  1   280   # Line8_9_1.G
  0       0                  0  0  6   256   # Line8_9_1.B
  0       0                  0  0  6   256   # Line8_9_1.S_b
  0  9.9999999999999995E+59  0  0  6   256   # Line8_9_1.t1
  0  9.9999999999999995E+59  0  0  6   256   # Line8_9_1.t2
  0       1                  0  0  6   258   # Line8_9_1.opening
 -1       0                  0  0  1   281   # Line8_9_1.displayPF
  0       0                  0  0  6   256   # Line8_9_1.P12
  0       0                  0  0  6   256   # Line8_9_1.P21
  0       0                  0  0  6   256   # Line8_9_1.Q12
  0       0                  0  0  6   256   # Line8_9_1.Q21
  0       0                  0  0  6  1280   # Line8_9_1.Y.re
  0       0                  0  0  6  1280   # Line8_9_1.Y.im
  0       0                  0  0  6  1280   # Line8_9_1.Z.re
  0       0                  0  0  6  1280   # Line8_9_1.Z.im
  0       0                  0  0  6   420   # Line9_10.p.ir
  0       0                  0  0  6   420   # Line9_10.p.ii
  0       0                  0  0  6   420   # Line9_10.n.ir
  0       0                  0  0  6   420   # Line9_10.n.ii
  0       0                  0  0  6   256   # Line9_10.R
  0       0                  0  0  6   256   # Line9_10.X
 -1       0                  0  0  1   280   # Line9_10.G
  0       0                  0  0  6   256   # Line9_10.B
  0       0                  0  0  6   256   # Line9_10.S_b
  0  9.9999999999999995E+59  0  0  6   256   # Line9_10.t1
  0  9.9999999999999995E+59  0  0  6   256   # Line9_10.t2
  0       1                  0  0  6   258   # Line9_10.opening
 -1       0                  0  0  1   281   # Line9_10.displayPF
  0       0                  0  0  6   256   # Line9_10.P12
  0       0                  0  0  6   256   # Line9_10.P21
  0       0                  0  0  6   256   # Line9_10.Q12
  0       0                  0  0  6   256   # Line9_10.Q21
  0       0                  0  0  6  1280   # Line9_10.Y.re
  0       0                  0  0  6  1280   # Line9_10.Y.im
  0       0                  0  0  6  1280   # Line9_10.Z.re
  0       0                  0  0  6  1280   # Line9_10.Z.im
  0       0                  0  0  6   388   # Line10_11.p.ir
  0       0                  0  0  6   388   # Line10_11.p.ii
  0       0                  0  0  6   420   # Line10_11.n.ir
  0       0                  0  0  6   420   # Line10_11.n.ii
  0       0                  0  0  6   256   # Line10_11.R
  0       0                  0  0  6   256   # Line10_11.X
 -1       0                  0  0  1   280   # Line10_11.G
  0       0                  0  0  6   256   # Line10_11.B
  0       0                  0  0  6   256   # Line10_11.S_b
  0  9.9999999999999995E+59  0  0  6   256   # Line10_11.t1
  0  9.9999999999999995E+59  0  0  6   256   # Line10_11.t2
  0       1                  0  0  6   258   # Line10_11.opening
 -1       0                  0  0  1   281   # Line10_11.displayPF
  0       0                  0  0  6   256   # Line10_11.P12
  0       0                  0  0  6   256   # Line10_11.P21
  0       0                  0  0  6   256   # Line10_11.Q12
  0       0                  0  0  6   256   # Line10_11.Q21
  0       0                  0  0  6  1280   # Line10_11.Y.re
  0       0                  0  0  6  1280   # Line10_11.Y.im
  0       0                  0  0  6  1280   # Line10_11.Z.re
  0       0                  0  0  6  1280   # Line10_11.Z.im
 -1     400                  0  0  1   280   # Load7.V_b
  0       0                  0  0  6   256   # Load7.V_0
  0       0                  0  0  6   256   # Load7.angle_0
  0       0                  0  0  6   256   # Load7.P_0
  0       0                  0  0  6   256   # Load7.Q_0
  0       0                  0  0  6   256   # Load7.S_b
  0       0                  0  0  6   256   # Load7.fn
  0       0                  0  0  6   256   # Load7.S_p.re
  0       0                  0  0  6   256   # Load7.S_p.im
 -1       0                  0  0  1   280   # Load7.S_i.re
 -1       0                  0  0  1   280   # Load7.S_i.im
 -1       0                  0  0  1   280   # Load7.S_y.re
 -1       0                  0  0  1   280   # Load7.S_y.im
 -1       1                  0  0  1   280   # Load7.a.re
 -1       0                  0  0  1   280   # Load7.a.im
 -1       0                  0  0  1   280   # Load7.b.re
 -1       1                  0  0  1   280   # Load7.b.im
  0  6.9999999999999996E-01  0  0  6   256   # Load7.PQBRAK
  0       1                  0  0  6   258   # Load7.characteristic
  0       0                  0  0  6   388   # Load7.p.ir
  0       0                  0  0  6   388   # Load7.p.ii
  0       0                  0  0  6   256   # Load7.angle
  0       0                  0  0  6   256   # Load7.v
  0       0                  0  0  6   256   # Load7.P
  0       0                  0  0  6   256   # Load7.Q
  0       0                  0  0  6  1280   # Load7.anglev_rad
  0       0                  0  0  6  1280   # Load7.p0
  0       0                  0  0  6  1280   # Load7.q0
  0       0                  0  0  6  1280   # Load7.vr0
  0       0                  0  0  6  1280   # Load7.vi0
  0       0                  0  0  6  1280   # Load7.ir0
  0       0                  0  0  6  1280   # Load7.ii0
  0       0                  0  0  6  1280   # Load7.S_P.re
  0       0                  0  0  6  1280   # Load7.S_P.im
  0       0                  0  0  6  1280   # Load7.S_I.re
  0       0                  0  0  6  1280   # Load7.S_I.im
  0       0                  0  0  6  1280   # Load7.S_Y.re
  0       0                  0  0  6  1280   # Load7.S_Y.im
 -1  1.5020000000000000E+00  0  0  1  1304   # Load7.a2
 -1  1.7689999999999999E+00  0  0  1  1304   # Load7.b2
 -1  4.8809999999999998E-01  0  0  1  1304   # Load7.a0
 -1 -4.9990000000000001E-01  0  0  1  1304   # Load7.a1
 -1  1.3890000000000000E-01  0  0  1  1304   # Load7.b1
 -1  3.9640000000000000E+00  0  0  1  1304   # Load7.wp
  0       1                  0  0  6  1280   # Load7.kP
  0       1                  0  0  6  1280   # Load7.kI
 -1     400                  0  0  1   280   # Load9.V_b
  0       0                  0  0  6   256   # Load9.V_0
  0       0                  0  0  6   256   # Load9.angle_0
  0       0                  0  0  6   256   # Load9.P_0
  0       0                  0  0  6   256   # Load9.Q_0
  0       0                  0  0  6   256   # Load9.S_b
  0       0                  0  0  6   256   # Load9.fn
  0       0                  0  0  6   256   # Load9.S_p.re
  0       0                  0  0  6   256   # Load9.S_p.im
 -1       0                  0  0  1   280   # Load9.S_i.re
 -1       0                  0  0  1   280   # Load9.S_i.im
 -1       0                  0  0  1   280   # Load9.S_y.re
 -1       0                  0  0  1   280   # Load9.S_y.im
 -1       1                  0  0  1   280   # Load9.a.re
 -1       0                  0  0  1   280   # Load9.a.im
 -1       0                  0  0  1   280   # Load9.b.re
 -1       1                  0  0  1   280   # Load9.b.im
  0  6.9999999999999996E-01  0  0  6   256   # Load9.PQBRAK
  0       1                  0  0  6   258   # Load9.characteristic
  0       0                  0  0  6   388   # Load9.p.ir
  0       0                  0  0  6   388   # Load9.p.ii
  0       0                  0  0  6   256   # Load9.angle
  0       0                  0  0  6   256   # Load9.v
  0       0                  0  0  6   256   # Load9.P
  0       0                  0  0  6   256   # Load9.Q
  0       0                  0  0  6  1280   # Load9.anglev_rad
  0       0                  0  0  6  1280   # Load9.p0
  0       0                  0  0  6  1280   # Load9.q0
  0       0                  0  0  6  1280   # Load9.vr0
  0       0                  0  0  6  1280   # Load9.vi0
  0       0                  0  0  6  1280   # Load9.ir0
  0       0                  0  0  6  1280   # Load9.ii0
  0       0                  0  0  6  1280   # Load9.S_P.re
  0       0                  0  0  6  1280   # Load9.S_P.im
  0       0                  0  0  6  1280   # Load9.S_I.re
  0       0                  0  0  6  1280   # Load9.S_I.im
  0       0                  0  0  6  1280   # Load9.S_Y.re
  0       0                  0  0  6  1280   # Load9.S_Y.im
 -1  1.5020000000000000E+00  0  0  1  1304   # Load9.a2
 -1  1.7689999999999999E+00  0  0  1  1304   # Load9.b2
 -1  4.8809999999999998E-01  0  0  1  1304   # Load9.a0
 -1 -4.9990000000000001E-01  0  0  1  1304   # Load9.a1
 -1  1.3890000000000000E-01  0  0  1  1304   # Load9.b1
 -1  3.9640000000000000E+00  0  0  1  1304   # Load9.wp
  0       1                  0  0  6  1280   # Load9.kP
  0       1                  0  0  6  1280   # Load9.kI
 -1       0                  0  0  1   280   # Line5_1.R
 -1  1.6670000000000001E-02  0  0  1   280   # Line5_1.X
 -1       0                  0  0  1   280   # Line5_1.G
 -1       0                  0  0  1   280   # Line5_1.B
  0       0                  0  0  6   256   # Line5_1.S_b
  0  9.9999999999999995E+59  0  0  6   256   # Line5_1.t1
  0  9.9999999999999995E+59  0  0  6   256   # Line5_1.t2
  0       1                  0  0  6   258   # Line5_1.opening
 -1       0                  0  0  1   281   # Line5_1.displayPF
  0       0                  0  0  6   256   # Line5_1.P12
  0       0                  0  0  6   256   # Line5_1.P21
  0       0                  0  0  6   256   # Line5_1.Q12
  0       0                  0  0  6   256   # Line5_1.Q21
  0       0                  0  0  6  1280   # Line5_1.Y.re
  0       0                  0  0  6  1280   # Line5_1.Y.im
  0       0                  0  0  6  1280   # Line5_1.Z.re
  0       0                  0  0  6  1280   # Line5_1.Z.im
  0       0                  0  0  6   388   # Line5_2.p.ir
  0       0                  0  0  6   388   # Line5_2.p.ii
  0       0                  0  0  6   388   # Line5_2.n.ir
  0       0                  0  0  6   388   # Line5_2.n.ii
 -1       0                  0  0  1   280   # Line5_2.R
 -1  1.6670000000000001E-02  0  0  1   280   # Line5_2.X
 -1       0                  0  0  1   280   # Line5_2.G
 -1       0                  0  0  1   280   # Line5_2.B
  0       0                  0  0  6   256   # Line5_2.S_b
  0  9.9999999999999995E+59  0  0  6   256   # Line5_2.t1
  0  9.9999999999999995E+59  0  0  6   256   # Line5_2.t2
  0       1                  0  0  6   258   # Line5_2.opening
 -1       0                  0  0  1   281   # Line5_2.displayPF
  0       0                  0  0  6   256   # Line5_2.P12
  0       0                  0  0  6   256   # Line5_2.P21
  0       0                  0  0  6   256   # Line5_2.Q12
  0       0                  0  0  6   256   # Line5_2.Q21
  0       0                  0  0  6  1280   # Line5_2.Y.re
  0       0                  0  0  6  1280   # Line5_2.Y.im
  0       0                  0  0  6  1280   # Line5_2.Z.re
  0       0                  0  0  6  1280   # Line5_2.Z.im
  0       0                  0  0  6   388   # Line5_3.n.ir
  0       0                  0  0  6   388   # Line5_3.n.ii
 -1       0                  0  0  1   280   # Line5_3.R
 -1  1.6670000000000001E-02  0  0  1   280   # Line5_3.X
 -1       0                  0  0  1   280   # Line5_3.G
 -1       0                  0  0  1   280   # Line5_3.B
  0       0                  0  0  6   256   # Line5_3.S_b
  0  9.9999999999999995E+59  0  0  6   256   # Line5_3.t1
  0  9.9999999999999995E+59  0  0  6   256   # Line5_3.t2
  0       1                  0  0  6   258   # Line5_3.opening
 -1       0                  0  0  1   281   # Line5_3.displayPF
  0       0                  0  0  6   256   # Line5_3.P12
  0       0                  0  0  6   256   # Line5_3.P21
  0       0                  0  0  6   256   # Line5_3.Q12
  0       0                  0  0  6   256   # Line5_3.Q21
  0       0                  0  0  6  1280   # Line5_3.Y.re
  0       0                  0  0  6  1280   # Line5_3.Y.im
  0       0                  0  0  6  1280   # Line5_3.Z.re
  0       0                  0  0  6  1280   # Line5_3.Z.im
  0       0                  0  0  6   420   # Line5_4.p.ir
  0       0                  0  0  6   420   # Line5_4.p.ii
 -1       0                  0  0  1   280   # Line5_4.R
 -1  1.6670000000000001E-02  0  0  1   280   # Line5_4.X
 -1       0                  0  0  1   280   # Line5_4.G
 -1       0                  0  0  1   280   # Line5_4.B
  0       0                  0  0  6   256   # Line5_4.S_b
  0  9.9999999999999995E+59  0  0  6   256   # Line5_4.t1
  0  9.9999999999999995E+59  0  0  6   256   # Line5_4.t2
  0       1                  0  0  6   258   # Line5_4.opening
 -1       0                  0  0  1   281   # Line5_4.displayPF
  0       0                  0  0  6   256   # Line5_4.P12
  0       0                  0  0  6   256   # Line5_4.P21
  0       0                  0  0  6   256   # Line5_4.Q12
  0       0                  0  0  6   256   # Line5_4.Q21
  0       0                  0  0  6  1280   # Line5_4.Y.re
  0       0                  0  0  6  1280   # Line5_4.Y.im
  0       0                  0  0  6  1280   # Line5_4.Z.re
  0       0                  0  0  6  1280   # Line5_4.Z.im
 -1     400                  0  0  1   280   # bus1.V_b
 -1       1                  0  0  1   280   # bus1.V_0
 -1       0                  0  0  1   280   # bus1.angle_0
 -1       1                  0  0  1   280   # bus1.P_0
 -1       0                  0  0  1   280   # bus1.Q_0
  0       0                  0  0  6   256   # bus1.S_b
  0       0                  0  0  6   256   # bus1.fn
  0       0                  0  0  6   388   # bus1.p.ir
  0       0                  0  0  6   388   # bus1.p.ii
  0       0                  0  0  6   256   # bus1.V
  0       0                  0  0  6   256   # bus1.angle
 -1       1                  0  0  1   281   # bus1.displayPF
 -1     400                  0  0  1   280   # bus2.V_b
 -1       1                  0  0  1   280   # bus2.V_0
 -1       0                  0  0  1   280   # bus2.angle_0
 -1       1                  0  0  1   280   # bus2.P_0
 -1       0                  0  0  1   280   # bus2.Q_0
  0       0                  0  0  6   256   # bus2.S_b
  0       0                  0  0  6   256   # bus2.fn
  0       0                  0  0  6   388   # bus2.p.ir
  0       0                  0  0  6   388   # bus2.p.ii
  0       0                  0  0  6   256   # bus2.V
  0       0                  0  0  6   256   # bus2.angle
 -1       1                  0  0  1   281   # bus2.displayPF
 -1     400                  0  0  1   280   # bus3.V_b
 -1       1                  0  0  1   280   # bus3.V_0
 -1       0                  0  0  1   280   # bus3.angle_0
 -1       1                  0  0  1   280   # bus3.P_0
 -1       0                  0  0  1   280   # bus3.Q_0
  0       0                  0  0  6   256   # bus3.S_b
  0       0                  0  0  6   256   # bus3.fn
  0       0                  0  0  6   388   # bus3.p.ir
  0       0                  0  0  6   388   # bus3.p.ii
  0       0                  0  0  6   256   # bus3.V
  0       0                  0  0  6   256   # bus3.angle
 -1       1                  0  0  1   281   # bus3.displayPF
 -1     400                  0  0  1   280   # bus4.V_b
 -1       1                  0  0  1   280   # bus4.V_0
 -1       0                  0  0  1   280   # bus4.angle_0
 -1       1                  0  0  1   280   # bus4.P_0
 -1       0                  0  0  1   280   # bus4.Q_0
  0       0                  0  0  6   256   # bus4.S_b
  0       0                  0  0  6   256   # bus4.fn
  0       0                  0  0  6   388   # bus4.p.ir
  0       0                  0  0  6   388   # bus4.p.ii
  0       0                  0  0  6   256   # bus4.V
  0       0                  0  0  6   256   # bus4.angle
 -1       1                  0  0  1   281   # bus4.displayPF
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_P.h
  0       0                  0  0  6   256   # multisine_Noise_Simu.generateMultiSine_P.ll
  0       0                  0  0  6   258   # multisine_Noise_Simu.generateMultiSine_P.M
  0       0                  0  0  6   258   # multisine_Noise_Simu.generateMultiSine_P.L
  0       0                  0  0  6   256   # multisine_Noise_Simu.generateMultiSine_P.y
  0       0                  0  0  6   320   # multisine_Noise_Simu.normalNoise_P.y
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.normalNoise_P.samplePeriod
 -1       1                  0  0  1   281   # multisine_Noise_Simu.normalNoise_P.enableNoise
 -1       0                  0  0  1   280   # multisine_Noise_Simu.normalNoise_P.y_off
 -1       1                  0  0  1   281   # multisine_Noise_Simu.normalNoise_P.useGlobalSeed
 -1       1                  0  0  1   281   # multisine_Noise_Simu.normalNoise_P.useAutomaticLocalSeed
 -1      11                  0  0  1   282   # multisine_Noise_Simu.normalNoise_P.fixedLocalSeed
 -1       0                  0  0  1   280   # multisine_Noise_Simu.normalNoise_P.startTime
  0       0                  0  0  6   258   # multisine_Noise_Simu.normalNoise_P.localSeed
  0       0                  0  0  6  1282   # multisine_Noise_Simu.normalNoise_P.actualGlobalSeed
  0       0                  0  0  6  1281   # multisine_Noise_Simu.normalNoise_P.generateNoise
  0       0                  0  0  6  1346   # multisine_Noise_Simu.normalNoise_P.state[1]
  0       0                  0  0  6  1346   # multisine_Noise_Simu.normalNoise_P.state[2]
  0       0                  0  0  6  1346   # multisine_Noise_Simu.normalNoise_P.state[3]
  0       0                  0  0  6  1346   # multisine_Noise_Simu.normalNoise_P.state[4]
  0       0                  0  0  6  1344   # multisine_Noise_Simu.normalNoise_P.r
  0       0                  0  0  6  1344   # multisine_Noise_Simu.normalNoise_P.r_raw
 -1       0                  0  0  1   280   # multisine_Noise_Simu.normalNoise_P.mu
 -1       0                  0  0  1   280   # multisine_Noise_Simu.normalNoise_P.sigma
  0       2                  0  0  6   258   # multisine_Noise_Simu.sum_P.nin
  0       0                  0  0  6   256   # multisine_Noise_Simu.sum_P.u[1]
  0       0                  0  0  6   320   # multisine_Noise_Simu.sum_P.y
 -1       1                  0  0  1   280   # multisine_Noise_Simu.sum_P.k[1]
 -1       1                  0  0  1   280   # multisine_Noise_Simu.sum_P.k[2]
 -1       0                  0  0  1   280   # multisine_Noise_Simu.vSC_inj.t_Pstart
 -1       0                  0  0  1   280   # multisine_Noise_Simu.vSC_inj.t_Qstart
 -1       0                  0  0  1   280   # multisine_Noise_Simu.vSC_inj.Qinj
 -1  1.0000000000000001E-01  0  0  1   280   # multisine_Noise_Simu.vSC_inj.f1
 -1  1.5000000000000000E+00  0  0  1   280   # multisine_Noise_Simu.vSC_inj.f2
 -1  1.0000000000000001E-01  0  0  1   280   # multisine_Noise_Simu.vSC_inj.G
  0       0                  0  0  6   260   # multisine_Noise_Simu.vSC_inj.signalCurrent_phasor1.p.vr
  0       0                  0  0  6   260   # multisine_Noise_Simu.vSC_inj.signalCurrent_phasor1.p.vi
  0       0                  0  0  6   256   # multisine_Noise_Simu.vSC_inj.signalCurrent_phasor1.zero.re
  0       0                  0  0  6   256   # multisine_Noise_Simu.vSC_inj.signalCurrent_phasor1.zero.im
  0       0                  0  0  6   256   # multisine_Noise_Simu.vSC_inj.signalCurrent_phasor1.vs.re
  0       0                  0  0  6   256   # multisine_Noise_Simu.vSC_inj.signalCurrent_phasor1.vs.im
  0       0                  0  0  6   256   # multisine_Noise_Simu.vSC_inj.signalCurrent_phasor1.V
  0       0                  0  0  6   260   # multisine_Noise_Simu.vSC_inj.ground_phasor1.p.vr
  0       0                  0  0  6   260   # multisine_Noise_Simu.vSC_inj.ground_phasor1.p.vi
  0       0                  0  0  6   256   # multisine_Noise_Simu.vSC_inj.ground_phasor1.vs.re
  0       0                  0  0  6   256   # multisine_Noise_Simu.vSC_inj.ground_phasor1.vs.im
  0       0                  0  0  6   320   # multisine_Noise_Simu.normalNoise_Q.y
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.normalNoise_Q.samplePeriod
 -1       1                  0  0  1   281   # multisine_Noise_Simu.normalNoise_Q.enableNoise
 -1       0                  0  0  1   280   # multisine_Noise_Simu.normalNoise_Q.y_off
 -1       1                  0  0  1   281   # multisine_Noise_Simu.normalNoise_Q.useGlobalSeed
 -1       1                  0  0  1   281   # multisine_Noise_Simu.normalNoise_Q.useAutomaticLocalSeed
 -1      22                  0  0  1   282   # multisine_Noise_Simu.normalNoise_Q.fixedLocalSeed
 -1       0                  0  0  1   280   # multisine_Noise_Simu.normalNoise_Q.startTime
  0       0                  0  0  6   258   # multisine_Noise_Simu.normalNoise_Q.localSeed
  0       0                  0  0  6  1282   # multisine_Noise_Simu.normalNoise_Q.actualGlobalSeed
  0       0                  0  0  6  1281   # multisine_Noise_Simu.normalNoise_Q.generateNoise
  0       0                  0  0  6  1346   # multisine_Noise_Simu.normalNoise_Q.state[1]
  0       0                  0  0  6  1346   # multisine_Noise_Simu.normalNoise_Q.state[2]
  0       0                  0  0  6  1346   # multisine_Noise_Simu.normalNoise_Q.state[3]
  0       0                  0  0  6  1346   # multisine_Noise_Simu.normalNoise_Q.state[4]
  0       0                  0  0  6  1344   # multisine_Noise_Simu.normalNoise_Q.r
  0       0                  0  0  6  1344   # multisine_Noise_Simu.normalNoise_Q.r_raw
 -1       0                  0  0  1   280   # multisine_Noise_Simu.normalNoise_Q.mu
 -1       0                  0  0  1   280   # multisine_Noise_Simu.normalNoise_Q.sigma
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.h
  0      60                  0  0  6   256   # multisine_Noise_Simu.generateMultiSine_Q.ll
  0      30                  0  0  6   258   # multisine_Noise_Simu.generateMultiSine_Q.M
  0       5                  0  0  6   258   # multisine_Noise_Simu.generateMultiSine_Q.L
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[1, 1]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[1, 2]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[1, 3]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[1, 4]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[1, 5]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[1, 6]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[1, 7]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[1, 8]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[1, 9]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[1, 10]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[1, 11]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[1, 12]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[1, 13]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[1, 14]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[1, 15]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[1, 16]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[1, 17]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[1, 18]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[1, 19]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[1, 20]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[1, 21]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[1, 22]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[1, 23]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[1, 24]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[1, 25]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[1, 26]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[1, 27]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[1, 28]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[1, 29]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[1, 30]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[2, 1]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[2, 2]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[2, 3]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[2, 4]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[2, 5]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[2, 6]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[2, 7]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[2, 8]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[2, 9]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[2, 10]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[2, 11]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[2, 12]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[2, 13]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[2, 14]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[2, 15]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[2, 16]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[2, 17]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[2, 18]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[2, 19]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[2, 20]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[2, 21]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[2, 22]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[2, 23]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[2, 24]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[2, 25]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[2, 26]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[2, 27]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[2, 28]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[2, 29]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[2, 30]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[3, 1]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[3, 2]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[3, 3]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[3, 4]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[3, 5]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[3, 6]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[3, 7]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[3, 8]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[3, 9]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[3, 10]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[3, 11]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[3, 12]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[3, 13]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[3, 14]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[3, 15]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[3, 16]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[3, 17]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[3, 18]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[3, 19]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[3, 20]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[3, 21]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[3, 22]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[3, 23]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[3, 24]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[3, 25]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[3, 26]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[3, 27]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[3, 28]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[3, 29]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[3, 30]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[4, 1]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[4, 2]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[4, 3]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[4, 4]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[4, 5]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[4, 6]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[4, 7]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[4, 8]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[4, 9]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[4, 10]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[4, 11]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[4, 12]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[4, 13]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[4, 14]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[4, 15]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[4, 16]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[4, 17]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[4, 18]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[4, 19]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[4, 20]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[4, 21]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[4, 22]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[4, 23]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[4, 24]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[4, 25]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[4, 26]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[4, 27]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[4, 28]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[4, 29]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[4, 30]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[5, 1]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[5, 2]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[5, 3]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[5, 4]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[5, 5]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[5, 6]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[5, 7]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[5, 8]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[5, 9]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[5, 10]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[5, 11]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[5, 12]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[5, 13]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[5, 14]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[5, 15]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[5, 16]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[5, 17]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[5, 18]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[5, 19]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[5, 20]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[5, 21]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[5, 22]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[5, 23]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[5, 24]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[5, 25]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[5, 26]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[5, 27]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[5, 28]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[5, 29]
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.A[5, 30]
 -1  6.2831853071795862E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[1, 1]
 -1  6.2831853071795862E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[1, 2]
 -1  6.2831853071795862E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[1, 3]
 -1  6.2831853071795862E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[1, 4]
 -1  6.2831853071795862E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[1, 5]
 -1  1.2566370614359172E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[2, 1]
 -1  1.2566370614359172E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[2, 2]
 -1  1.2566370614359172E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[2, 3]
 -1  1.2566370614359172E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[2, 4]
 -1  1.2566370614359172E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[2, 5]
 -1  1.8849555921538759E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[3, 1]
 -1  1.8849555921538759E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[3, 2]
 -1  1.8849555921538759E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[3, 3]
 -1  1.8849555921538759E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[3, 4]
 -1  1.8849555921538759E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[3, 5]
 -1  2.5132741228718345E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[4, 1]
 -1  2.5132741228718345E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[4, 2]
 -1  2.5132741228718345E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[4, 3]
 -1  2.5132741228718345E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[4, 4]
 -1  2.5132741228718345E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[4, 5]
 -1  3.1415926535897931E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[5, 1]
 -1  3.1415926535897931E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[5, 2]
 -1  3.1415926535897931E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[5, 3]
 -1  3.1415926535897931E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[5, 4]
 -1  3.1415926535897931E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[5, 5]
 -1  3.7699111843077517E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[6, 1]
 -1  3.7699111843077517E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[6, 2]
 -1  3.7699111843077517E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[6, 3]
 -1  3.7699111843077517E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[6, 4]
 -1  3.7699111843077517E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[6, 5]
 -1  4.3982297150257104E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[7, 1]
 -1  4.3982297150257104E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[7, 2]
 -1  4.3982297150257104E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[7, 3]
 -1  4.3982297150257104E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[7, 4]
 -1  4.3982297150257104E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[7, 5]
 -1  5.0265482457436690E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[8, 1]
 -1  5.0265482457436690E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[8, 2]
 -1  5.0265482457436690E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[8, 3]
 -1  5.0265482457436690E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[8, 4]
 -1  5.0265482457436690E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[8, 5]
 -1  5.6548667764616276E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[9, 1]
 -1  5.6548667764616276E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[9, 2]
 -1  5.6548667764616276E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[9, 3]
 -1  5.6548667764616276E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[9, 4]
 -1  5.6548667764616276E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[9, 5]
 -1  6.2831853071795862E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[10, 1]
 -1  6.2831853071795862E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[10, 2]
 -1  6.2831853071795862E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[10, 3]
 -1  6.2831853071795862E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[10, 4]
 -1  6.2831853071795862E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[10, 5]
 -1  6.9115038378975449E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[11, 1]
 -1  6.9115038378975449E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[11, 2]
 -1  6.9115038378975449E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[11, 3]
 -1  6.9115038378975449E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[11, 4]
 -1  6.9115038378975449E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[11, 5]
 -1  7.5398223686155035E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[12, 1]
 -1  7.5398223686155035E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[12, 2]
 -1  7.5398223686155035E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[12, 3]
 -1  7.5398223686155035E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[12, 4]
 -1  7.5398223686155035E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[12, 5]
 -1  8.1681408993334621E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[13, 1]
 -1  8.1681408993334621E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[13, 2]
 -1  8.1681408993334621E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[13, 3]
 -1  8.1681408993334621E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[13, 4]
 -1  8.1681408993334621E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[13, 5]
 -1  8.7964594300514207E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[14, 1]
 -1  8.7964594300514207E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[14, 2]
 -1  8.7964594300514207E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[14, 3]
 -1  8.7964594300514207E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[14, 4]
 -1  8.7964594300514207E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[14, 5]
 -1  9.4247779607693793E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[15, 1]
 -1  9.4247779607693793E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[15, 2]
 -1  9.4247779607693793E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[15, 3]
 -1  9.4247779607693793E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[15, 4]
 -1  9.4247779607693793E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[15, 5]
 -1  1.0053096491487338E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[16, 1]
 -1  1.0053096491487338E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[16, 2]
 -1  1.0053096491487338E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[16, 3]
 -1  1.0053096491487338E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[16, 4]
 -1  1.0053096491487338E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[16, 5]
 -1  1.0681415022205297E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[17, 1]
 -1  1.0681415022205297E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[17, 2]
 -1  1.0681415022205297E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[17, 3]
 -1  1.0681415022205297E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[17, 4]
 -1  1.0681415022205297E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[17, 5]
 -1  1.1309733552923255E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[18, 1]
 -1  1.1309733552923255E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[18, 2]
 -1  1.1309733552923255E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[18, 3]
 -1  1.1309733552923255E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[18, 4]
 -1  1.1309733552923255E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[18, 5]
 -1  1.1938052083641214E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[19, 1]
 -1  1.1938052083641214E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[19, 2]
 -1  1.1938052083641214E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[19, 3]
 -1  1.1938052083641214E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[19, 4]
 -1  1.1938052083641214E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[19, 5]
 -1  1.2566370614359172E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[20, 1]
 -1  1.2566370614359172E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[20, 2]
 -1  1.2566370614359172E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[20, 3]
 -1  1.2566370614359172E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[20, 4]
 -1  1.2566370614359172E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[20, 5]
 -1  1.3194689145077131E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[21, 1]
 -1  1.3194689145077131E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[21, 2]
 -1  1.3194689145077131E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[21, 3]
 -1  1.3194689145077131E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[21, 4]
 -1  1.3194689145077131E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[21, 5]
 -1  1.3823007675795090E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[22, 1]
 -1  1.3823007675795090E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[22, 2]
 -1  1.3823007675795090E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[22, 3]
 -1  1.3823007675795090E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[22, 4]
 -1  1.3823007675795090E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[22, 5]
 -1  1.4451326206513048E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[23, 1]
 -1  1.4451326206513048E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[23, 2]
 -1  1.4451326206513048E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[23, 3]
 -1  1.4451326206513048E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[23, 4]
 -1  1.4451326206513048E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[23, 5]
 -1  1.5079644737231007E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[24, 1]
 -1  1.5079644737231007E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[24, 2]
 -1  1.5079644737231007E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[24, 3]
 -1  1.5079644737231007E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[24, 4]
 -1  1.5079644737231007E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[24, 5]
 -1  1.5707963267948964E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[25, 1]
 -1  1.5707963267948964E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[25, 2]
 -1  1.5707963267948964E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[25, 3]
 -1  1.5707963267948964E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[25, 4]
 -1  1.5707963267948964E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[25, 5]
 -1  1.6336281798666924E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[26, 1]
 -1  1.6336281798666924E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[26, 2]
 -1  1.6336281798666924E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[26, 3]
 -1  1.6336281798666924E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[26, 4]
 -1  1.6336281798666924E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[26, 5]
 -1  1.6964600329384883E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[27, 1]
 -1  1.6964600329384883E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[27, 2]
 -1  1.6964600329384883E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[27, 3]
 -1  1.6964600329384883E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[27, 4]
 -1  1.6964600329384883E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[27, 5]
 -1  1.7592918860102841E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[28, 1]
 -1  1.7592918860102841E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[28, 2]
 -1  1.7592918860102841E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[28, 3]
 -1  1.7592918860102841E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[28, 4]
 -1  1.7592918860102841E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[28, 5]
 -1  1.8221237390820800E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[29, 1]
 -1  1.8221237390820800E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[29, 2]
 -1  1.8221237390820800E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[29, 3]
 -1  1.8221237390820800E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[29, 4]
 -1  1.8221237390820800E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[29, 5]
 -1  1.8849555921538759E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[30, 1]
 -1  1.8849555921538759E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[30, 2]
 -1  1.8849555921538759E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[30, 3]
 -1  1.8849555921538759E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[30, 4]
 -1  1.8849555921538759E+01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.B[30, 5]
 -1  2.3459323920912167E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[1, 1]
 -1  2.3459323920912167E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[1, 2]
 -1  2.3459323920912167E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[1, 3]
 -1  2.3459323920912167E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[1, 4]
 -1  2.3459323920912167E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[1, 5]
 -1  8.9274499889561321E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[2, 1]
 -1  8.9274499889561321E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[2, 2]
 -1  8.9274499889561321E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[2, 3]
 -1  8.9274499889561321E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[2, 4]
 -1  8.9274499889561321E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[2, 5]
 -1  2.2102683969189956E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[3, 1]
 -1  2.2102683969189956E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[3, 2]
 -1  2.2102683969189956E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[3, 3]
 -1  2.2102683969189956E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[3, 4]
 -1  2.2102683969189956E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[3, 5]
 -1  7.4403337663897084E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[4, 1]
 -1  7.4403337663897084E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[4, 2]
 -1  7.4403337663897084E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[4, 3]
 -1  7.4403337663897084E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[4, 4]
 -1  7.4403337663897084E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[4, 5]
 -1  6.7618894788850481E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[5, 1]
 -1  6.7618894788850481E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[5, 2]
 -1  6.7618894788850481E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[5, 3]
 -1  6.7618894788850481E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[5, 4]
 -1  6.7618894788850481E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[5, 5]
 -1 -4.9586165025474016E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[6, 1]
 -1 -4.9586165025474016E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[6, 2]
 -1 -4.9586165025474016E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[6, 3]
 -1 -4.9586165025474016E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[6, 4]
 -1 -4.9586165025474016E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[6, 5]
 -1  1.0007437530252350E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[7, 1]
 -1  1.0007437530252350E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[7, 2]
 -1  1.0007437530252350E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[7, 3]
 -1  1.0007437530252350E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[7, 4]
 -1  1.0007437530252350E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[7, 5]
 -1 -1.8873504706975501E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[8, 1]
 -1 -1.8873504706975501E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[8, 2]
 -1 -1.8873504706975501E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[8, 3]
 -1 -1.8873504706975501E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[8, 4]
 -1 -1.8873504706975501E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[8, 5]
 -1 -1.2499464268666234E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[9, 1]
 -1 -1.2499464268666234E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[9, 2]
 -1 -1.2499464268666234E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[9, 3]
 -1 -1.2499464268666234E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[9, 4]
 -1 -1.2499464268666234E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[9, 5]
 -1 -2.3266821208074434E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[10, 1]
 -1 -2.3266821208074434E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[10, 2]
 -1 -2.3266821208074434E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[10, 3]
 -1 -2.3266821208074434E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[10, 4]
 -1 -2.3266821208074434E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[10, 5]
 -1  1.5990458964810944E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[11, 1]
 -1  1.5990458964810944E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[11, 2]
 -1  1.5990458964810944E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[11, 3]
 -1  1.5990458964810944E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[11, 4]
 -1  1.5990458964810944E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[11, 5]
 -1 -1.0078153642431664E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[12, 1]
 -1 -1.0078153642431664E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[12, 2]
 -1 -1.0078153642431664E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[12, 3]
 -1 -1.0078153642431664E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[12, 4]
 -1 -1.0078153642431664E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[12, 5]
 -1  9.4404611333436517E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[13, 1]
 -1  9.4404611333436517E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[13, 2]
 -1  9.4404611333436517E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[13, 3]
 -1  9.4404611333436517E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[13, 4]
 -1  9.4404611333436517E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[13, 5]
 -1  1.6672117052772477E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[14, 1]
 -1  1.6672117052772477E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[14, 2]
 -1  1.6672117052772477E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[14, 3]
 -1  1.6672117052772477E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[14, 4]
 -1  1.6672117052772477E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[14, 5]
 -1 -9.1048013688421525E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[15, 1]
 -1 -9.1048013688421525E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[15, 2]
 -1 -9.1048013688421525E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[15, 3]
 -1 -9.1048013688421525E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[15, 4]
 -1 -9.1048013688421525E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[15, 5]
 -1  4.2610907612253707E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[16, 1]
 -1  4.2610907612253707E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[16, 2]
 -1  4.2610907612253707E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[16, 3]
 -1  4.2610907612253707E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[16, 4]
 -1  4.2610907612253707E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[16, 5]
 -1 -1.7078978518329233E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[17, 1]
 -1 -1.7078978518329233E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[17, 2]
 -1 -1.7078978518329233E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[17, 3]
 -1 -1.7078978518329233E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[17, 4]
 -1 -1.7078978518329233E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[17, 5]
 -1 -2.5700888949312473E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[18, 1]
 -1 -2.5700888949312473E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[18, 2]
 -1 -2.5700888949312473E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[18, 3]
 -1 -2.5700888949312473E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[18, 4]
 -1 -2.5700888949312473E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[18, 5]
 -1 -1.6403743082315636E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[19, 1]
 -1 -1.6403743082315636E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[19, 2]
 -1 -1.6403743082315636E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[19, 3]
 -1 -1.6403743082315636E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[19, 4]
 -1 -1.6403743082315636E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[19, 5]
 -1  1.9991378884089057E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[20, 1]
 -1  1.9991378884089057E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[20, 2]
 -1  1.9991378884089057E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[20, 3]
 -1  1.9991378884089057E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[20, 4]
 -1  1.9991378884089057E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[20, 5]
 -1 -5.2154028515974796E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[21, 1]
 -1 -5.2154028515974796E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[21, 2]
 -1 -5.2154028515974796E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[21, 3]
 -1 -5.2154028515974796E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[21, 4]
 -1 -5.2154028515974796E-02  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[21, 5]
 -1  4.9311330470115150E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[22, 1]
 -1  4.9311330470115150E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[22, 2]
 -1  4.9311330470115150E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[22, 3]
 -1  4.9311330470115150E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[22, 4]
 -1  4.9311330470115150E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[22, 5]
 -1  1.5809495822509596E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[23, 1]
 -1  1.5809495822509596E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[23, 2]
 -1  1.5809495822509596E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[23, 3]
 -1  1.5809495822509596E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[23, 4]
 -1  1.5809495822509596E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[23, 5]
 -1  1.0606929521261670E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[24, 1]
 -1  1.0606929521261670E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[24, 2]
 -1  1.0606929521261670E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[24, 3]
 -1  1.0606929521261670E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[24, 4]
 -1  1.0606929521261670E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[24, 5]
 -1 -9.3769708266893415E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[25, 1]
 -1 -9.3769708266893415E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[25, 2]
 -1 -9.3769708266893415E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[25, 3]
 -1 -9.3769708266893415E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[25, 4]
 -1 -9.3769708266893415E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[25, 5]
 -1 -5.4975785343114070E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[26, 1]
 -1 -5.4975785343114070E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[26, 2]
 -1 -5.4975785343114070E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[26, 3]
 -1 -5.4975785343114070E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[26, 4]
 -1 -5.4975785343114070E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[26, 5]
 -1  1.9213701199876720E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[27, 1]
 -1  1.9213701199876720E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[27, 2]
 -1  1.9213701199876720E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[27, 3]
 -1  1.9213701199876720E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[27, 4]
 -1  1.9213701199876720E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[27, 5]
 -1 -1.5713130437082481E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[28, 1]
 -1 -1.5713130437082481E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[28, 2]
 -1 -1.5713130437082481E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[28, 3]
 -1 -1.5713130437082481E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[28, 4]
 -1 -1.5713130437082481E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[28, 5]
 -1  1.0664543844685073E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[29, 1]
 -1  1.0664543844685073E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[29, 2]
 -1  1.0664543844685073E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[29, 3]
 -1  1.0664543844685073E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[29, 4]
 -1  1.0664543844685073E+00  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[29, 5]
 -1 -4.8215596380145070E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[30, 1]
 -1 -4.8215596380145070E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[30, 2]
 -1 -4.8215596380145070E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[30, 3]
 -1 -4.8215596380145070E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[30, 4]
 -1 -4.8215596380145070E-01  0  0  1   280   # multisine_Noise_Simu.generateMultiSine_Q.C[30, 5]
  0       0                  0  0  6   256   # multisine_Noise_Simu.generateMultiSine_Q.Vecy[1, 1]
  0       0                  0  0  6   256   # multisine_Noise_Simu.generateMultiSine_Q.Vecy[2, 1]
  0       0                  0  0  6   256   # multisine_Noise_Simu.generateMultiSine_Q.Vecy[3, 1]
  0       0                  0  0  6   256   # multisine_Noise_Simu.generateMultiSine_Q.Vecy[4, 1]
  0       0                  0  0  6   256   # multisine_Noise_Simu.generateMultiSine_Q.Vecy[5, 1]
  0       0                  0  0  6   256   # multisine_Noise_Simu.generateMultiSine_Q.Vecy[6, 1]
  0       0                  0  0  6   256   # multisine_Noise_Simu.generateMultiSine_Q.Vecy[7, 1]
  0       0                  0  0  6   256   # multisine_Noise_Simu.generateMultiSine_Q.Vecy[8, 1]
  0       0                  0  0  6   256   # multisine_Noise_Simu.generateMultiSine_Q.Vecy[9, 1]
  0       0                  0  0  6   256   # multisine_Noise_Simu.generateMultiSine_Q.Vecy[10, 1]
  0       0                  0  0  6   256   # multisine_Noise_Simu.generateMultiSine_Q.Vecy[11, 1]
  0       0                  0  0  6   256   # multisine_Noise_Simu.generateMultiSine_Q.Vecy[12, 1]
  0       0                  0  0  6   256   # multisine_Noise_Simu.generateMultiSine_Q.Vecy[13, 1]
  0       0                  0  0  6   256   # multisine_Noise_Simu.generateMultiSine_Q.Vecy[14, 1]
  0       0                  0  0  6   256   # multisine_Noise_Simu.generateMultiSine_Q.Vecy[15, 1]
  0       0                  0  0  6   256   # multisine_Noise_Simu.generateMultiSine_Q.Vecy[16, 1]
  0       0                  0  0  6   256   # multisine_Noise_Simu.generateMultiSine_Q.Vecy[17, 1]
  0       0                  0  0  6   256   # multisine_Noise_Simu.generateMultiSine_Q.Vecy[18, 1]
  0       0                  0  0  6   256   # multisine_Noise_Simu.generateMultiSine_Q.Vecy[19, 1]
  0       0                  0  0  6   256   # multisine_Noise_Simu.generateMultiSine_Q.Vecy[20, 1]
  0       0                  0  0  6   256   # multisine_Noise_Simu.generateMultiSine_Q.Vecy[21, 1]
  0       0                  0  0  6   256   # multisine_Noise_Simu.generateMultiSine_Q.Vecy[22, 1]
  0       0                  0  0  6   256   # multisine_Noise_Simu.generateMultiSine_Q.Vecy[23, 1]
  0       0                  0  0  6   256   # multisine_Noise_Simu.generateMultiSine_Q.Vecy[24, 1]
  0       0                  0  0  6   256   # multisine_Noise_Simu.generateMultiSine_Q.Vecy[25, 1]
  0       0                  0  0  6   256   # multisine_Noise_Simu.generateMultiSine_Q.Vecy[26, 1]
  0       0                  0  0  6   256   # multisine_Noise_Simu.generateMultiSine_Q.Vecy[27, 1]
  0       0                  0  0  6   256   # multisine_Noise_Simu.generateMultiSine_Q.Vecy[28, 1]
  0       0                  0  0  6   256   # multisine_Noise_Simu.generateMultiSine_Q.Vecy[29, 1]
  0       0                  0  0  6   256   # multisine_Noise_Simu.generateMultiSine_Q.Vecy[30, 1]
  0       0                  0  0  6   256   # multisine_Noise_Simu.generateMultiSine_Q.y
  0       2                  0  0  6   258   # multisine_Noise_Simu.sum_Q.nin
 -1       1                  0  0  1   280   # multisine_Noise_Simu.sum_Q.k[1]
 -1       1                  0  0  1   280   # multisine_Noise_Simu.sum_Q.k[2]
  0       0                  0  0  6   388   # multisine_Noise_Simu.pwPin.ir
  0       0                  0  0  6   388   # multisine_Noise_Simu.pwPin.ii
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_P.h
  0       0                  0  0  6   256   # multisine_Noise_Simu_load.generateMultiSine_P.ll
  0       0                  0  0  6   258   # multisine_Noise_Simu_load.generateMultiSine_P.M
  0       0                  0  0  6   258   # multisine_Noise_Simu_load.generateMultiSine_P.L
  0       0                  0  0  6   256   # multisine_Noise_Simu_load.generateMultiSine_P.y
  0       0                  0  0  6   320   # multisine_Noise_Simu_load.normalNoise_P.y
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu_load.normalNoise_P.samplePeriod
 -1       1                  0  0  1   281   # multisine_Noise_Simu_load.normalNoise_P.enableNoise
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.normalNoise_P.y_off
 -1       1                  0  0  1   281   # multisine_Noise_Simu_load.normalNoise_P.useGlobalSeed
 -1       1                  0  0  1   281   # multisine_Noise_Simu_load.normalNoise_P.useAutomaticLocalSeed
 -1      11                  0  0  1   282   # multisine_Noise_Simu_load.normalNoise_P.fixedLocalSeed
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.normalNoise_P.startTime
  0       0                  0  0  6   258   # multisine_Noise_Simu_load.normalNoise_P.localSeed
  0       0                  0  0  6  1282   # multisine_Noise_Simu_load.normalNoise_P.actualGlobalSeed
  0       0                  0  0  6  1281   # multisine_Noise_Simu_load.normalNoise_P.generateNoise
  0       0                  0  0  6  1346   # multisine_Noise_Simu_load.normalNoise_P.state[1]
  0       0                  0  0  6  1346   # multisine_Noise_Simu_load.normalNoise_P.state[2]
  0       0                  0  0  6  1346   # multisine_Noise_Simu_load.normalNoise_P.state[3]
  0       0                  0  0  6  1346   # multisine_Noise_Simu_load.normalNoise_P.state[4]
  0       0                  0  0  6  1344   # multisine_Noise_Simu_load.normalNoise_P.r
  0       0                  0  0  6  1344   # multisine_Noise_Simu_load.normalNoise_P.r_raw
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.normalNoise_P.mu
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.normalNoise_P.sigma
  0       2                  0  0  6   258   # multisine_Noise_Simu_load.sum_P.nin
  0       0                  0  0  6   256   # multisine_Noise_Simu_load.sum_P.u[1]
  0       0                  0  0  6   320   # multisine_Noise_Simu_load.sum_P.y
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.sum_P.k[1]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.sum_P.k[2]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.vSC_inj.t_Pstart
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.vSC_inj.t_Qstart
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.vSC_inj.Qinj
 -1  1.0000000000000001E-01  0  0  1   280   # multisine_Noise_Simu_load.vSC_inj.f1
 -1  1.5000000000000000E+00  0  0  1   280   # multisine_Noise_Simu_load.vSC_inj.f2
 -1  1.0000000000000001E-01  0  0  1   280   # multisine_Noise_Simu_load.vSC_inj.G
  0       0                  0  0  6   260   # multisine_Noise_Simu_load.vSC_inj.signalCurrent_phasor1.p.vr
  0       0                  0  0  6   260   # multisine_Noise_Simu_load.vSC_inj.signalCurrent_phasor1.p.vi
  0       0                  0  0  6   256   # multisine_Noise_Simu_load.vSC_inj.signalCurrent_phasor1.zero.re
  0       0                  0  0  6   256   # multisine_Noise_Simu_load.vSC_inj.signalCurrent_phasor1.zero.im
  0       0                  0  0  6   256   # multisine_Noise_Simu_load.vSC_inj.signalCurrent_phasor1.vs.re
  0       0                  0  0  6   256   # multisine_Noise_Simu_load.vSC_inj.signalCurrent_phasor1.vs.im
  0       0                  0  0  6   256   # multisine_Noise_Simu_load.vSC_inj.signalCurrent_phasor1.V
  0       0                  0  0  6   260   # multisine_Noise_Simu_load.vSC_inj.ground_phasor1.p.vr
  0       0                  0  0  6   260   # multisine_Noise_Simu_load.vSC_inj.ground_phasor1.p.vi
  0       0                  0  0  6   256   # multisine_Noise_Simu_load.vSC_inj.ground_phasor1.vs.re
  0       0                  0  0  6   256   # multisine_Noise_Simu_load.vSC_inj.ground_phasor1.vs.im
  0       0                  0  0  6   320   # multisine_Noise_Simu_load.normalNoise_Q.y
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu_load.normalNoise_Q.samplePeriod
 -1       1                  0  0  1   281   # multisine_Noise_Simu_load.normalNoise_Q.enableNoise
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.normalNoise_Q.y_off
 -1       1                  0  0  1   281   # multisine_Noise_Simu_load.normalNoise_Q.useGlobalSeed
 -1       1                  0  0  1   281   # multisine_Noise_Simu_load.normalNoise_Q.useAutomaticLocalSeed
 -1      22                  0  0  1   282   # multisine_Noise_Simu_load.normalNoise_Q.fixedLocalSeed
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.normalNoise_Q.startTime
  0       0                  0  0  6   258   # multisine_Noise_Simu_load.normalNoise_Q.localSeed
  0       0                  0  0  6  1282   # multisine_Noise_Simu_load.normalNoise_Q.actualGlobalSeed
  0       0                  0  0  6  1281   # multisine_Noise_Simu_load.normalNoise_Q.generateNoise
  0       0                  0  0  6  1346   # multisine_Noise_Simu_load.normalNoise_Q.state[1]
  0       0                  0  0  6  1346   # multisine_Noise_Simu_load.normalNoise_Q.state[2]
  0       0                  0  0  6  1346   # multisine_Noise_Simu_load.normalNoise_Q.state[3]
  0       0                  0  0  6  1346   # multisine_Noise_Simu_load.normalNoise_Q.state[4]
  0       0                  0  0  6  1344   # multisine_Noise_Simu_load.normalNoise_Q.r
  0       0                  0  0  6  1344   # multisine_Noise_Simu_load.normalNoise_Q.r_raw
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.normalNoise_Q.mu
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.normalNoise_Q.sigma
 -1  1.0000000000000000E-02  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.h
  0      60                  0  0  6   256   # multisine_Noise_Simu_load.generateMultiSine_Q.ll
  0      30                  0  0  6   258   # multisine_Noise_Simu_load.generateMultiSine_Q.M
  0       5                  0  0  6   258   # multisine_Noise_Simu_load.generateMultiSine_Q.L
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[1, 1]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[1, 2]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[1, 3]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[1, 4]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[1, 5]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[1, 6]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[1, 7]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[1, 8]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[1, 9]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[1, 10]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[1, 11]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[1, 12]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[1, 13]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[1, 14]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[1, 15]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[1, 16]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[1, 17]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[1, 18]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[1, 19]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[1, 20]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[1, 21]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[1, 22]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[1, 23]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[1, 24]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[1, 25]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[1, 26]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[1, 27]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[1, 28]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[1, 29]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[1, 30]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[2, 1]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[2, 2]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[2, 3]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[2, 4]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[2, 5]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[2, 6]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[2, 7]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[2, 8]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[2, 9]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[2, 10]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[2, 11]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[2, 12]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[2, 13]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[2, 14]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[2, 15]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[2, 16]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[2, 17]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[2, 18]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[2, 19]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[2, 20]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[2, 21]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[2, 22]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[2, 23]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[2, 24]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[2, 25]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[2, 26]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[2, 27]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[2, 28]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[2, 29]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[2, 30]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[3, 1]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[3, 2]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[3, 3]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[3, 4]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[3, 5]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[3, 6]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[3, 7]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[3, 8]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[3, 9]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[3, 10]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[3, 11]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[3, 12]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[3, 13]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[3, 14]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[3, 15]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[3, 16]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[3, 17]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[3, 18]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[3, 19]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[3, 20]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[3, 21]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[3, 22]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[3, 23]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[3, 24]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[3, 25]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[3, 26]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[3, 27]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[3, 28]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[3, 29]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[3, 30]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[4, 1]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[4, 2]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[4, 3]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[4, 4]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[4, 5]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[4, 6]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[4, 7]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[4, 8]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[4, 9]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[4, 10]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[4, 11]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[4, 12]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[4, 13]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[4, 14]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[4, 15]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[4, 16]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[4, 17]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[4, 18]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[4, 19]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[4, 20]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[4, 21]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[4, 22]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[4, 23]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[4, 24]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[4, 25]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[4, 26]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[4, 27]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[4, 28]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[4, 29]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[4, 30]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[5, 1]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[5, 2]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[5, 3]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[5, 4]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[5, 5]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[5, 6]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[5, 7]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[5, 8]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[5, 9]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[5, 10]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[5, 11]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[5, 12]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[5, 13]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[5, 14]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[5, 15]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[5, 16]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[5, 17]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[5, 18]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[5, 19]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[5, 20]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[5, 21]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[5, 22]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[5, 23]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[5, 24]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[5, 25]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[5, 26]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[5, 27]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[5, 28]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[5, 29]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.A[5, 30]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[1, 1]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[1, 2]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[1, 3]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[1, 4]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[1, 5]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[2, 1]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[2, 2]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[2, 3]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[2, 4]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[2, 5]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[3, 1]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[3, 2]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[3, 3]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[3, 4]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[3, 5]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[4, 1]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[4, 2]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[4, 3]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[4, 4]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[4, 5]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[5, 1]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[5, 2]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[5, 3]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[5, 4]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[5, 5]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[6, 1]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[6, 2]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[6, 3]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[6, 4]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[6, 5]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[7, 1]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[7, 2]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[7, 3]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[7, 4]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[7, 5]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[8, 1]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[8, 2]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[8, 3]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[8, 4]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[8, 5]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[9, 1]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[9, 2]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[9, 3]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[9, 4]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[9, 5]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[10, 1]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[10, 2]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[10, 3]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[10, 4]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[10, 5]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[11, 1]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[11, 2]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[11, 3]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[11, 4]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[11, 5]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[12, 1]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[12, 2]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[12, 3]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[12, 4]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[12, 5]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[13, 1]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[13, 2]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[13, 3]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[13, 4]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[13, 5]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[14, 1]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[14, 2]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[14, 3]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[14, 4]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[14, 5]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[15, 1]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[15, 2]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[15, 3]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[15, 4]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[15, 5]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[16, 1]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[16, 2]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[16, 3]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[16, 4]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[16, 5]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[17, 1]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[17, 2]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[17, 3]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[17, 4]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[17, 5]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[18, 1]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[18, 2]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[18, 3]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[18, 4]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[18, 5]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[19, 1]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[19, 2]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[19, 3]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[19, 4]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[19, 5]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[20, 1]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[20, 2]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[20, 3]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[20, 4]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[20, 5]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[21, 1]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[21, 2]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[21, 3]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[21, 4]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[21, 5]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[22, 1]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[22, 2]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[22, 3]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[22, 4]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[22, 5]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[23, 1]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[23, 2]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[23, 3]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[23, 4]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[23, 5]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[24, 1]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[24, 2]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[24, 3]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[24, 4]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[24, 5]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[25, 1]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[25, 2]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[25, 3]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[25, 4]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[25, 5]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[26, 1]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[26, 2]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[26, 3]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[26, 4]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[26, 5]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[27, 1]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[27, 2]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[27, 3]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[27, 4]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[27, 5]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[28, 1]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[28, 2]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[28, 3]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[28, 4]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[28, 5]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[29, 1]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[29, 2]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[29, 3]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[29, 4]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[29, 5]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[30, 1]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[30, 2]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[30, 3]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[30, 4]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.B[30, 5]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[1, 1]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[1, 2]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[1, 3]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[1, 4]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[1, 5]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[2, 1]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[2, 2]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[2, 3]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[2, 4]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[2, 5]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[3, 1]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[3, 2]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[3, 3]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[3, 4]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[3, 5]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[4, 1]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[4, 2]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[4, 3]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[4, 4]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[4, 5]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[5, 1]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[5, 2]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[5, 3]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[5, 4]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[5, 5]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[6, 1]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[6, 2]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[6, 3]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[6, 4]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[6, 5]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[7, 1]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[7, 2]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[7, 3]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[7, 4]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[7, 5]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[8, 1]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[8, 2]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[8, 3]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[8, 4]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[8, 5]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[9, 1]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[9, 2]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[9, 3]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[9, 4]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[9, 5]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[10, 1]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[10, 2]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[10, 3]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[10, 4]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[10, 5]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[11, 1]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[11, 2]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[11, 3]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[11, 4]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[11, 5]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[12, 1]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[12, 2]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[12, 3]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[12, 4]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[12, 5]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[13, 1]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[13, 2]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[13, 3]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[13, 4]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[13, 5]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[14, 1]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[14, 2]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[14, 3]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[14, 4]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[14, 5]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[15, 1]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[15, 2]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[15, 3]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[15, 4]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[15, 5]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[16, 1]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[16, 2]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[16, 3]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[16, 4]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[16, 5]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[17, 1]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[17, 2]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[17, 3]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[17, 4]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[17, 5]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[18, 1]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[18, 2]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[18, 3]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[18, 4]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[18, 5]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[19, 1]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[19, 2]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[19, 3]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[19, 4]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[19, 5]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[20, 1]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[20, 2]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[20, 3]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[20, 4]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[20, 5]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[21, 1]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[21, 2]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[21, 3]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[21, 4]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[21, 5]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[22, 1]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[22, 2]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[22, 3]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[22, 4]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[22, 5]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[23, 1]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[23, 2]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[23, 3]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[23, 4]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[23, 5]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[24, 1]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[24, 2]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[24, 3]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[24, 4]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[24, 5]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[25, 1]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[25, 2]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[25, 3]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[25, 4]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[25, 5]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[26, 1]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[26, 2]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[26, 3]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[26, 4]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[26, 5]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[27, 1]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[27, 2]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[27, 3]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[27, 4]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[27, 5]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[28, 1]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[28, 2]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[28, 3]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[28, 4]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[28, 5]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[29, 1]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[29, 2]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[29, 3]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[29, 4]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[29, 5]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[30, 1]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[30, 2]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[30, 3]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[30, 4]
 -1       0                  0  0  1   280   # multisine_Noise_Simu_load.generateMultiSine_Q.C[30, 5]
  0       0                  0  0  6   256   # multisine_Noise_Simu_load.generateMultiSine_Q.Vecy[1, 1]
  0       0                  0  0  6   256   # multisine_Noise_Simu_load.generateMultiSine_Q.Vecy[2, 1]
  0       0                  0  0  6   256   # multisine_Noise_Simu_load.generateMultiSine_Q.Vecy[3, 1]
  0       0                  0  0  6   256   # multisine_Noise_Simu_load.generateMultiSine_Q.Vecy[4, 1]
  0       0                  0  0  6   256   # multisine_Noise_Simu_load.generateMultiSine_Q.Vecy[5, 1]
  0       0                  0  0  6   256   # multisine_Noise_Simu_load.generateMultiSine_Q.Vecy[6, 1]
  0       0                  0  0  6   256   # multisine_Noise_Simu_load.generateMultiSine_Q.Vecy[7, 1]
  0       0                  0  0  6   256   # multisine_Noise_Simu_load.generateMultiSine_Q.Vecy[8, 1]
  0       0                  0  0  6   256   # multisine_Noise_Simu_load.generateMultiSine_Q.Vecy[9, 1]
  0       0                  0  0  6   256   # multisine_Noise_Simu_load.generateMultiSine_Q.Vecy[10, 1]
  0       0                  0  0  6   256   # multisine_Noise_Simu_load.generateMultiSine_Q.Vecy[11, 1]
  0       0                  0  0  6   256   # multisine_Noise_Simu_load.generateMultiSine_Q.Vecy[12, 1]
  0       0                  0  0  6   256   # multisine_Noise_Simu_load.generateMultiSine_Q.Vecy[13, 1]
  0       0                  0  0  6   256   # multisine_Noise_Simu_load.generateMultiSine_Q.Vecy[14, 1]
  0       0                  0  0  6   256   # multisine_Noise_Simu_load.generateMultiSine_Q.Vecy[15, 1]
  0       0                  0  0  6   256   # multisine_Noise_Simu_load.generateMultiSine_Q.Vecy[16, 1]
  0       0                  0  0  6   256   # multisine_Noise_Simu_load.generateMultiSine_Q.Vecy[17, 1]
  0       0                  0  0  6   256   # multisine_Noise_Simu_load.generateMultiSine_Q.Vecy[18, 1]
  0       0                  0  0  6   256   # multisine_Noise_Simu_load.generateMultiSine_Q.Vecy[19, 1]
  0       0                  0  0  6   256   # multisine_Noise_Simu_load.generateMultiSine_Q.Vecy[20, 1]
  0       0                  0  0  6   256   # multisine_Noise_Simu_load.generateMultiSine_Q.Vecy[21, 1]
  0       0                  0  0  6   256   # multisine_Noise_Simu_load.generateMultiSine_Q.Vecy[22, 1]
  0       0                  0  0  6   256   # multisine_Noise_Simu_load.generateMultiSine_Q.Vecy[23, 1]
  0       0                  0  0  6   256   # multisine_Noise_Simu_load.generateMultiSine_Q.Vecy[24, 1]
  0       0                  0  0  6   256   # multisine_Noise_Simu_load.generateMultiSine_Q.Vecy[25, 1]
  0       0                  0  0  6   256   # multisine_Noise_Simu_load.generateMultiSine_Q.Vecy[26, 1]
  0       0                  0  0  6   256   # multisine_Noise_Simu_load.generateMultiSine_Q.Vecy[27, 1]
  0       0                  0  0  6   256   # multisine_Noise_Simu_load.generateMultiSine_Q.Vecy[28, 1]
  0       0                  0  0  6   256   # multisine_Noise_Simu_load.generateMultiSine_Q.Vecy[29, 1]
  0       0                  0  0  6   256   # multisine_Noise_Simu_load.generateMultiSine_Q.Vecy[30, 1]
  0       0                  0  0  6   256   # multisine_Noise_Simu_load.generateMultiSine_Q.y
  0       2                  0  0  6   258   # multisine_Noise_Simu_load.sum_Q.nin
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.sum_Q.k[1]
 -1       1                  0  0  1   280   # multisine_Noise_Simu_load.sum_Q.k[2]
  0       0                  0  0  6   388   # multisine_Noise_Simu_load.pwPin.ir
  0       0                  0  0  6   388   # multisine_Noise_Simu_load.pwPin.ii
 -1       1                  0  0  1   280   # add.k1
 -1      -1                  0  0  1   280   # add.k2
  0       0                  0  0  4   256   # y1_u
  0       0                  0  0  4   256   # y2
  0       0                  0  0  4   256   # n_load


# Matrix with 6 columns defining the initial value calculation
# (columns 5 and 6 are not utilized for the calculation but are
#  reported by dymosim via dymosim -i for user convenience):
#
# column 1: Type of initial value
#           = -2: special case: for continuing simulation (column 2 = value)
#           = -1: fixed value (column 2 = fixed value)
#           =  0: free value, i.e., no restriction (column 2 = initial value)
#           >  0: desired value (column 1 = weight for optimization
#                                column 2 = desired value)
#                 use weight=1, since automatic scaling usually
#                 leads to equally weighted terms
# column 2: fixed, free or desired value according to column 1.
# column 3: Minimum value (ignored, if Minimum >= Maximum).
# column 4: Maximum value (ignored, if Minimum >= Maximum).
#           Minimum and maximum restrict the search range in initial
#           value calculation. They might also be used for scaling.
# column 5: Category of variable.
#           = 1: parameter.
#           = 2: state.
#           = 3: state derivative.
#           = 4: output.
#           = 5: input.
#           = 6: auxiliary variable.
# column 6: Data type of variable and flags according to dsBaseType
#  <value>&3= 0: real.
#  <value>&3= 1: boolean.
#  <value>&3= 2: integer.
#
# Initial values are calculated according to the following procedure:
#
# - If parameters, states and inputs are FIXED, and other variables
#   are FREE, no special action takes place (default setting).
#
# - If there are only FIXED and FREE variables and the number of
#   FREE parameters, states and inputs is IDENTICAL to the number of
#   FIXED state derivatives, outputs and auxiliary variables, a non-linear
#   equation is solved to determine a consistent set of initial conditions.
#
# - In all other cases the following optimization problem is solved:
#      min( sum( weight(i)*( (value(i) - DESIRED(i))/scale(i) )^2 ) )
#   under the constraint that the differential equation is fulfilled
#   at the initial time. In most cases weight(i)=1 is sufficient, due
#   to the automatic scaling (if DESIRED(i) is not close to zero,
#   scale(i) = DESIRED(i). Otherwise, the scaling is based on the
#   nominal value (and maybe minimum and maximum values given in 
#   column 3 and 4). If these values are zero, scale(i)=1 is used).
#
char initialDescription(2073,112)
= true, if noise blocks generate noise as output; = false, if they generate a constant output [:#(type=Boolean)]
= true, choose a seed by system time and process id; = false, use fixedSeed [:#(type=Boolean)]
Fixed global seed for random number generators (if useAutomaticSeed = false) [:#(type=Integer)]
Actually used global seed [:#(type=Integer)]
ID for impure random number generators Modelica.Math.Random.Utilities.impureXXX [:#(type=Integer)]
System base [MVA]
System Frequency [Hz]



[1]
[deg]
[1]
[deg]
[1]
[deg]
[1]
[deg]




[1]
[deg]


[1]
[deg]




[MW]
[Mvar]
[MW]
[Mvar]
[MW]
[Mvar]
[MW]
[Mvar]
[MW]
[Mvar]
[MW]
[Mvar]
Base voltage of the bus [kV]
Voltage magnitude (pu) [1]
Voltage angle [deg]
Active power [MW]
Reactive power [Mvar]
System base power [MVA]
System Frequeny [Hz]
Real part of the voltage
Imaginary part of the voltage
Real part of the current
Imaginary part of the current
Bus voltage magnitude (pu) [1]
Bus voltage angle [deg]
Display voltage values: [:#(type=Boolean)]
Base voltage of the bus [kV]
Voltage magnitude (pu) [1]
Voltage angle [deg]
Active power [MW]
Reactive power [Mvar]
System base power [MVA]
System Frequeny [Hz]
Real part of the voltage
Imaginary part of the voltage
Real part of the current
Imaginary part of the current
Bus voltage magnitude (pu) [1]
Bus voltage angle [deg]
Display voltage values: [:#(type=Boolean)]
Base voltage of the bus [kV]
Voltage magnitude (pu) [1]
Voltage angle [deg]
Active power [MW]
Reactive power [Mvar]
System base power [MVA]
System Frequeny [Hz]
Real part of the voltage
Imaginary part of the voltage
Real part of the current
Imaginary part of the current
Bus voltage magnitude (pu) [1]
Bus voltage angle [deg]
Display voltage values: [:#(type=Boolean)]
Base voltage of the bus [kV]
Voltage magnitude (pu) [1]
Voltage angle [deg]
Active power [MW]
Reactive power [Mvar]
System base power [MVA]
System Frequeny [Hz]
Real part of the voltage
Imaginary part of the voltage
Real part of the current
Imaginary part of the current
Bus voltage magnitude (pu) [1]
Bus voltage angle [deg]
Display voltage values: [:#(type=Boolean)]
Base voltage of the bus [kV]
Voltage magnitude (pu) [1]
Voltage angle [deg]
Active power [MW]
Reactive power [Mvar]
System base power [MVA]
System Frequeny [Hz]
Real part of the voltage
Imaginary part of the voltage
Real part of the current
Imaginary part of the current
Bus voltage magnitude (pu) [1]
Bus voltage angle [deg]
Display voltage values: [:#(type=Boolean)]
Base voltage of the bus [kV]
Voltage magnitude (pu) [1]
Voltage angle [deg]
Active power [MW]
Reactive power [Mvar]
System base power [MVA]
System Frequeny [Hz]
Real part of the voltage
Imaginary part of the voltage
Real part of the current
Imaginary part of the current
Bus voltage magnitude (pu) [1]
Bus voltage angle [deg]
Display voltage values: [:#(type=Boolean)]
Base voltage of the bus [kV]
Voltage magnitude (pu) [1]
Voltage angle [deg]
Active power [MW]
Reactive power [Mvar]
System base power [MVA]
System Frequeny [Hz]
Real part of the voltage
Imaginary part of the voltage
Real part of the current
Imaginary part of the current
Bus voltage magnitude (pu) [1]
Bus voltage angle [deg]
Display voltage values: [:#(type=Boolean)]
Base voltage of the bus [kV]
Voltage magnitude (pu) [1]
Voltage angle [deg]
Active power [MW]
Reactive power [Mvar]
System base power [MVA]
System Frequeny [Hz]
Real part of the voltage
Imaginary part of the voltage
Real part of the current
Imaginary part of the current
Base voltage of the bus [kV]
Voltage magnitude (pu) [1]
Voltage angle [deg]
Active power [MW]
Reactive power [Mvar]
System base power [MVA]
System Frequeny [Hz]
Machine base power (MVA)
d-axis transient open-circuit time constant (s)
d-axis sub-transient open-circuit time constant (s)
q-axis transient open-circuit time constant (s)
Inertia constant (s)
Speed damping
d-axis reactance
q-axis reactance
d-axis transient reactance
d-axis sub-transient reactance
q-axis sub-transient reactance
leakage reactance
Saturation factor at 1.0 pu
Saturation factor at 1.2 pu
amature resistance
Machine terminal voltage (pu) [1]
Machine electrical power (pu on M_b)
Machine source current (pu)
Machine speed deviation (pu)
der(Machine speed deviation (pu))
Rotor angle (deg.)
der(Rotor angle (deg.))
Bus voltage angle (deg.)
Terminal current magnitude (pu)
Terminal current angle (deg.)
Active power (p.u. on S_b) [1]
Reactive power (p.u. on S_b) [1]
Electrical torque (pu)
d-axis armature current (pu)
q-axis armature current (pu)
d-axis terminal voltage (pu)
q-axis terminal voltage (pu)
System base speed (rad/s)
initial value of bus voltage angle in rad

Real component of initial terminal voltage
Imaginary component of intitial terminal voltage
Real component of initial armature current, systembase
Imaginary component of initial armature current, systembase
initial active power generation in pu machinebase
initial reactive power generation in pu machinebase
q-axis voltage behind transient reactance (pu)
der(q-axis voltage behind transient reactance (pu))
d-axis rotor flux linkage (pu)
der(d-axis rotor flux linkage (pu))
q-axis subtransient flux linkage (pu)
der(q-axis subtransient flux linkage (pu))
d-axis subtransient flux linkage (pu)
d-axis flux linkage (pu)
q-axis flux linkage (pu)
Real part of complex number
Imaginary part of complex number
Real part of complex number
Imaginary part of complex number
Real part of complex number
Imaginary part of complex number
Real part of complex number
Imaginary part of complex number
Real part of complex number
Imaginary part of complex number
rotor angle in radians
Real part of complex number
Imaginary part of complex number
Real part of complex number
Imaginary part of complex number
Real part of complex number
Imaginary part of complex number
Real part of complex number
Imaginary part of complex number
Real part of complex number
Imaginary part of complex number
q-axis component of intitial current
d-axis component of intitial current
d-axis component of intitial voltage
q-axis component of intitial voltage
Real part of complex number
Imaginary part of complex number
q-axis component of the sub-transient flux linkage
d-axis component of the sub-transient flux linkage
d-axis initial rotor flux linkage




Initial field voltage magnitude
Initial mechanical power, machine base




Base voltage of the bus [kV]
Voltage magnitude (pu) [1]
Voltage angle [deg]
Active power [MW]
Reactive power [Mvar]
System base power [MVA]
System Frequeny [Hz]
Real part of the voltage
Imaginary part of the voltage
Real part of the current
Imaginary part of the current
Base voltage of the bus [kV]
Voltage magnitude (pu) [1]
Voltage angle [deg]
Active power [MW]
Reactive power [Mvar]
System base power [MVA]
System Frequeny [Hz]
Machine base power (MVA)
d-axis transient open-circuit time constant (s)
d-axis sub-transient open-circuit time constant (s)
q-axis transient open-circuit time constant (s)
Inertia constant (s)
Speed damping
d-axis reactance
q-axis reactance
d-axis transient reactance
d-axis sub-transient reactance
q-axis sub-transient reactance
leakage reactance
Saturation factor at 1.0 pu
Saturation factor at 1.2 pu
amature resistance
Machine terminal voltage (pu) [1]
Machine electrical power (pu on M_b)
Machine source current (pu)
Machine speed deviation (pu)
der(Machine speed deviation (pu))
Rotor angle (deg.)
der(Rotor angle (deg.))
Bus voltage angle (deg.)
Terminal current magnitude (pu)
Terminal current angle (deg.)
Active power (p.u. on S_b) [1]
Reactive power (p.u. on S_b) [1]
Electrical torque (pu)
d-axis armature current (pu)
q-axis armature current (pu)
d-axis terminal voltage (pu)
q-axis terminal voltage (pu)
System base speed (rad/s)
initial value of bus voltage angle in rad

Real component of initial terminal voltage
Imaginary component of intitial terminal voltage
Real component of initial armature current, systembase
Imaginary component of initial armature current, systembase
initial active power generation in pu machinebase
initial reactive power generation in pu machinebase
q-axis voltage behind transient reactance (pu)
der(q-axis voltage behind transient reactance (pu))
d-axis rotor flux linkage (pu)
der(d-axis rotor flux linkage (pu))
q-axis subtransient flux linkage (pu)
der(q-axis subtransient flux linkage (pu))
d-axis subtransient flux linkage (pu)
d-axis flux linkage (pu)
q-axis flux linkage (pu)
Real part of complex number
Imaginary part of complex number
Real part of complex number
Imaginary part of complex number
Real part of complex number
Imaginary part of complex number
Real part of complex number
Imaginary part of complex number
Real part of complex number
Imaginary part of complex number
rotor angle in radians
Real part of complex number
Imaginary part of complex number
Real part of complex number
Imaginary part of complex number
Real part of complex number
Imaginary part of complex number
Real part of complex number
Imaginary part of complex number
Real part of complex number
Imaginary part of complex number
q-axis component of intitial current
d-axis component of intitial current
d-axis component of intitial voltage
q-axis component of intitial voltage
Real part of complex number
Imaginary part of complex number
q-axis component of the sub-transient flux linkage
d-axis component of the sub-transient flux linkage
d-axis initial rotor flux linkage




Initial field voltage magnitude
Initial mechanical power, machine base




Base voltage of the bus [kV]
Voltage magnitude (pu) [1]
Voltage angle [deg]
Active power [MW]
Reactive power [Mvar]
System base power [MVA]
System Frequeny [Hz]
Real part of the voltage
Imaginary part of the voltage
Real part of the current
Imaginary part of the current
Base voltage of the bus [kV]
Voltage magnitude (pu) [1]
Voltage angle [deg]
Active power [MW]
Reactive power [Mvar]
System base power [MVA]
System Frequeny [Hz]
Machine base power (MVA)
d-axis transient open-circuit time constant (s)
d-axis sub-transient open-circuit time constant (s)
q-axis transient open-circuit time constant (s)
Inertia constant (s)
Speed damping
d-axis reactance
q-axis reactance
d-axis transient reactance
d-axis sub-transient reactance
q-axis sub-transient reactance
leakage reactance
Saturation factor at 1.0 pu
Saturation factor at 1.2 pu
amature resistance
Machine terminal voltage (pu) [1]
Machine electrical power (pu on M_b)
Machine source current (pu)
Machine speed deviation (pu)
der(Machine speed deviation (pu))
Rotor angle (deg.)
der(Rotor angle (deg.))
Bus voltage angle (deg.)
Terminal current magnitude (pu)
Terminal current angle (deg.)
Active power (p.u. on S_b) [1]
Reactive power (p.u. on S_b) [1]
Electrical torque (pu)
d-axis armature current (pu)
q-axis armature current (pu)
d-axis terminal voltage (pu)
q-axis terminal voltage (pu)
System base speed (rad/s)
initial value of bus voltage angle in rad

Real component of initial terminal voltage
Imaginary component of intitial terminal voltage
Real component of initial armature current, systembase
Imaginary component of initial armature current, systembase
initial active power generation in pu machinebase
initial reactive power generation in pu machinebase
q-axis voltage behind transient reactance (pu)
der(q-axis voltage behind transient reactance (pu))
d-axis rotor flux linkage (pu)
der(d-axis rotor flux linkage (pu))
q-axis subtransient flux linkage (pu)
der(q-axis subtransient flux linkage (pu))
d-axis subtransient flux linkage (pu)
d-axis flux linkage (pu)
q-axis flux linkage (pu)
Real part of complex number
Imaginary part of complex number
Real part of complex number
Imaginary part of complex number
Real part of complex number
Imaginary part of complex number
Real part of complex number
Imaginary part of complex number
Real part of complex number
Imaginary part of complex number
rotor angle in radians
Real part of complex number
Imaginary part of complex number
Real part of complex number
Imaginary part of complex number
Real part of complex number
Imaginary part of complex number
Real part of complex number
Imaginary part of complex number
Real part of complex number
Imaginary part of complex number
q-axis component of intitial current
d-axis component of intitial current
d-axis component of intitial voltage
q-axis component of intitial voltage
Real part of complex number
Imaginary part of complex number
q-axis component of the sub-transient flux linkage
d-axis component of the sub-transient flux linkage
d-axis initial rotor flux linkage




Initial field voltage magnitude
Initial mechanical power, machine base




Base voltage of the bus [kV]
Voltage magnitude (pu) [1]
Voltage angle [deg]
Active power [MW]
Reactive power [Mvar]
System base power [MVA]
System Frequeny [Hz]
Real part of the voltage
Imaginary part of the voltage
Real part of the current
Imaginary part of the current
Base voltage of the bus [kV]
Voltage magnitude (pu) [1]
Voltage angle [deg]
Active power [MW]
Reactive power [Mvar]
System base power [MVA]
System Frequeny [Hz]
Machine base power (MVA)
d-axis transient open-circuit time constant (s)
d-axis sub-transient open-circuit time constant (s)
q-axis transient open-circuit time constant (s)
Inertia constant (s)
Speed damping
d-axis reactance
q-axis reactance
d-axis transient reactance
d-axis sub-transient reactance
q-axis sub-transient reactance
leakage reactance
Saturation factor at 1.0 pu
Saturation factor at 1.2 pu
amature resistance
Machine terminal voltage (pu) [1]
Machine electrical power (pu on M_b)
Machine source current (pu)
Machine speed deviation (pu)
der(Machine speed deviation (pu))
Rotor angle (deg.)
der(Rotor angle (deg.))
Bus voltage angle (deg.)
Terminal current magnitude (pu)
Terminal current angle (deg.)
Active power (p.u. on S_b) [1]
Reactive power (p.u. on S_b) [1]
Electrical torque (pu)
d-axis armature current (pu)
q-axis armature current (pu)
d-axis terminal voltage (pu)
q-axis terminal voltage (pu)
System base speed (rad/s)
initial value of bus voltage angle in rad

Real component of initial terminal voltage
Imaginary component of intitial terminal voltage
Real component of initial armature current, systembase
Imaginary component of initial armature current, systembase
initial active power generation in pu machinebase
initial reactive power generation in pu machinebase
q-axis voltage behind transient reactance (pu)
der(q-axis voltage behind transient reactance (pu))
d-axis rotor flux linkage (pu)
der(d-axis rotor flux linkage (pu))
q-axis subtransient flux linkage (pu)
der(q-axis subtransient flux linkage (pu))
d-axis subtransient flux linkage (pu)
d-axis flux linkage (pu)
q-axis flux linkage (pu)
Real part of complex number
Imaginary part of complex number
Real part of complex number
Imaginary part of complex number
Real part of complex number
Imaginary part of complex number
Real part of complex number
Imaginary part of complex number
Real part of complex number
Imaginary part of complex number
rotor angle in radians
Real part of complex number
Imaginary part of complex number
Real part of complex number
Imaginary part of complex number
Real part of complex number
Imaginary part of complex number
Real part of complex number
Imaginary part of complex number
Real part of complex number
Imaginary part of complex number
q-axis component of intitial current
d-axis component of intitial current
d-axis component of intitial voltage
q-axis component of intitial voltage
Real part of complex number
Imaginary part of complex number
q-axis component of the sub-transient flux linkage
d-axis component of the sub-transient flux linkage
d-axis initial rotor flux linkage




Initial field voltage magnitude
Initial mechanical power, machine base




Real part of the current
Imaginary part of the current
Real part of the current
Imaginary part of the current
Resistance (pu) [1]
Reactance (pu) [1]
Shunt half conductance (pu) [1]
Shunt half susceptance (pu) [1]
System base power (MVA) [MVA]
[s]
[s]
[:#(type=Integer)]
Display power flow results: [:#(type=Boolean)]
[MW]
[MW]
[Mvar]
[Mvar]
Real part of complex number [1]
Imaginary part of complex number [1]
Real part of complex number [1]
Imaginary part of complex number [1]
Real part of the current
Imaginary part of the current
Real part of the current
Imaginary part of the current
Resistance (pu) [1]
Reactance (pu) [1]
Shunt half conductance (pu) [1]
Shunt half susceptance (pu) [1]
System base power (MVA) [MVA]
[s]
[s]
[:#(type=Integer)]
Display power flow results: [:#(type=Boolean)]
[MW]
[MW]
[Mvar]
[Mvar]
Real part of complex number [1]
Imaginary part of complex number [1]
Real part of complex number [1]
Imaginary part of complex number [1]
Real part of the current
Imaginary part of the current
Real part of the current
Imaginary part of the current
Resistance (pu) [1]
Reactance (pu) [1]
Shunt half conductance (pu) [1]
Shunt half susceptance (pu) [1]
System base power (MVA) [MVA]
[s]
[s]
[:#(type=Integer)]
Display power flow results: [:#(type=Boolean)]
[MW]
[MW]
[Mvar]
[Mvar]
Real part of complex number [1]
Imaginary part of complex number [1]
Real part of complex number [1]
Imaginary part of complex number [1]
Real part of the current
Imaginary part of the current
Real part of the current
Imaginary part of the current
Resistance (pu) [1]
Reactance (pu) [1]
Shunt half conductance (pu) [1]
Shunt half susceptance (pu) [1]
System base power (MVA) [MVA]
[s]
[s]
[:#(type=Integer)]
Display power flow results: [:#(type=Boolean)]
[MW]
[MW]
[Mvar]
[Mvar]
Real part of complex number [1]
Imaginary part of complex number [1]
Real part of complex number [1]
Imaginary part of complex number [1]
Real part of the current
Imaginary part of the current
Real part of the current
Imaginary part of the current
Resistance (pu) [1]
Reactance (pu) [1]
Shunt half conductance (pu) [1]
Shunt half susceptance (pu) [1]
System base power (MVA) [MVA]
[s]
[s]
[:#(type=Integer)]
Display power flow results: [:#(type=Boolean)]
[MW]
[MW]
[Mvar]
[Mvar]
Real part of complex number [1]
Imaginary part of complex number [1]
Real part of complex number [1]
Imaginary part of complex number [1]
Real part of the current
Imaginary part of the current
Real part of the current
Imaginary part of the current
Resistance (pu) [1]
Reactance (pu) [1]
Shunt half conductance (pu) [1]
Shunt half susceptance (pu) [1]
System base power (MVA) [MVA]
[s]
[s]
[:#(type=Integer)]
Display power flow results: [:#(type=Boolean)]
[MW]
[MW]
[Mvar]
[Mvar]
Real part of complex number [1]
Imaginary part of complex number [1]
Real part of complex number [1]
Imaginary part of complex number [1]
Real part of the current
Imaginary part of the current
Real part of the current
Imaginary part of the current
Resistance (pu) [1]
Reactance (pu) [1]
Shunt half conductance (pu) [1]
Shunt half susceptance (pu) [1]
System base power (MVA) [MVA]
[s]
[s]
[:#(type=Integer)]
Display power flow results: [:#(type=Boolean)]
[MW]
[MW]
[Mvar]
[Mvar]
Real part of complex number [1]
Imaginary part of complex number [1]
Real part of complex number [1]
Imaginary part of complex number [1]
Real part of the current
Imaginary part of the current
Real part of the current
Imaginary part of the current
Resistance (pu) [1]
Reactance (pu) [1]
Shunt half conductance (pu) [1]
Shunt half susceptance (pu) [1]
System base power (MVA) [MVA]
[s]
[s]
[:#(type=Integer)]
Display power flow results: [:#(type=Boolean)]
[MW]
[MW]
[Mvar]
[Mvar]
Real part of complex number [1]
Imaginary part of complex number [1]
Real part of complex number [1]
Imaginary part of complex number [1]
Base voltage of the bus [kV]
Voltage magnitude (pu) [1]
Voltage angle [deg]
Active power [MW]
Reactive power [Mvar]
System base power [MVA]
System Frequeny [Hz]
Real part of complex number
Imaginary part of complex number
Real part of complex number
Imaginary part of complex number
Real part of complex number
Imaginary part of complex number
Real part of complex number
Imaginary part of complex number
Real part of complex number
Imaginary part of complex number
Constant power characteristic threshold [1]
[:#(type=Integer)]
Real part of the current
Imaginary part of the current
Bus voltage angle [rad|deg]
Bus voltage magnitude (pu) [1]
Active power consumption (pu)
Reactive power consumption (pu)
[rad|deg]
pu
pu
Initialitation
Initialitation
Initialitation
Initialitation
Real part of complex number
Imaginary part of complex number
Real part of complex number
Imaginary part of complex number
Real part of complex number
Imaginary part of complex number








Base voltage of the bus [kV]
Voltage magnitude (pu) [1]
Voltage angle [deg]
Active power [MW]
Reactive power [Mvar]
System base power [MVA]
System Frequeny [Hz]
Real part of complex number
Imaginary part of complex number
Real part of complex number
Imaginary part of complex number
Real part of complex number
Imaginary part of complex number
Real part of complex number
Imaginary part of complex number
Real part of complex number
Imaginary part of complex number
Constant power characteristic threshold [1]
[:#(type=Integer)]
Real part of the current
Imaginary part of the current
Bus voltage angle [rad|deg]
Bus voltage magnitude (pu) [1]
Active power consumption (pu)
Reactive power consumption (pu)
[rad|deg]
pu
pu
Initialitation
Initialitation
Initialitation
Initialitation
Real part of complex number
Imaginary part of complex number
Real part of complex number
Imaginary part of complex number
Real part of complex number
Imaginary part of complex number








Resistance (pu) [1]
Reactance (pu) [1]
Shunt half conductance (pu) [1]
Shunt half susceptance (pu) [1]
System base power (MVA) [MVA]
[s]
[s]
[:#(type=Integer)]
Display power flow results: [:#(type=Boolean)]
[MW]
[MW]
[Mvar]
[Mvar]
Real part of complex number [1]
Imaginary part of complex number [1]
Real part of complex number [1]
Imaginary part of complex number [1]
Real part of the current
Imaginary part of the current
Real part of the current
Imaginary part of the current
Resistance (pu) [1]
Reactance (pu) [1]
Shunt half conductance (pu) [1]
Shunt half susceptance (pu) [1]
System base power (MVA) [MVA]
[s]
[s]
[:#(type=Integer)]
Display power flow results: [:#(type=Boolean)]
[MW]
[MW]
[Mvar]
[Mvar]
Real part of complex number [1]
Imaginary part of complex number [1]
Real part of complex number [1]
Imaginary part of complex number [1]
Real part of the current
Imaginary part of the current
Resistance (pu) [1]
Reactance (pu) [1]
Shunt half conductance (pu) [1]
Shunt half susceptance (pu) [1]
System base power (MVA) [MVA]
[s]
[s]
[:#(type=Integer)]
Display power flow results: [:#(type=Boolean)]
[MW]
[MW]
[Mvar]
[Mvar]
Real part of complex number [1]
Imaginary part of complex number [1]
Real part of complex number [1]
Imaginary part of complex number [1]
Real part of the current
Imaginary part of the current
Resistance (pu) [1]
Reactance (pu) [1]
Shunt half conductance (pu) [1]
Shunt half susceptance (pu) [1]
System base power (MVA) [MVA]
[s]
[s]
[:#(type=Integer)]
Display power flow results: [:#(type=Boolean)]
[MW]
[MW]
[Mvar]
[Mvar]
Real part of complex number [1]
Imaginary part of complex number [1]
Real part of complex number [1]
Imaginary part of complex number [1]
Base voltage of the bus [kV]
Voltage magnitude (pu) [1]
Voltage angle [deg]
Active power [MW]
Reactive power [Mvar]
System base power [MVA]
System Frequeny [Hz]
Real part of the current
Imaginary part of the current
Bus voltage magnitude (pu) [1]
Bus voltage angle [deg]
Display voltage values: [:#(type=Boolean)]
Base voltage of the bus [kV]
Voltage magnitude (pu) [1]
Voltage angle [deg]
Active power [MW]
Reactive power [Mvar]
System base power [MVA]
System Frequeny [Hz]
Real part of the current
Imaginary part of the current
Bus voltage magnitude (pu) [1]
Bus voltage angle [deg]
Display voltage values: [:#(type=Boolean)]
Base voltage of the bus [kV]
Voltage magnitude (pu) [1]
Voltage angle [deg]
Active power [MW]
Reactive power [Mvar]
System base power [MVA]
System Frequeny [Hz]
Real part of the current
Imaginary part of the current
Bus voltage magnitude (pu) [1]
Bus voltage angle [deg]
Display voltage values: [:#(type=Boolean)]
Base voltage of the bus [kV]
Voltage magnitude (pu) [1]
Voltage angle [deg]
Active power [MW]
Reactive power [Mvar]
System base power [MVA]
System Frequeny [Hz]
Real part of the current
Imaginary part of the current
Bus voltage magnitude (pu) [1]
Bus voltage angle [deg]
Display voltage values: [:#(type=Boolean)]


[:#(type=Integer)]
[:#(type=Integer)]

Connector of Real output signal
Period for sampling the raw random numbers [s]
=true: y = noise, otherwise y = y_off [:#(type=Boolean)]
y = y_off if enableNoise=false (or time<startTime, see below)
= true: use global seed, otherwise ignore it [:#(type=Boolean)]
= true: use automatic local seed, otherwise use fixedLocalSeed [:#(type=Boolean)]
Local seed (any Integer number) [:#(type=Integer)]
Start time for sampling the raw random numbers [s]
The actual localSeed [:#(type=Integer)]
The global seed, which is actually used [:#(type=Integer)]
= true if noise shall be generated, otherwise no noise [:#(type=Boolean)]
Internal state of random number generator [:#(type=Integer)]
Internal state of random number generator [:#(type=Integer)]
Internal state of random number generator [:#(type=Integer)]
Internal state of random number generator [:#(type=Integer)]
Random number according to the desired distribution
Uniform random number in the range (0,1] []
Expectation (mean) value of the normal distribution
Standard deviation of the normal distribution
Number of inputs [:#(type=Integer)]
Connector of Real input signals
Connector of Real output signal
Optional: sum coefficients
Optional: sum coefficients



min frequency range of the signal [Hz]
max frequency range of the signal [Hz]
Gain
Real part of the voltage
Imaginary part of the voltage
Real part of complex number
Imaginary part of complex number
Real part of complex number
Imaginary part of complex number
Voltage drop between the two pins (= p.v - n.v) [V]
Real part of the voltage
Imaginary part of the voltage
Real part of complex number
Imaginary part of complex number
Connector of Real output signal
Period for sampling the raw random numbers [s]
=true: y = noise, otherwise y = y_off [:#(type=Boolean)]
y = y_off if enableNoise=false (or time<startTime, see below)
= true: use global seed, otherwise ignore it [:#(type=Boolean)]
= true: use automatic local seed, otherwise use fixedLocalSeed [:#(type=Boolean)]
Local seed (any Integer number) [:#(type=Integer)]
Start time for sampling the raw random numbers [s]
The actual localSeed [:#(type=Integer)]
The global seed, which is actually used [:#(type=Integer)]
= true if noise shall be generated, otherwise no noise [:#(type=Boolean)]
Internal state of random number generator [:#(type=Integer)]
Internal state of random number generator [:#(type=Integer)]
Internal state of random number generator [:#(type=Integer)]
Internal state of random number generator [:#(type=Integer)]
Random number according to the desired distribution
Uniform random number in the range (0,1] []
Expectation (mean) value of the normal distribution
Standard deviation of the normal distribution


[:#(type=Integer)]
[:#(type=Integer)]
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])































Number of inputs [:#(type=Integer)]
Optional: sum coefficients
Optional: sum coefficients
Real part of the current
Imaginary part of the current


[:#(type=Integer)]
[:#(type=Integer)]

Connector of Real output signal
Period for sampling the raw random numbers [s]
=true: y = noise, otherwise y = y_off [:#(type=Boolean)]
y = y_off if enableNoise=false (or time<startTime, see below)
= true: use global seed, otherwise ignore it [:#(type=Boolean)]
= true: use automatic local seed, otherwise use fixedLocalSeed [:#(type=Boolean)]
Local seed (any Integer number) [:#(type=Integer)]
Start time for sampling the raw random numbers [s]
The actual localSeed [:#(type=Integer)]
The global seed, which is actually used [:#(type=Integer)]
= true if noise shall be generated, otherwise no noise [:#(type=Boolean)]
Internal state of random number generator [:#(type=Integer)]
Internal state of random number generator [:#(type=Integer)]
Internal state of random number generator [:#(type=Integer)]
Internal state of random number generator [:#(type=Integer)]
Random number according to the desired distribution
Uniform random number in the range (0,1] []
Expectation (mean) value of the normal distribution
Standard deviation of the normal distribution
Number of inputs [:#(type=Integer)]
Connector of Real input signals
Connector of Real output signal
Optional: sum coefficients
Optional: sum coefficients



min frequency range of the signal [Hz]
max frequency range of the signal [Hz]
Gain
Real part of the voltage
Imaginary part of the voltage
Real part of complex number
Imaginary part of complex number
Real part of complex number
Imaginary part of complex number
Voltage drop between the two pins (= p.v - n.v) [V]
Real part of the voltage
Imaginary part of the voltage
Real part of complex number
Imaginary part of complex number
Connector of Real output signal
Period for sampling the raw random numbers [s]
=true: y = noise, otherwise y = y_off [:#(type=Boolean)]
y = y_off if enableNoise=false (or time<startTime, see below)
= true: use global seed, otherwise ignore it [:#(type=Boolean)]
= true: use automatic local seed, otherwise use fixedLocalSeed [:#(type=Boolean)]
Local seed (any Integer number) [:#(type=Integer)]
Start time for sampling the raw random numbers [s]
The actual localSeed [:#(type=Integer)]
The global seed, which is actually used [:#(type=Integer)]
= true if noise shall be generated, otherwise no noise [:#(type=Boolean)]
Internal state of random number generator [:#(type=Integer)]
Internal state of random number generator [:#(type=Integer)]
Internal state of random number generator [:#(type=Integer)]
Internal state of random number generator [:#(type=Integer)]
Random number according to the desired distribution
Uniform random number in the range (0,1] []
Expectation (mean) value of the normal distribution
Standard deviation of the normal distribution


[:#(type=Integer)]
[:#(type=Integer)]
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix A with excitation amplitudes (e.g., A=[A1(t1), A2(t1); A1(t2), A2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix B with excitation frequencies (e.g., B=[w1(t1) w1(t2) ; w2(t1) w2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])
Matrix C with phase shifts (e.g., C=[phi1(t1) phi1(t2) ; phi2(t1) phi2(t2)])































Number of inputs [:#(type=Integer)]
Optional: sum coefficients
Optional: sum coefficients
Real part of the current
Imaginary part of the current
Gain of input signal 1
Gain of input signal 2




